[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/actions/auth.js",
    "content": "import { getAuthServer } from '../reducers';\nimport * as api from '../api';\n\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CHANGE_AUTH_SERVER = 'CHANGE_AUTH_SERVER';\nexport const RESTORE_SESSION = 'RESTORE_SESSION';\n\nexport const changeAuthServer = (server) => ({\n    type: CHANGE_AUTH_SERVER,\n    server\n});\n\nexport const restoreSession = () => ({\n    type: RESTORE_SESSION\n});\n\nexport const signOut = () => ({\n    type: SIGN_OUT\n});\n\nexport const signIn = (credentials) => (dispatch, getState) => {\n    dispatch({ type: SIGN_IN_REQUEST });\n    const authServer = getAuthServer(getState());\n    const { remember, ...userData } = credentials;\n    api.signIn(authServer, userData).then(\n        (payload) => {\n            dispatch({ type: SIGN_IN_SUCCESS, payload, credentials })\n        },\n        ({ code, error }) => {\n            dispatch({ type: SIGN_IN_FAILURE, code, error });\n        }\n    );\n}\n\nexport const signUp = (credentials) => (dispatch, getState) => {\n    dispatch({ type: SIGN_UP_REQUEST });\n    const authServer = getAuthServer(getState());\n    api.signUp(authServer, credentials).then(\n        (payload) => {\n            dispatch({ type: SIGN_UP_SUCCESS, payload, credentials })\n        },\n        ({ code, error }) => {\n            dispatch({ type: SIGN_UP_FAILURE, code, error });\n        }\n    );\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/actions/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "SIGN_IN_REQUEST",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_IN_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_IN_REQUEST}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "SIGN_IN_FAILURE",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_IN_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_IN_FAILURE}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "SIGN_IN_SUCCESS",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_IN_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_IN_SUCCESS}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "SIGN_UP_REQUEST",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_UP_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_UP_REQUEST}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "SIGN_UP_FAILURE",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_UP_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_UP_FAILURE}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "SIGN_UP_SUCCESS",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_UP_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_UP_SUCCESS}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "SIGN_OUT",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~SIGN_OUT",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{SIGN_OUT}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "CHANGE_AUTH_SERVER",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~CHANGE_AUTH_SERVER",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{CHANGE_AUTH_SERVER}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "RESTORE_SESSION",
    "memberof": "src/actions/auth.js",
    "static": true,
    "longname": "src/actions/auth.js~RESTORE_SESSION",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{RESTORE_SESSION}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "changeAuthServer",
    "memberof": "src/actions/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/auth.js~changeAuthServer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{changeAuthServer}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "restoreSession",
    "memberof": "src/actions/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/auth.js~restoreSession",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{restoreSession}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "signOut",
    "memberof": "src/actions/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/auth.js~signOut",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{signOut}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "signIn",
    "memberof": "src/actions/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/auth.js~signIn",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{signIn}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "signUp",
    "memberof": "src/actions/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/auth.js~signUp",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/auth.js",
    "importStyle": "{signUp}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/actions/hosts.js",
    "content": "import { normalize } from 'normalizr';\nimport * as schema from '../schema';\nimport * as api from '../api';\nimport { getAuthToken, getMonitorsAddresses } from '../reducers';\n\nexport const GET_HOSTS_REQUEST = 'GET_HOSTS_REQUEST';\nexport const GET_HOSTS_SUCCESS = 'GET_HOSTS_SUCCESS';\nexport const GET_HOSTS_FAILURE = 'GET_HOSTS_FAILURE';\n\nexport const refreshHosts = () => (dispatch, getState) => {\n    const state = getState();\n    const token = getAuthToken(state);\n    const monitors = getMonitorsAddresses(state);\n    monitors.forEach(monitor => {\n        dispatch({ type: GET_HOSTS_REQUEST, monitor });\n        api.getHosts(monitor, token).then(\n            (hosts) => {\n                dispatch({ type: GET_HOSTS_SUCCESS, payload: normalize(hosts, [schema.host]), monitor })\n            },\n            ({ code, error }) => {\n                dispatch({ type: GET_HOSTS_FAILURE, code, error, monitor });\n            }\n        );\n    });\n};\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/actions/hosts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "GET_HOSTS_REQUEST",
    "memberof": "src/actions/hosts.js",
    "static": true,
    "longname": "src/actions/hosts.js~GET_HOSTS_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/hosts.js",
    "importStyle": "{GET_HOSTS_REQUEST}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "GET_HOSTS_SUCCESS",
    "memberof": "src/actions/hosts.js",
    "static": true,
    "longname": "src/actions/hosts.js~GET_HOSTS_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/hosts.js",
    "importStyle": "{GET_HOSTS_SUCCESS}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "GET_HOSTS_FAILURE",
    "memberof": "src/actions/hosts.js",
    "static": true,
    "longname": "src/actions/hosts.js~GET_HOSTS_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/hosts.js",
    "importStyle": "{GET_HOSTS_FAILURE}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "refreshHosts",
    "memberof": "src/actions/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/hosts.js~refreshHosts",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/hosts.js",
    "importStyle": "{refreshHosts}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/actions/liveCharts.js",
    "content": "import guid from '../utils/guid';\nimport * as api from '../api';\nimport { getMetricsAll, getAuthToken } from '../reducers';\n\nexport const ADD_LIVE_CHART = 'ADD_LIVE_CHART';\nexport const REMOVE_LIVE_CHART = 'REMOVE_LIVE_CHART';\nexport const CHANGE_METRIC_LIVE_CHART = 'CHANGE_METRIC_LIVE_CHART';\nexport const ADD_HOST_LIVE_CHART = 'ADD_HOST_LIVE_CHART';\nexport const REMOVE_HOST_LIVE_CHART = 'REMOVE_HOST_LIVE_CHART';\n\nexport const addLiveChart = (metric) => ({\n    type: ADD_LIVE_CHART,\n    metric,\n    id: guid()\n});\n\nexport const removeLiveChart = (id) => ({\n    type: REMOVE_LIVE_CHART,\n    id\n});\n\nexport const changeMetricLiveChart = (id, metric) => ({\n    type: CHANGE_METRIC_LIVE_CHART,\n    id,\n    metric\n});\n\nexport const addHostLiveChart = (id, host) => ({\n    type: ADD_HOST_LIVE_CHART,\n    id,\n    host\n});\n\nexport const removeHostLiveChart = (id, host) => ({\n    type: REMOVE_HOST_LIVE_CHART,\n    id,\n    host\n});\n\nexport const getData = (start, end, metric, hosts) => (dispatch, getState) => {\n    const state = getState();\n    const token = getAuthToken(state);\n    const allMetricHosts = getMetricsAll(state)[metric].hosts;\n    const filteredHosts = allMetricHosts.filter(v => hosts.indexOf(v.host) !== -1);\n    const grouped = filteredHosts.reduce((c, { host, monitor }) => ({\n        ...c,\n        [monitor]: [\n            ...(c[monitor] || []),\n            host\n        ]\n    }), {});\n    return Promise.all(Object.entries(grouped).map(([ monitor, monitorHosts ]) => (\n        api.getMeasurements(monitor, token, { [metric]: monitorHosts }, start, end)\n    )));\n};\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/actions/liveCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "ADD_LIVE_CHART",
    "memberof": "src/actions/liveCharts.js",
    "static": true,
    "longname": "src/actions/liveCharts.js~ADD_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{ADD_LIVE_CHART}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "REMOVE_LIVE_CHART",
    "memberof": "src/actions/liveCharts.js",
    "static": true,
    "longname": "src/actions/liveCharts.js~REMOVE_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{REMOVE_LIVE_CHART}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "CHANGE_METRIC_LIVE_CHART",
    "memberof": "src/actions/liveCharts.js",
    "static": true,
    "longname": "src/actions/liveCharts.js~CHANGE_METRIC_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{CHANGE_METRIC_LIVE_CHART}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "ADD_HOST_LIVE_CHART",
    "memberof": "src/actions/liveCharts.js",
    "static": true,
    "longname": "src/actions/liveCharts.js~ADD_HOST_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{ADD_HOST_LIVE_CHART}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "REMOVE_HOST_LIVE_CHART",
    "memberof": "src/actions/liveCharts.js",
    "static": true,
    "longname": "src/actions/liveCharts.js~REMOVE_HOST_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{REMOVE_HOST_LIVE_CHART}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "addLiveChart",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~addLiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{addLiveChart}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "metric",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "removeLiveChart",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~removeLiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{removeLiveChart}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "changeMetricLiveChart",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~changeMetricLiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{changeMetricLiveChart}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "metric",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "addHostLiveChart",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~addHostLiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{addHostLiveChart}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "removeHostLiveChart",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~removeHostLiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{removeHostLiveChart}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "getData",
    "memberof": "src/actions/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/liveCharts.js~getData",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/liveCharts.js",
    "importStyle": "{getData}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      },
      {
        "name": "metric",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/actions/monitors.js",
    "content": "export const CHANGE_MONITOR_ADDRESS = 'CHANGE_MONITOR_ADDRESS';\nexport const CHANGE_MONITOR_DESCRIPTION = 'CHANGE_MONITOR_DESCRIPTION';\nexport const CHANGE_MONITOR = 'CHANGE_MONITOR';\nexport const ADD_MONITOR = 'ADD_MONITOR';\nexport const REMOVE_MONITOR = 'REMOVE_MONITOR';\n\nexport const changeMonitorAddress = (address, newAddress) => ({\n    type: CHANGE_MONITOR_ADDRESS,\n    address,\n    newAddress\n});\n\nexport const changeMonitorDescription = (address, newDescription) => ({\n    type: CHANGE_MONITOR_DESCRIPTION,\n    address,\n    newDescription\n});\n\nexport const changeMonitor = (address, payload) => ({\n    type: CHANGE_MONITOR,\n    address,\n    payload\n});\n\nexport const addMonitor = (payload) => ({\n    type: ADD_MONITOR,\n    payload\n});\n\nexport const removeMonitor = (address) => ({\n    type: REMOVE_MONITOR,\n    address\n});\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/actions/monitors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "CHANGE_MONITOR_ADDRESS",
    "memberof": "src/actions/monitors.js",
    "static": true,
    "longname": "src/actions/monitors.js~CHANGE_MONITOR_ADDRESS",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{CHANGE_MONITOR_ADDRESS}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "CHANGE_MONITOR_DESCRIPTION",
    "memberof": "src/actions/monitors.js",
    "static": true,
    "longname": "src/actions/monitors.js~CHANGE_MONITOR_DESCRIPTION",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{CHANGE_MONITOR_DESCRIPTION}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "CHANGE_MONITOR",
    "memberof": "src/actions/monitors.js",
    "static": true,
    "longname": "src/actions/monitors.js~CHANGE_MONITOR",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{CHANGE_MONITOR}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "ADD_MONITOR",
    "memberof": "src/actions/monitors.js",
    "static": true,
    "longname": "src/actions/monitors.js~ADD_MONITOR",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{ADD_MONITOR}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "REMOVE_MONITOR",
    "memberof": "src/actions/monitors.js",
    "static": true,
    "longname": "src/actions/monitors.js~REMOVE_MONITOR",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{REMOVE_MONITOR}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "changeMonitorAddress",
    "memberof": "src/actions/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/monitors.js~changeMonitorAddress",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{changeMonitorAddress}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "newAddress",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "changeMonitorDescription",
    "memberof": "src/actions/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/monitors.js~changeMonitorDescription",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{changeMonitorDescription}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "newDescription",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "changeMonitor",
    "memberof": "src/actions/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/monitors.js~changeMonitor",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{changeMonitor}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "addMonitor",
    "memberof": "src/actions/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/monitors.js~addMonitor",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{addMonitor}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "removeMonitor",
    "memberof": "src/actions/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/monitors.js~removeMonitor",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/monitors.js",
    "importStyle": "{removeMonitor}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/actions/router.js",
    "content": "import { push } from 'react-router-redux';\n\nexport const goHome = () => push('/');",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/actions/router.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "goHome",
    "memberof": "src/actions/router.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/router.js~goHome",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/actions/router.js",
    "importStyle": "{goHome}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/api.js",
    "content": "import escapeRegExp from './utils/escapeRegExp';\n\nconst apiError = (r) => {\n    return Promise.reject({ code: null, error: String(r) });\n}\n\nconst jsonOrThrow = (r) => {\n    return r.ok ? r.json() : Promise.reject({ code: r.status, error: r.statusText })\n};\n\n/*\n\nexport const signIn = (server, payload) => fetch(`${server}/login`, {\n    body: JSON.stringify(payload),\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'POST'\n}).then(jsonOrThrow, apiError);\n\nexport const signUp = (server, payload) => fetch(`${server}/registration`, {\n    body: JSON.stringify(payload),\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'POST'\n}).then(jsonOrThrow, apiError);\n\n*/\n\nexport const signIn = () => Promise.resolve({ token: 'token' });\nexport const signUp = () => Promise.resolve({ token: 'token' });\n\nexport const getHosts = (server, token) => fetch(`${server}/hosts?q=.*`, {\n    headers: {\n        'Authorization': `Bearer ${token}`\n    }\n}).then(jsonOrThrow, apiError);\n\nexport const getMeasurements = (server, token, metricsWithHosts, start, end) => {\n    const q = Object.entries(metricsWithHosts).map(([ metric, hosts ]) => (\n        `metric_id:${metric},NAME:/^(${hosts.map(escapeRegExp).join('|')})$/`\n    )).join(';');\n    const qsParts = { q, start, end };\n    const qs = Object.entries(qsParts).filter(([ k, v ]) => v).map(([ k, v ]) => `${k}=${encodeURIComponent(v)}`).join('&');\n    return fetch(`${server}/measurements?${qs}`, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    }).then(jsonOrThrow, apiError);\n};\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "apiError",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~apiError",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "jsonOrThrow",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~jsonOrThrow",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "signIn",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~signIn",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": "{signIn}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "signUp",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~signUp",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": "{signUp}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "getHosts",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~getHosts",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": "{getHosts}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "getMeasurements",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~getMeasurements",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/api.js",
    "importStyle": "{getMeasurements}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "metricsWithHosts",
        "types": [
          "*"
        ]
      },
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/components/AddChart/index.js",
    "content": "import React from 'react';\nimport { Button, Select } from 'antd';\nimport './index.less';\n\nclass AddChart extends React.PureComponent {\n\n    state = {\n        value: undefined\n    };\n\n    onChange = (value) => {\n        this.setState({ value });\n    }\n\n    onButtonClick = () => {\n        this.props.onAdd(this.state.value);\n        this.setState({ value: undefined });\n    }\n\n    render() {\n        const { metrics } = this.props;\n        const { value } = this.state;\n        return (\n            <div className=\"add-chart\">\n                <Select className=\"add-chart-select\" placeholder=\"Wybierz metrykę\" allowClear value={value} onChange={this.onChange}>\n                    {metrics.map(({ id, description }) => (\n                        <Select.Option key={id} value={id} title={description}>{id}</Select.Option>\n                    ))}\n                </Select>\n                <Button className=\"add-chart-button\" type=\"primary\" onClick={this.onButtonClick} disabled={!value}>Dodaj wykres</Button>\n            </div>\n        );\n    }\n\n}\n\nexport default AddChart;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/AddChart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "class",
    "name": "AddChart",
    "memberof": "src/components/AddChart/index.js",
    "static": true,
    "longname": "src/components/AddChart/index.js~AddChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/AddChart/index.js",
    "importStyle": "AddChart",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#state",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "onButtonClick",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#onButtonClick",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#render",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/components/AppLayout/__tests__/layout.js",
    "content": "import React from 'react';\nimport Enzyme, { shallow } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport AppLayout from '../index.js';\n\nEnzyme.configure({adapter: new Adapter()});\n\nit('contains Res-Mon title', () => {\n    const layout = shallow(<AppLayout location={{ pathname: 'test-pathname' }}>Junk</AppLayout>);\n    expect(layout.find('.title').children().text()).toEqual('Res-Mon');\n});\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/AppLayout/__tests__/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/components/AppLayout/index.js",
    "content": "import React from 'react';\nimport { Layout, Menu, LocaleProvider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport pl_PL from 'antd/lib/locale-provider/pl_PL';\nimport 'moment/locale/pl';\nimport './layout.less';\n\nconst { Sider, Content, Footer } = Layout;\n\nconst AppLayout = ({ children, location, auth, signOut }) => (\n    <LocaleProvider locale={pl_PL}>\n        <Layout className=\"app-root\">\n            <Sider breakpoint=\"lg\" collapsedWidth=\"0\" className=\"app-side\">\n                <Link to=\"/\" className=\"title\">Res-Mon</Link>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"inline\"\n                    className=\"menu\"\n                    selectedKeys={[ location.pathname ]}\n                    onClick={(item) => item.key === 'sign-out' && signOut()}\n                >\n                    {auth && <Menu.Item key=\"/live\">\n                        <Link to=\"/live\">Pomiary na żywo</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key=\"/historical\">\n                        <Link to=\"/historical\">Pomiary historyczne</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key=\"/metrics\">\n                        <Link to=\"/metrics\">Hosty i Metryki</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key=\"/monitors\">\n                        <Link to=\"/monitors\">Monitory</Link>\n                    </Menu.Item>}\n                    {!auth && <Menu.Item key=\"/sign-in\">\n                        <Link to=\"/sign-in\">Logowanie</Link>\n                    </Menu.Item>}\n                    {!auth && <Menu.Item key=\"/sign-up\">\n                        <Link to=\"/sign-up\">Rejestracja</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key=\"sign-out\">Wyloguj się</Menu.Item>}\n                </Menu>\n            </Sider>\n            <Layout className=\"app-content-wrapper\">\n                <Content className=\"app-content\">\n                    {React.cloneElement(children, { location })}\n                </Content>\n                <Footer className=\"app-footer\">\n                    &copy; <a href=\"https://github.com/MAD-FiS\">MAD-Team</a> (\n                    <a href=\"https://github.com/drzazga888\">drzazga888</a>&nbsp;\n                    / <a href=\"https://github.com/Grzegorz-00\">Grzegorz-00</a>&nbsp;\n                    / <a href=\"https://github.com/GrzegorzR\">GrzegorzR</a>&nbsp;\n                    / <a href=\"https://github.com/IanRacon\">IanRacon</a>&nbsp;\n                    / <a href=\"https://github.com/kawues\">kawues</a>&nbsp;\n                    / <a href=\"https://github.com/lukasz22\">lukasz22</a>&nbsp;\n                    / <a href=\"https://github.com/tbajorek\">tbajorek</a>&nbsp;\n                    / <a href=\"https://github.com/tchw\">tchw</a>&nbsp;\n                    / <a href=\"https://github.com/XtorukmaktoX\">XtorukmaktoX</a>\n                    ) 2018.\n                </Footer>\n            </Layout>\n        </Layout>\n    </LocaleProvider>\n);\n\nexport default AppLayout;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/AppLayout/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "Sider",
    "memberof": "src/components/AppLayout/index.js",
    "static": true,
    "longname": "src/components/AppLayout/index.js~Sider",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "AppLayout",
    "memberof": "src/components/AppLayout/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/AppLayout/index.js~AppLayout",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/AppLayout/index.js",
    "importStyle": "AppLayout",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"children\": *, \"location\": *, \"auth\": *, \"signOut\": *}"
        ],
        "defaultRaw": {
          "children": null,
          "location": null,
          "auth": null,
          "signOut": null
        },
        "defaultValue": "{\"children\":null,\"location\":null,\"auth\":null,\"signOut\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/components/AuthServer/index.js",
    "content": "import React from 'react';\nimport EditableCell from '../EditableTable/EditableCell';\nimport './index.less'\n\nclass AuthServer extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMode: false,\n            authServer: this.props.authServer\n        };\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (this.props.authServer !== newProps.authServer) {\n            this.setState({ authServer: newProps.authServer });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.editMode && !prevState.editMode) {\n            this.refs.root.getElementsByTagName('input')[0].focus();\n        }\n    }\n\n    onEditStart = () => {\n        this.setState({ editMode: true });\n    }\n\n    onEditCancel = () => {\n        this.setState({ editMode: false, authServer: this.props.authServer });\n    }\n\n    onHandleChange = (a, b, authServer) => {\n        this.setState({ authServer });\n    }\n\n    onSave = () => {\n        this.props.changeAuthServer(this.state.authServer);\n        this.setState({ editMode: false });\n    }\n\n    render() {\n        const { authServer, editMode } = this.state;\n        return (\n            <div className=\"auth-server\" ref=\"root\">\n                <span>Server autoryzacyjny:&nbsp;</span>\n                <EditableCell\n                    value={authServer}\n                    editable={true}\n                    onHandleChange={this.onHandleChange}\n                    editMode={editMode}\n                    onEditStart={this.onEditStart}\n                    onEditCancel={this.onEditCancel}\n                    onSave={this.onSave}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default AuthServer;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/AuthServer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "AuthServer",
    "memberof": "src/components/AuthServer/index.js",
    "static": true,
    "longname": "src/components/AuthServer/index.js~AuthServer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/AuthServer/index.js",
    "importStyle": "AuthServer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"editMode\": *, \"authServer\": *}"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "newProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "prevState",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "onEditStart",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onEditStart",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "onEditCancel",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onEditCancel",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "onHandleChange",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onHandleChange",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "onSave",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onSave",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#render",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/components/Chart/ChartDeleteButton.js",
    "content": "import React from 'react';\nimport { Icon, Popconfirm } from 'antd';\n\nconst ChartDeleteButton = ({ onDelete }) => (\n    <Popconfirm title=\"Na pewno chcesz usunąć ten wykres?\" onConfirm={onDelete} okText=\"Usuń\" cancelText=\"Anuluj\">\n        <a className=\"chart-delete-button\">\n            <Icon type=\"delete\" />\n        </a>\n    </Popconfirm>\n);\n\nexport default ChartDeleteButton;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/ChartDeleteButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "ChartDeleteButton",
    "memberof": "src/components/Chart/ChartDeleteButton.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartDeleteButton.js~ChartDeleteButton",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/ChartDeleteButton.js",
    "importStyle": "ChartDeleteButton",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onDelete\": *}"
        ],
        "defaultRaw": {
          "onDelete": null
        },
        "defaultValue": "{\"onDelete\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "src/components/Chart/ChartEngine.js",
    "content": "import React from 'react';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsBoost from 'highcharts/modules/boost';\nimport strToColor from '../../utils/strToColor';\nimport moment from 'moment';\n\nHighchartsBoost(Highcharts);\n\nHighcharts.setOptions({\n    lang: {\n        months: ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\n        shortMonths: ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'Paź', 'Lis', 'Gru'],\n        weekdays: ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota']\n    },\n    global: {\n        useUTC: false\n    }\n});\n\nconst mapData = (data, withDataLabel) => {\n    if (withDataLabel) {\n        return data.map(({ time, value }, i) => ({\n            x: moment(time + 'Z').valueOf(),\n            y: value\n        }));\n    } else {\n        return data.map(({ time, value }) => [ moment(time).valueOf(), value ]);\n    }\n};\n\nclass ChartEngine extends React.Component {\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.metric1Measurements !== nextProps.metric1Measurements\n            || this.props.metric2Measurements !== nextProps.metric2Measurements;\n    }\n\n    componentDidMount() {\n        this.createChart();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.metric1LastUpdate && this.props.metric1LastUpdate !== prevProps.metric1LastUpdate) {\n            this.addPoints();\n        }\n        else {\n            this.destroyChart();\n            this.createChart();\n        }\n    }\n\n    componentWillUnmount() {\n        this.destroyChart();\n    }\n\n    addPoints() {\n        const { metric1Info, metric1LastUpdate, metric1Measurements, metric1HostsSelected } = this.props;\n        metric1HostsSelected\n            .map(host => ({\n                host,\n                points: metric1Measurements[host].slice(-metric1LastUpdate[host])\n            }))\n            .forEach(({ host, points }) => {\n                let series = this.chart.get(`${metric1Info.id}:${host}`);\n                points.forEach(({ time, value }) => {\n                    series.removePoint(0, false);\n                    series.addPoint({\n                        x: moment(time).valueOf(),\n                        y: value\n                    }, false);\n                });\n            });\n        this.chart.redraw(true);\n    }\n\n    createChart() {\n        const {\n            metric1Info, metric1Measurements,\n            metric2Info, metric2Measurements,\n            navigatorDisabled, withDataLabel\n        } = this.props;\n        let yAxis = [\n            {\n                id: metric1Info.id,\n                title: {\n                    text: metric1Info.id\n                },\n                labels: {\n                    format: '{value}' + metric1Info.unit\n                },\n                opposite: false\n            }\n        ];\n        let series = Object.entries(metric1Measurements).map(([ host, data ]) => ({\n            name: `${metric1Info.id}, ${host}`,\n            id: `${metric1Info.id}:${host}`,\n            data: mapData(data, withDataLabel),\n            color: strToColor(host),\n            yAxis: metric1Info.id,\n            tooltip: {\n                valueSuffix: metric1Info.unit\n            }\n        }));\n        if (metric2Measurements && Object.keys(metric2Measurements).length > 0) {\n            yAxis.push({\n                id: metric2Info.id,\n                title: {\n                    text: metric2Info.id\n                },\n                labels: {\n                    format: '{value}' + metric2Info.unit\n                },\n                gridLineWidth: 0,\n                opposite: true\n            });\n            series = series.concat(Object.entries(metric2Measurements || []).map(([ host, data ]) => ({\n                name: `${metric2Info.id}, ${host}`,\n                id: `${metric2Info.id}:${host}`,\n                data: mapData(data, withDataLabel),\n                color: strToColor(host),\n                yAxis: metric2Info.id,\n                tooltip: {\n                    valueSuffix: metric2Info.unit\n                },\n                dashStyle: 'Dash'\n            })));\n        }\n        this.chart = Highcharts.stockChart(this.refs.chart, {\n            series,\n            plotOptions: {\n                /*line: {\n                    dataGrouping: {\n                        enabled: false\n                    }\n                }*/\n                series: {\n                    dataLabels: {\n                        formatter: function() {\n                            if (this.point.index !== this.series.data.length - 1) {\n                                return null;\n                            }\n                            return `\n                                <span style=\"color: ${this.color};\">${this.series.name}</span><br />\n                                <strong style=\"color: ${this.color};\">${Highcharts.numberFormat(this.y, this.series.tooltipOptions.valueDecimals)}${this.series.tooltipOptions.valueSuffix}</strong>\n                            `;\n                        },\n                        enabled: withDataLabel\n                    }\n                }\n            },\n            chart: {\n                backgroundColor: 'transparent'\n            },\n            tooltip: {\n                split: true,\n                crosshairs: true,\n                valueDecimals: 2\n            },\n            boost: {\n                useGPUTranslations: true\n            },\n            scrollbar: {\n                liveRedraw: false,\n                enabled: !navigatorDisabled\n            },\n            rangeSelector: {\n                inputEnabled: false\n            },\n            navigator: {\n                enabled: !navigatorDisabled\n            },\n            yAxis\n        });\n        this.chartLoadTimeout = setTimeout(() => this.chart.reflow());\n    }\n\n    destroyChart() {\n        if (this.chartLoadTimeout) {\n            clearTimeout(this.chartLoadTimeout);\n        }\n        this.chart.destroy();\n        this.chart = null;\n    }\n\n    render() {\n        return <div className=\"chart\" ref=\"chart\"></div>;\n    }\n\n}\n\nexport default ChartEngine;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/ChartEngine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "mapData",
    "memberof": "src/components/Chart/ChartEngine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartEngine.js~mapData",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartEngine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "withDataLabel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "ChartEngine",
    "memberof": "src/components/Chart/ChartEngine.js",
    "static": true,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/ChartEngine.js",
    "importStyle": "ChartEngine",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "shouldComponentUpdate",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#shouldComponentUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "addPoints",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#addPoints",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "createChart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#createChart",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "chart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#chart",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "chartLoadTimeout",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#chartLoadTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "destroyChart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#destroyChart",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#render",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/components/Chart/ChartLegend.js",
    "content": "import React from 'react';\nimport { Select, List, Icon } from 'antd';\nimport strToColor from '../../utils/strToColor';\n\nconst { Option } = Select;\n\nconst MetricHeader = ({ allowClear, label, value, onChange, metrices }) => (\n    <div className=\"metric-header\">\n        <strong className=\"metric-name\">{label}:</strong>\n        <Select\n            showSearch\n            allowClear={allowClear}\n            value={value}\n            onChange={onChange}\n            placeholder=\"Wybierz metrykę\"\n            className=\"metric-selector\"\n        >\n            {metrices.map(m => <Option key={m} value={m}>{m}</Option>)}\n        </Select>\n    </div>\n);\n\nconst HostsSelector = ({ all, selected, onDismiss }) => (\n    <List\n        size=\"small\"\n        dataSource={selected}\n        renderItem={host => (\n            <List.Item\n                actions={[\n                    <a onClick={onDismiss.bind(this, host)}><Icon type=\"close\" /></a>\n                ]}\n            >\n                <div className=\"series-dot\" style={{ backgroundColor: strToColor(host) }}></div>\n                {host}\n            </List.Item>\n        )}\n    />\n);\n\nclass HostsAdder extends React.PureComponent {\n\n    state = {};\n\n    componentWillReceiveProps(nextProps) {\n        if (\n            this.state.value\n            && (\n                nextProps.all.indexOf(this.state.value) === -1\n                || nextProps.selected.indexOf(this.state.value) !== -1\n            )\n        ) {\n            this.setState({ value: undefined });\n        }\n    }\n\n    onValueChange = (value) => {\n        this.setState({ value });\n    }\n\n    onSubmit = () => {\n        if (this.state.value) {\n            this.props.onSubmit(this.state.value);\n        }\n    }\n\n    render() {\n        const { all, selected } = this.props;\n        const { value } = this.state;\n        const dropdownValues = all.filter(h => selected.indexOf(h) === -1);\n        return (\n            <div className=\"hosts-adder\">\n                <Select showSearch allowClear placeholder=\"Wybierz host\" value={value} onChange={this.onValueChange} className=\"hosts-selector\">\n                    {dropdownValues.map(h => <Option key={h} value={h}>{h}</Option>)}\n                </Select>\n                <a className=\"add-button\" onClick={this.onSubmit}><Icon type=\"plus\" /></a>\n            </div>\n        );\n    }\n\n}\n\nconst ChartLegend = ({ necessary, label, metrices, metricInfo, hostsSelected, onMetricChanged, onHostAdded, onHostDismissed }) => (\n    <div className=\"chart-legend\">\n        <MetricHeader allowClear={!necessary} label={label} value={metricInfo ? metricInfo.id : undefined} onChange={onMetricChanged} metrices={metrices} />\n        {necessary || metricInfo ?\n            <HostsSelector all={metricInfo.hosts.map(h => h.host)} selected={hostsSelected} onDismiss={onHostDismissed} />\n        : null}\n        {necessary || metricInfo ?\n            <HostsAdder all={metricInfo.hosts.map(h => h.host)} selected={hostsSelected} onSubmit={onHostAdded} />\n        : null}\n    </div>\n);\n\nexport default ChartLegend;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/ChartLegend.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/Chart/ChartLegend.js",
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~Option",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "MetricHeader",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~MetricHeader",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"allowClear\": *, \"label\": *, \"value\": *, \"onChange\": *, \"metrices\": *}"
        ],
        "defaultRaw": {
          "allowClear": null,
          "label": null,
          "value": null,
          "onChange": null,
          "metrices": null
        },
        "defaultValue": "{\"allowClear\":null,\"label\":null,\"value\":null,\"onChange\":null,\"metrices\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "HostsSelector",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~HostsSelector",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"all\": *, \"selected\": *, \"onDismiss\": *}"
        ],
        "defaultRaw": {
          "all": null,
          "selected": null,
          "onDismiss": null
        },
        "defaultValue": "{\"all\":null,\"selected\":null,\"onDismiss\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "HostsAdder",
    "memberof": "src/components/Chart/ChartLegend.js",
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ],
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#state",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "onValueChange",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#onValueChange",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "onSubmit",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#onSubmit",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#render",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "ChartLegend",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~ChartLegend",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/ChartLegend.js",
    "importStyle": "ChartLegend",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"necessary\": *, \"label\": *, \"metrices\": *, \"metricInfo\": *, \"hostsSelected\": *, \"onMetricChanged\": *, \"onHostAdded\": *, \"onHostDismissed\": *}"
        ],
        "defaultRaw": {
          "necessary": null,
          "label": null,
          "metrices": null,
          "metricInfo": null,
          "hostsSelected": null,
          "onMetricChanged": null,
          "onHostAdded": null,
          "onHostDismissed": null
        },
        "defaultValue": "{\"necessary\":null,\"label\":null,\"metrices\":null,\"metricInfo\":null,\"hostsSelected\":null,\"onMetricChanged\":null,\"onHostAdded\":null,\"onHostDismissed\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/components/Chart/ChartTimeRange.js",
    "content": "import React from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst ChartTimeRange = ({ from, to, onChange }) => (\n    <div className=\"chart-time-range\">\n        Przedział czasu: <RangePicker\n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm:ss\"\n            defaultValue={[ moment(from), moment(to) ]}\n            onOk={([ from, to ]) => onChange(from.format(), to.format())}\n        />\n    </div>\n)\n\nexport default ChartTimeRange;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/ChartTimeRange.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "RangePicker",
    "memberof": "src/components/Chart/ChartTimeRange.js",
    "static": true,
    "longname": "src/components/Chart/ChartTimeRange.js~RangePicker",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/ChartTimeRange.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "ChartTimeRange",
    "memberof": "src/components/Chart/ChartTimeRange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartTimeRange.js~ChartTimeRange",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/ChartTimeRange.js",
    "importStyle": "ChartTimeRange",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"from\": *, \"to\": *, \"onChange\": *}"
        ],
        "defaultRaw": {
          "from": null,
          "to": null,
          "onChange": null
        },
        "defaultValue": "{\"from\":null,\"to\":null,\"onChange\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "src/components/Chart/HistoricalChart.js",
    "content": "import React from 'react';\nimport ChartEngine from './ChartEngine';\nimport ChartLegend from './ChartLegend';\nimport ChartTimeRange from './ChartTimeRange';\nimport ChartDeleteButton from './ChartDeleteButton';\n\nconst HistoricalChart = ({\n    metric1Info, metric1Measurements, metric1HostsSelected,\n    metric2Info, metric2Measurements, metric2HostsSelected,\n    metrices, indeterminate, rangeFrom, rangeTo,\n    onMetric1Changed, onHostDismissedFromMetric1, onHostAddedToMetric1,\n    onMetric2Changed, onHostDismissedFromMetric2, onHostAddedToMetric2,\n    onRangeChanged, onChartClosed\n}) => (\n    <div className={`chart-container ${indeterminate ? 'indeterminate' : ''}`}>\n        <div className=\"chart-container-main\">\n            <div className=\"chart-corner\">\n                <ChartTimeRange from={rangeFrom} to={rangeTo} onChange={onRangeChanged} />\n                <ChartDeleteButton onDelete={onChartClosed} />\n            </div>\n            <ChartEngine\n                metric1Info={metric1Info}\n                metric1Measurements={metric1Measurements}\n                metric2Info={metric2Info}\n                metric2Measurements={metric2Measurements}\n            />\n        </div>\n        <div className=\"chart-container-side\">\n            <ChartLegend\n                necessary\n                label=\"Metryka podstawowa\"\n                metrices={metrices}\n                metricInfo={metric1Info}\n                hostsSelected={metric1HostsSelected}\n                onMetricChanged={onMetric1Changed}\n                onHostAdded={onHostAddedToMetric1}\n                onHostDismissed={onHostDismissedFromMetric1}\n            />\n            <ChartLegend\n                label=\"Metryka dodatkowa\"\n                metrices={metrices}\n                metricInfo={metric2Info}\n                hostsSelected={metric2HostsSelected}\n                onMetricChanged={onMetric2Changed}\n                onHostAdded={onHostAddedToMetric2}\n                onHostDismissed={onHostDismissedFromMetric2}\n            />\n        </div>\n    </div>\n)\n\nexport default HistoricalChart;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/HistoricalChart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "HistoricalChart",
    "memberof": "src/components/Chart/HistoricalChart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/HistoricalChart.js~HistoricalChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/HistoricalChart.js",
    "importStyle": "HistoricalChart",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metric1Info\": *, \"metric1Measurements\": *, \"metric1HostsSelected\": *, \"metric2Info\": *, \"metric2Measurements\": *, \"metric2HostsSelected\": *, \"metrices\": *, \"indeterminate\": *, \"rangeFrom\": *, \"rangeTo\": *, \"onMetric1Changed\": *, \"onHostDismissedFromMetric1\": *, \"onHostAddedToMetric1\": *, \"onMetric2Changed\": *, \"onHostDismissedFromMetric2\": *, \"onHostAddedToMetric2\": *, \"onRangeChanged\": *, \"onChartClosed\": *}"
        ],
        "defaultRaw": {
          "metric1Info": null,
          "metric1Measurements": null,
          "metric1HostsSelected": null,
          "metric2Info": null,
          "metric2Measurements": null,
          "metric2HostsSelected": null,
          "metrices": null,
          "indeterminate": null,
          "rangeFrom": null,
          "rangeTo": null,
          "onMetric1Changed": null,
          "onHostDismissedFromMetric1": null,
          "onHostAddedToMetric1": null,
          "onMetric2Changed": null,
          "onHostDismissedFromMetric2": null,
          "onHostAddedToMetric2": null,
          "onRangeChanged": null,
          "onChartClosed": null
        },
        "defaultValue": "{\"metric1Info\":null,\"metric1Measurements\":null,\"metric1HostsSelected\":null,\"metric2Info\":null,\"metric2Measurements\":null,\"metric2HostsSelected\":null,\"metrices\":null,\"indeterminate\":null,\"rangeFrom\":null,\"rangeTo\":null,\"onMetric1Changed\":null,\"onHostDismissedFromMetric1\":null,\"onHostAddedToMetric1\":null,\"onMetric2Changed\":null,\"onHostDismissedFromMetric2\":null,\"onHostAddedToMetric2\":null,\"onRangeChanged\":null,\"onChartClosed\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/components/Chart/LiveChart.js",
    "content": "import React from 'react';\nimport ChartEngine from './ChartEngine';\nimport ChartLegend from './ChartLegend';\nimport ChartDeleteButton from './ChartDeleteButton';\n\nconst LiveChart = ({\n    metricInfo, metricMeasurements, metricHostsSelected,\n    metrices, indeterminate, lastUpdate,\n    onMetricChanged, onHostDismissed, onHostAdded,\n    onChartClosed\n}) => (\n    <div className={`chart-container ${indeterminate ? 'indeterminate' : ''}`}>\n        <div className=\"chart-container-main\">\n            <div className=\"chart-corner\">\n                <ChartDeleteButton onDelete={onChartClosed} />\n            </div>\n            <ChartEngine\n                metric1Info={metricInfo}\n                metric1Measurements={metricMeasurements}\n                metric1LastUpdate={lastUpdate}\n                metric1HostsSelected={metricHostsSelected}\n                navigatorDisabled={true}\n                withDataLabel={true}\n            />\n        </div>\n        <div className=\"chart-container-side\">\n            <ChartLegend\n                necessary\n                label=\"Metryka\"\n                metrices={metrices}\n                metricInfo={metricInfo}\n                hostsSelected={metricHostsSelected}\n                onMetricChanged={onMetricChanged}\n                onHostAdded={onHostAdded}\n                onHostDismissed={onHostDismissed}\n            />\n        </div>\n    </div>\n)\n\nexport default LiveChart;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/LiveChart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "LiveChart",
    "memberof": "src/components/Chart/LiveChart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/LiveChart.js~LiveChart",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/LiveChart.js",
    "importStyle": "LiveChart",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metricInfo\": *, \"metricMeasurements\": *, \"metricHostsSelected\": *, \"metrices\": *, \"indeterminate\": *, \"lastUpdate\": *, \"onMetricChanged\": *, \"onHostDismissed\": *, \"onHostAdded\": *, \"onChartClosed\": *}"
        ],
        "defaultRaw": {
          "metricInfo": null,
          "metricMeasurements": null,
          "metricHostsSelected": null,
          "metrices": null,
          "indeterminate": null,
          "lastUpdate": null,
          "onMetricChanged": null,
          "onHostDismissed": null,
          "onHostAdded": null,
          "onChartClosed": null
        },
        "defaultValue": "{\"metricInfo\":null,\"metricMeasurements\":null,\"metricHostsSelected\":null,\"metrices\":null,\"indeterminate\":null,\"lastUpdate\":null,\"onMetricChanged\":null,\"onHostDismissed\":null,\"onHostAdded\":null,\"onChartClosed\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/components/Chart/index.js",
    "content": "import './index.less';\n\nexport { default as HistoricalChart } from './HistoricalChart';\nexport { default as LiveChart } from './LiveChart';\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/components/Chart/usage/HistoricalChartWrapper.js",
    "content": "import React from 'react';\nimport moment from 'moment';\nimport { HistoricalChart } from '../index';\nimport { getData, metrices } from './utils';\n\nclass HistoricalChartWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        const matric1Name = 'CPU';\n        const metric1HostsSelected = [\n            'host2.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ];\n        const rangeFrom = moment('2018-01-09 00:00').format();\n        const rangeTo = moment('2018-01-09 02:00').format();\n        this.state = {\n            indeterminate: false,\n            metrices: Object.keys(metrices),\n            metric1Info: Object.assign({\n                name: matric1Name\n            }, metrices[matric1Name]),\n            metric1HostsSelected: metric1HostsSelected,\n            metric1Measurements: getData(rangeFrom, rangeTo, matric1Name, metric1HostsSelected),\n            metric2Info: null,\n            metric2HostsSelected: null,\n            metric2Measurements: null,\n            rangeFrom: rangeFrom,\n            rangeTo: rangeTo\n        };\n    }\n\n    componentWillUnmount() {\n        this.clearDataTimeout();\n    }\n\n    clearDataTimeout() {\n        if (this.dataTimeout) {\n            clearTimeout(this.dataTimeout);\n        }\n    }\n\n    loadData() {\n        this.clearDataTimeout();\n        this.dataTimeout = setTimeout(() => {\n            this.setState({\n                indeterminate: false,\n                metric1Measurements: getData(\n                    this.state.rangeFrom,\n                    this.state.rangeTo,\n                    this.state.metric1Info.name,\n                    this.state.metric1HostsSelected\n                ),\n                metric2Measurements: this.state.metric2Info ? getData(\n                    this.state.rangeFrom,\n                    this.state.rangeTo,\n                    this.state.metric2Info.name,\n                    this.state.metric2HostsSelected\n                ) : null\n            });\n        }, 1500);\n    }\n\n    onMetric1Changed = (metric) => {\n        this.setState({\n            indeterminate: true,\n            metric1Info: Object.assign({\n                name: metric\n            }, metrices[metric]),\n            metric1HostsSelected: []\n        }, this.loadData);\n    }\n\n    onMetric2Changed = (metric) => {\n        this.setState({\n            indeterminate: true,\n            metric2Info: metric ? Object.assign({\n                name: metric\n            }, metrices[metric]) : null,\n            metric2HostsSelected: metric ? [] : null\n        }, this.loadData);\n    }\n\n    onChartClosed = () => {\n        alert('Closed!');\n    }\n\n    onHostAddedToMetric1 = (host) => {\n        this.setState({\n            indeterminate: true,\n            metric1HostsSelected: [ ...this.state.metric1HostsSelected, host ]\n        }, this.loadData);\n    }\n\n    onHostAddedToMetric2 = (host) => {\n        this.setState({\n            indeterminate: true,\n            metric2HostsSelected: [ ...this.state.metric2HostsSelected, host ]\n        }, this.loadData);\n    }\n\n    onHostDismissedFromMetric1 = (host) => {\n        const list = this.state.metric1HostsSelected;\n        const pos = list.indexOf(host);\n        this.setState({\n            indeterminate: true,\n            metric1HostsSelected: [ ...list.slice(0, pos), ...list.slice(pos + 1) ]\n        }, this.loadData);\n    }\n\n    onHostDismissedFromMetric2 = (host) => {\n        const list = this.state.metric2HostsSelected;\n        const pos = list.indexOf(host);\n        this.setState({\n            indeterminate: true,\n            metric2HostsSelected: [ ...list.slice(0, pos), ...list.slice(pos + 1) ]\n        }, this.loadData);\n    }\n\n    onRangeChanged = (rangeFrom, rangeTo) => {\n        this.setState({\n            indeterminate: true,\n            rangeFrom,\n            rangeTo\n        }, this.loadData);\n    }\n\n    render() {\n        return <HistoricalChart\n            {...this.state}\n            onMetric1Changed={this.onMetric1Changed}\n            onMetric2Changed={this.onMetric2Changed}\n            onChartClosed={this.onChartClosed}\n            onHostAddedToMetric1={this.onHostAddedToMetric1}\n            onHostAddedToMetric2={this.onHostAddedToMetric2}\n            onHostDismissedFromMetric1={this.onHostDismissedFromMetric1}\n            onHostDismissedFromMetric2={this.onHostDismissedFromMetric2}\n            onRangeChanged={this.onRangeChanged}\n        />\n    }\n\n}\n\nexport default HistoricalChartWrapper;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/usage/HistoricalChartWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "HistoricalChartWrapper",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js",
    "static": true,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/usage/HistoricalChartWrapper.js",
    "importStyle": "HistoricalChartWrapper",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#state",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"indeterminate\": *, \"metrices\": *, \"metric1Info\": *, \"metric1HostsSelected\": *, \"metric1Measurements\": *, \"metric2Info\": *, \"metric2HostsSelected\": *, \"metric2Measurements\": *, \"rangeFrom\": *, \"rangeTo\": *}"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "clearDataTimeout",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#clearDataTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "loadData",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#loadData",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "dataTimeout",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#dataTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "onMetric1Changed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onMetric1Changed",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "onMetric2Changed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onMetric2Changed",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "onChartClosed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onChartClosed",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "onHostAddedToMetric1",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostAddedToMetric1",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "onHostAddedToMetric2",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostAddedToMetric2",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "onHostDismissedFromMetric1",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostDismissedFromMetric1",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "onHostDismissedFromMetric2",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostDismissedFromMetric2",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "onRangeChanged",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onRangeChanged",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#render",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/components/Chart/usage/LiveChartWrapper.js",
    "content": "import React from 'react';\nimport moment from 'moment';\nimport { LiveChart } from '../index';\n\nclass LiveChartWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.updateTime = moment().format();\n        this.state = {\n            indeterminate: false,\n            metricMeasurements: {},\n            lastUpdate: null\n        };\n    }\n\n    clearTick() {\n        this.timeout && clearInterval(this.timeout);\n    }\n\n    loadPart() {\n        this.props.getData(\n            this.updateTime,\n            undefined,\n            this.props.metricName,\n            this.props.metricHostsSelected\n        ).then(data => {\n            const concated = data.reduce((c, d) => c.concat(d), []);\n            if (concated.map(d => d.data.length).reduce((c, l) => c + l, 0)) {\n                this.updateTime = moment().format();\n                const processed = concated.reduce((c, d) => ({\n                    ...c,\n                    [d.hostname]: d.data\n                }), {});\n                this.setState({\n                    metricMeasurements: this.props.metricHostsSelected.reduce((c, host) => ({\n                        ...c,\n                        [host]: [\n                            ...this.state.metricMeasurements[host],\n                            ...processed[host]\n                        ]\n                    }), {}),\n                    lastUpdate: Object.entries(processed).reduce((c, [ host, d ]) => ({\n                        ...c,\n                        [host]: d.length\n                    }), {})\n                });\n            }\n        });\n    }\n\n    loadFull() {\n        if (this.props.metricHostsSelected.length) {\n            this.setState({ indeterminate: true });\n            this.props.getData(\n                moment().subtract(1, 'hours').format(),\n                undefined,\n                this.props.metricName,\n                this.props.metricHostsSelected\n            ).then(data => {\n                this.updateTime = moment().format();\n                this.setState({\n                    indeterminate: false,\n                    metricMeasurements: data.reduce((c, d) => c.concat(d), []).reduce((c, d) => ({\n                        ...c,\n                        [d.hostname]: d.data\n                    }), {}),\n                    lastUpdate: null\n                });\n                this.clearTick();\n                this.timeout = setInterval(() => this.loadPart(), 5 * 1000);\n            });\n        }\n        else {\n            this.setState({\n                indeterminate: false,\n                lastUpdate: null,\n                metricMeasurements: {}\n            });\n            this.updateTime = moment().format();\n        }\n    }\n\n    componentDidMount() {\n        this.loadFull();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            this.props.metricHostsSelected !== prevProps.metricHostsSelected\n            || this.props.metricName !== prevProps.metricName\n        ) {\n            this.loadFull();\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearTick();\n    }\n\n    render() {\n        return <LiveChart\n            {...this.state}\n            metrices={Object.keys(this.props.metrices)}\n            metricInfo={this.props.metrices[this.props.metricName]}\n            metricHostsSelected={this.props.metricHostsSelected}\n            onMetricChanged={this.props.onMetricChanged}\n            onChartClosed={this.props.onChartClosed}\n            onHostAdded={this.props.onHostAdded}\n            onHostDismissed={this.props.onHostDismissed}\n        />\n    }\n\n}\n\nexport default LiveChartWrapper;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/usage/LiveChartWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "class",
    "name": "LiveChartWrapper",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js",
    "static": true,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/usage/LiveChartWrapper.js",
    "importStyle": "LiveChartWrapper",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 175,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "updateTime",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#updateTime",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"indeterminate\": *, \"metricMeasurements\": *, \"lastUpdate\": *}"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "clearTick",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#clearTick",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "timeout",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#timeout",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "loadPart",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#loadPart",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "loadFull",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#loadFull",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#render",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "src/components/Chart/usage/utils.js",
    "content": "import moment from 'moment';\n\nexport const metrices = {\n    'CPU': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'CPU1': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'CPU2': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'RAM': {\n        unit: 'GB',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'Disk': {\n        unit: 'MB',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'Complex 1': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'Complex 2': {\n        unit: '%',\n        hosts: [\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    }\n};\n\nconst steps = 60 * 60 * 24 / 5;\n\nconst getSeriesDayTemplate = () => {\n    const startVal = 20 * Math.random() + 3;\n    let val = startVal;\n    const data = Array.from({ length: steps }).map((_, i) => {\n        val += (Math.random() - 0.5);\n        return val;\n    });\n    const diff = val - startVal;\n    return data.map((value, i) => value - (diff * i / steps));\n}\n\nconst seriesTemplates = Object.entries(metrices).reduce((metricCumm, [ metric, metricData ]) => {\n    return Object.assign({\n        [metric]: metricData.hosts.reduce((hostCumm, host) => {\n            return Object.assign({\n                [host]: getSeriesDayTemplate()\n            }, hostCumm);\n        }, {})\n    }, metricCumm);\n}, {});\n\nexport const getData = (from, to, metric, hosts) => {\n    const momStart = moment(from);\n    const momEnd = moment(to);\n    const diff5min = Math.floor(momEnd.diff(momStart, 'seconds') / 5);\n    return Object.values(hosts).reduce((cumm, host) => {\n        const template = seriesTemplates[metric][host];\n        let momIter = moment(momStart);\n        let templateIdx = Math.floor(momIter.unix() / 5);\n        const measurements = Array.from({ length: diff5min }).map((_, i) => {\n            momIter = momIter.add(5, 'seconds');\n            templateIdx = (templateIdx + 1) % steps;\n            return {\n                time: momIter.format(),\n                value: template[templateIdx]\n            };\n        });\n        return Object.assign({\n            [host]: measurements\n        }, cumm);\n    }, {});\n}\n\n\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Chart/usage/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "metrices",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~metrices",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/usage/utils.js",
    "importStyle": "{metrices}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"CPU\": *, \"CPU1\": *, \"CPU2\": *, \"RAM\": *, \"Disk\": *, \"Complex 1\": *, \"Complex 2\": *}"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "steps",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~steps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "getSeriesDayTemplate",
    "memberof": "src/components/Chart/usage/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~getSeriesDayTemplate",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "seriesTemplates",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~seriesTemplates",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "getData",
    "memberof": "src/components/Chart/usage/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~getData",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Chart/usage/utils.js",
    "importStyle": "{getData}",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "metric",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "content": "import React from 'react';\nimport {Input, Icon} from 'antd';\n\nconst InputWrapper = ({value, editable, rowId, colId, onHandleChange, onSave, onEditCancel}) => (\n    <React.Fragment>\n        <Input\n            value={value}\n            className=\"text-wrapper-value\"\n            onChange={(e) => onHandleChange(rowId, colId, e.target.value)}\n            onPressEnter={(e) => editable ? onSave(rowId, colId) : null}\n        />\n        {\n            editable ?\n                <React.Fragment>\n                    <Icon\n                        type=\"check\"\n                        className=\"editable-cell-icon-check\"\n                        onClick={(e) => onSave(rowId, colId)}\n                    />\n                    <Icon\n                        type=\"close\"\n                        className=\"editable-cell-icon-cancel\"\n                        onClick={(e) => onEditCancel(rowId, colId)}\n                    />\n                </React.Fragment>\n                : ''\n        }\n    </React.Fragment>\n);\n\n\nexport default InputWrapper;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "InputWrapper",
    "memberof": "src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/InputWrapper/index.js~InputWrapper",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "importStyle": "InputWrapper",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onHandleChange\": *, \"onSave\": *, \"onEditCancel\": *}"
        ],
        "defaultRaw": {
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onHandleChange": null,
          "onSave": null,
          "onEditCancel": null
        },
        "defaultValue": "{\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onHandleChange\":null,\"onSave\":null,\"onEditCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\n\nconst TextWrapper = ({value, editable, rowId, colId, onEditStart}) => (\n    <React.Fragment>\n        {value ? <div className=\"text-wrapper-value\">{value}</div> : null}\n        {\n            editable ?\n                <Icon\n                    type=\"edit\"\n                    className=\"editable-cell-icon\"\n                    onClick={(e) => onEditStart(rowId, colId)}\n                /> : ''\n        }\n    </React.Fragment>\n);\n\nexport default TextWrapper;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "TextWrapper",
    "memberof": "src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/TextWrapper/index.js~TextWrapper",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "importStyle": "TextWrapper",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onEditStart\": *}"
        ],
        "defaultRaw": {
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onEditStart": null
        },
        "defaultValue": "{\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onEditStart\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/index.js",
    "content": "import React from 'react'\n\nimport InputWrapper from './InputWrapper';\nimport TextWrapper from './TextWrapper';\n\nconst EditableCell = ({prefix, editMode, loading, value, editable, rowId, colId, onHandleChange, onSave, onEditStart, onEditCancel}) => (\n    <div className={`editable-cell ${loading ? 'loading' : ''}`}>\n        {prefix}\n        {\n            editMode ?\n                <InputWrapper value={value} editable={editable} rowId={rowId} colId={colId} onHandleChange={onHandleChange} onSave={onSave} onEditCancel={onEditCancel}/>\n                :\n                <TextWrapper value={value} editable={editable} rowId={rowId} colId={colId} onEditStart={onEditStart} />\n        }\n    </div>\n);\n\nEditableCell.defaultProps = {\n    value: '',\n    editable: false,\n    __editMode: false\n};\n\nexport default EditableCell;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/EditableCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "EditableCell",
    "memberof": "src/components/EditableTable/EditableCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/index.js~EditableCell",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/EditableCell/index.js",
    "importStyle": "EditableCell",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"prefix\": *, \"editMode\": *, \"loading\": *, \"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onHandleChange\": *, \"onSave\": *, \"onEditStart\": *, \"onEditCancel\": *}"
        ],
        "defaultRaw": {
          "prefix": null,
          "editMode": null,
          "loading": null,
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onHandleChange": null,
          "onSave": null,
          "onEditStart": null,
          "onEditCancel": null
        },
        "defaultValue": "{\"prefix\":null,\"editMode\":null,\"loading\":null,\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onHandleChange\":null,\"onSave\":null,\"onEditStart\":null,\"onEditCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/Delete/index.js",
    "content": "import React from 'react';\nimport { Popconfirm } from 'antd';\n\nconst Delete = ({record, text, onDeleteRow}) => (\n    <Popconfirm title=\"Czy chcesz usunąć?\" onConfirm={() => onDeleteRow(record.key)}>\n        <a onClick={e => e.preventDefault()}>{text}</a>\n    </Popconfirm>\n);\n\nexport default Delete;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/Menu/Delete/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "Delete",
    "memberof": "src/components/EditableTable/Menu/Delete/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/Delete/index.js~Delete",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/Menu/Delete/index.js",
    "importStyle": "Delete",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"record\": *, \"text\": *, \"onDeleteRow\": *}"
        ],
        "defaultRaw": {
          "record": null,
          "text": null,
          "onDeleteRow": null
        },
        "defaultValue": "{\"record\":null,\"text\":null,\"onDeleteRow\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/Edit/index.js",
    "content": "import React from 'react';\nimport { Popconfirm, Divider } from 'antd';\n\nconst Edit =({record, text, editable, onSaveRow, onEditRowStart, onEditRowCancel}) => (\n    <span className=\"editable-row-operations\">\n        {\n            editable ?\n                <span>\n                  <a onClick={() => onSaveRow(record.key)}>Zapisz</a>\n                  <Divider type=\"vertical\" />\n                  <Popconfirm title=\"Czy chcesz cofnąć zmiany?\" onConfirm={() => onEditRowCancel(record.key)}>\n                    <a>Anuluj</a>\n                  </Popconfirm>\n                </span>\n                : <a onClick={() => onEditRowStart(record.key)}>{text}</a>\n        }\n    </span>\n);\n\nexport default Edit;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/Menu/Edit/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "Edit",
    "memberof": "src/components/EditableTable/Menu/Edit/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/Edit/index.js~Edit",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/Menu/Edit/index.js",
    "importStyle": "Edit",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"record\": *, \"text\": *, \"editable\": *, \"onSaveRow\": *, \"onEditRowStart\": *, \"onEditRowCancel\": *}"
        ],
        "defaultRaw": {
          "record": null,
          "text": null,
          "editable": null,
          "onSaveRow": null,
          "onEditRowStart": null,
          "onEditRowCancel": null
        },
        "defaultValue": "{\"record\":null,\"text\":null,\"editable\":null,\"onSaveRow\":null,\"onEditRowStart\":null,\"onEditRowCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/index.js",
    "content": "import React from 'react';\nimport { Divider } from 'antd';\nimport Edit from './Edit';\nimport Delete from './Delete';\n\nconst Menu = ({loading, menuButtons, record, editable, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow}) => {\n    let key = 0;\n    const buttonsArray = menuButtons.map((button, i) => {\n        switch (button.type) {\n            case 'edit':\n                return (\n                    <React.Fragment key={++key}>\n                        {i ? <Divider type=\"vertical\" /> : null}\n                        <Edit record={record} text={button.name} editable={editable} onSaveRow={onSaveRow} onEditRowStart={onEditRowStart} onEditRowCancel={onEditRowCancel} />\n                    </React.Fragment>\n                );\n            case 'delete':\n                return (\n                    <React.Fragment key={++key}>\n                        {i ? <Divider type=\"vertical\" /> : null}\n                        <Delete record={record} text={button.name} onDeleteRow={onDeleteRow} />\n                    </React.Fragment>\n                );\n            default:\n                return null;\n        }\n    });\n    return (\n        <div className={`editable-menu-cell ${loading ? 'loading' : ''}`}>\n            {buttonsArray}\n        </div>\n    )\n};\n\nexport default Menu;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/Menu/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "Menu",
    "memberof": "src/components/EditableTable/Menu/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/index.js~Menu",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/Menu/index.js",
    "importStyle": "Menu",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"loading\": *, \"menuButtons\": *, \"record\": *, \"editable\": *, \"onSaveRow\": *, \"onEditRowStart\": *, \"onEditRowCancel\": *, \"onDeleteRow\": *}"
        ],
        "defaultRaw": {
          "loading": null,
          "menuButtons": null,
          "record": null,
          "editable": null,
          "onSaveRow": null,
          "onEditRowStart": null,
          "onEditRowCancel": null,
          "onDeleteRow": null
        },
        "defaultValue": "{\"loading\":null,\"menuButtons\":null,\"record\":null,\"editable\":null,\"onSaveRow\":null,\"onEditRowStart\":null,\"onEditRowCancel\":null,\"onDeleteRow\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "content": "import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst FormAdd = ({form, row, columnNames, required, onChange, setFormRef}) => {\n    setFormRef(form);\n    let inputs = [];\n    Object.entries(columnNames).forEach(([columnId, columnName]) => {\n        inputs.push(\n            <Form.Item label={columnName} key={columnId}>\n                {form.getFieldDecorator(columnId, {\n                    rules: [{ required: required[columnId], message: `Pole ${columnName} nie może być puste` }],\n                })(\n                    <Input onChange={(e) => onChange(columnId, e.target.value)} />\n                )}\n            </Form.Item>\n        );\n    });\n    return (\n        <Form layout=\"vertical\">\n            {inputs}\n        </Form>\n    );\n};\n\nconst WrappedFormAdd = Form.create()(FormAdd);\nexport default WrappedFormAdd;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "FormAdd",
    "memberof": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/FormAdd/index.js~FormAdd",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"row\": *, \"columnNames\": *, \"required\": *, \"onChange\": *, \"setFormRef\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "row": null,
          "columnNames": null,
          "required": null,
          "onChange": null,
          "setFormRef": null
        },
        "defaultValue": "{\"form\":null,\"row\":null,\"columnNames\":null,\"required\":null,\"onChange\":null,\"setFormRef\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "WrappedFormAdd",
    "memberof": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/FormAdd/index.js~WrappedFormAdd",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "importStyle": "WrappedFormAdd",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "src/components/EditableTable/ModalAdd/index.js",
    "content": "import React, { Component } from 'react'\nimport FormAdd from './FormAdd';\nimport { Button, Modal } from 'antd';\n\nclass ModalAdd extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            row: {},\n            visible: false\n        };\n        this.columnNames = {};\n        this.required = {};\n        for (const column of this.props.columns) {\n            if (column.type !== 'menu') {\n                this.state.row[column.id] = '';\n                this.columnNames[column.id] = column.name;\n                this.required[column.id] = column.required;\n            }\n        }\n        this.form = null;\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    addRow = () => {\n        if(this.form !== null) {\n            this.form.validateFields((err, values) => {\n                if (!err) {\n                    this.props.onAdd(Object.assign({}, this.state.row));\n                    this.setState({\n                        row: this._getEmptyRow(),\n                        visible: false\n                    });\n                    this.form.setFieldsValue(this._getEmptyRow());\n                }\n            });\n        }\n    };\n\n    onChange = (columnId, value) => {\n        let row = Object.assign({}, this.state.row);\n        row[columnId] = value;\n        this.setState({\n            row\n        });\n    };\n\n    _getEmptyRow() {\n        let newRow = {};\n        Object.entries(this.state.row).forEach(([columnId]) => newRow[columnId] = '');\n        return newRow;\n    }\n\n    setFormRef = (form) => {\n        this.form = form;\n    };\n\n    render() {\n        return (\n            <div className=\"form-add\">\n                <Button className=\"editable-add-btn\" onClick={this.showModal}>{this.props.buttonText}</Button>\n                <Modal\n                    title=\"Dodaj nowy\"\n                    visible={this.state.visible}\n                    onOk={this.addRow}\n                    onCancel={this.hideModal}\n                    okText=\"Dodaj\"\n                    cancelText=\"Anuluj\"\n                >\n                    <FormAdd row={this.state.row} columnNames={this.columnNames} required={this.required} onChange={this.onChange} setFormRef={this.setFormRef} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalAdd;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/ModalAdd/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "ModalAdd",
    "memberof": "src/components/EditableTable/ModalAdd/index.js",
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/ModalAdd/index.js",
    "importStyle": "ModalAdd",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"row\": *, \"visible\": *}"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "columnNames",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#columnNames",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "required",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#required",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "form",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#form",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "showModal",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#showModal",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "hideModal",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#hideModal",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "_getEmptyRow",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#_getEmptyRow",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "setFormRef",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#setFormRef",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#render",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "src/components/EditableTable/columnsTransformer.js",
    "content": "import React from 'react';\nimport EditableCell from './EditableCell';\nimport Menu from './Menu';\n\nconst sorterDecorator = (inputColumn, originalColumn) => {\n    inputColumn.sorter = (a, b) => {\n        const val1 = a[originalColumn.id].value;\n        const val2 = b[originalColumn.id].value;\n        if (typeof val1 !== typeof val2) {\n            return false;\n        }\n        switch (typeof val1) {\n            case 'number':\n                return val1 < val2;\n            case 'string':\n                return val1.localeCompare(val2);\n            default:\n                return false;\n        }\n    };\n    return inputColumn;\n};\n\nconst menuTransformer = (inputColumn, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow) => {\n    return {\n        title: inputColumn.name,\n        render: (value, record) => {\n            return (\n                <Menu menuButtons={inputColumn.buttons} loading={record.__loading} editable={record.__editMode} record={record} onSaveRow={onSaveRow}\n                      onEditRowStart={onEditRowStart} onEditRowCancel={onEditRowCancel} onDeleteRow={onDeleteRow}/>\n            )},\n    };\n};\n\nconst columnTransformer = (inputColumns, onHandleChange = () => (null), onSaveCell = () => (null), onEditCellStart = () => (null), onEditCellCancel = () => (null), onSaveRow = () => (null), onEditRowStart = () => (null), onEditRowCancel = () => (null), onDeleteRow = () => (null)) => {\n    let outputColumns = [], newColumn;\n    for (const column of inputColumns) {\n        if (column.type === 'menu') {\n            newColumn = menuTransformer(column, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow);\n        } else {\n            newColumn = {\n                title: column.name,\n                dataIndex: column.id,\n                render: (value, record) => (\n                    <EditableCell prefix={column.prefixRender ? column.prefixRender(value, record, column) : null}\n                                    editable={column.editable && !record.__editMode} loading={value.__loading || record.__loading} rowId={record.key}\n                                    colId={value.__name} onHandleChange={onHandleChange} onSave={onSaveCell}\n                                    onEditStart={onEditCellStart} onEditCancel={onEditCellCancel}\n                                    value={value.value} editMode={value.__editMode || record.__editMode}\n                                    __name={value.__name}\n                    />\n                ),\n            }\n        }\n        if (column.sortable === true) {\n            newColumn = sorterDecorator(newColumn, column);\n        }\n        outputColumns.push(newColumn);\n    }\n    return outputColumns;\n};\n\nexport default columnTransformer;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/columnsTransformer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "sorterDecorator",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~sorterDecorator",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/EditableTable/columnsTransformer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "inputColumn",
        "types": [
          "*"
        ]
      },
      {
        "name": "originalColumn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "menuTransformer",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~menuTransformer",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/EditableTable/columnsTransformer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "inputColumn",
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveRow",
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowCancel",
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeleteRow",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"title\": *, \"render\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "columnTransformer",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~columnTransformer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/columnsTransformer.js",
    "importStyle": "columnTransformer",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "inputColumns",
        "types": [
          "*"
        ]
      },
      {
        "name": "onHandleChange",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveCell",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditCellStart",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditCellCancel",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveRow",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowStart",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowCancel",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeleteRow",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/components/EditableTable/dataTransformer.js",
    "content": "class dataTransformer\n{\n    static get internalFields() {\n        return [\n            '__editMode',\n            '__loading',\n            '__name',\n            'key'\n        ];\n    }\n    static data2model = (inputData) => {\n        let outputData = [], outputRow, key = 0;\n        for (const row of inputData) {\n            outputRow = Object.assign({__editMode: false, __loading: false}, row);\n            for (const cell in row) {\n                outputRow[cell] = {\n                    __editMode: false,\n                    __loading: false,\n                    __name: cell,\n                    value: row[cell]\n                }\n            }\n            outputRow.key = key++;\n            outputData.push(outputRow);\n        }\n        return outputData;\n    };\n\n    static pureRow = (modelRow) => {\n        let row = {};\n        Object.entries(modelRow).forEach(([columnName, columnValue]) => {\n            if(dataTransformer.internalFields.indexOf(columnName) < 0) {\n                row[columnName] = columnValue.value;\n            }\n        });\n        return row;\n    }\n}\n\nexport default dataTransformer;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/dataTransformer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "dataTransformer",
    "memberof": "src/components/EditableTable/dataTransformer.js",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/dataTransformer.js",
    "importStyle": "dataTransformer",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 232,
    "kind": "get",
    "name": "internalFields",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.internalFields",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "data2model",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.data2model",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "pureRow",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.pureRow",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "src/components/EditableTable/index.js",
    "content": "import React, { Component } from 'react'\n\nimport { Table } from 'antd';\nimport dataTransformer from './dataTransformer';\nimport columnTransformer from './columnsTransformer';\nimport ModalAdd from './ModalAdd';\n\nimport './index.less';\n\nclass EditableTable extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: dataTransformer.data2model(this.props.dataSource),\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            const dataSource = dataTransformer.data2model(nextProps.dataSource);\n            this.setState({\n                dataSource\n            });\n        }\n    }\n\n    setCellDataProp = (rowId, colId, name, value) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId][name] = value;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onHandleChange = (rowId, colId, newValue) => {\n        this.setCellDataProp(rowId, colId, 'value', newValue);\n    };\n\n    onSaveCell = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].__editMode = false;\n        dataSource[rowIndex][colId].__loading = true;\n        this.setState({\n            dataSource\n        });\n        if(typeof this.props.onChangeCell !== 'undefined') {\n            this.props.onChangeCell(rowId, colId, this.state.dataSource[rowIndex][colId].value);\n        }\n    };\n\n    onEditCancel = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].value = dataSource[rowIndex][colId].__oldValue;\n        dataSource[rowIndex][colId].__editMode = false;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onEditStart = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].__oldValue = dataSource[rowIndex][colId].value;\n        dataSource[rowIndex][colId].__editMode = true;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onSaveRow = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = false;\n        dataSource[rowIndex].__loading = true;\n        this.setState({\n            dataSource\n        });\n        if(typeof this.props.onChangeRow !== 'undefined') {\n            this.props.onChangeRow(rowId, dataTransformer.pureRow(dataSource[rowIndex]));\n        }\n    };\n\n    onEditRowStart = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = true;\n        for(const colId in dataSource[rowIndex]) {\n            if(dataSource[rowIndex].hasOwnProperty(colId) && colId !== '__editMode' && colId !== 'key' && colId !== '__loading') {\n                dataSource[rowIndex][colId].__oldValue = dataSource[rowIndex][colId].value;\n            }\n        }\n        this.setState({\n            dataSource\n        });\n    };\n\n    onEditRowCancel = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = false;\n        for(const colId in dataSource[rowIndex]) {\n            if(dataSource[rowIndex].hasOwnProperty(colId) && colId !== '__editMode' && colId !== 'key' && colId !== '__loading') {\n                dataSource[rowIndex][colId].value = dataSource[rowIndex][colId].__oldValue;\n            }\n        }\n        this.setState({\n            dataSource\n        });\n    };\n\n    onAddRow = (row) => {\n        this.props.onAddRow(row);\n    };\n\n    _findRowIndex(rowId) {\n        return this.state.dataSource.findIndex((element) => element.key === rowId);\n    }\n\n    render() {\n        return (\n            <div className={`editable-table ${this.props.className || ''}`}>\n                <ModalAdd buttonText=\"Dodaj monitor\" columns={this.props.columns} onAdd={this.onAddRow} />\n                <Table size=\"middle\" bordered rowSelection={this.rowSelection} dataSource={this.state.dataSource} columns={columnTransformer(this.props.columns, this.onHandleChange, this.onSaveCell, this.onEditStart, this.onEditCancel, this.onSaveRow, this.onEditRowStart, this.onEditRowCancel, this.props.onDeleteRow)} />\n            </div>\n        );\n    }\n}\n\nexport default EditableTable;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "class",
    "name": "EditableTable",
    "memberof": "src/components/EditableTable/index.js",
    "static": true,
    "longname": "src/components/EditableTable/index.js~EditableTable",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/index.js",
    "importStyle": "EditableTable",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 237,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#state",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "setCellDataProp",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#setCellDataProp",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "onHandleChange",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onHandleChange",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "onSaveCell",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onSaveCell",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "onEditCancel",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditCancel",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "onEditStart",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditStart",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "onSaveRow",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onSaveRow",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "onEditRowStart",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditRowStart",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "onEditRowCancel",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditRowCancel",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "onAddRow",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onAddRow",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "_findRowIndex",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#_findRowIndex",
    "access": "private",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "rowId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#render",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/components/EditableTable/usage/TableContainer.js",
    "content": "import React from 'react';\nimport EditableTable from '../index';\nimport {fakeColumns, fakeData} from \"./fakeData\";\n\nclass TableContainer extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: fakeData\n        };\n    }\n\n    changeCell = (rowId, colId, value) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId][colId] = value;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeRow = (rowId, newColumn) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId] = newColumn;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    addRow = (row) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.push(row);\n        this.setState({\n            dataSource\n        });\n    };\n\n    deleteRow = (rowId) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.splice(rowId, 1);\n        this.setState({\n            dataSource\n        });\n    };\n\n    render() {\n        return (\n            <EditableTable dataSource={this.state.dataSource} columns={fakeColumns} onChangeRow={this.changeRow} onChangeCell={this.changeCell} onAddRow={this.addRow} onDeleteRow={this.deleteRow} />\n        )\n    }\n}\n\nexport default TableContainer;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/usage/TableContainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "class",
    "name": "TableContainer",
    "memberof": "src/components/EditableTable/usage/TableContainer.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/usage/TableContainer.js",
    "importStyle": "TableContainer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 253,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "changeCell",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#changeCell",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "changeRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#changeRow",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "deleteRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#deleteRow",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#render",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "src/components/EditableTable/usage/fakeData.js",
    "content": "export const fakeData = [\n    {\n        col1: \"195.254.125.41\",\n        col2: \"Wydział FiIS\"\n    },\n    {\n        col1: \"25.245.120.65\",\n        col2: \"Katedra Informatyki\"\n    },\n];\n\nexport const fakeColumns = [\n    {\n        name: \"Adres\",\n        id: \"col1\",\n        editable: true,\n        sortable: true,\n        width: '40%',\n    },\n    {\n        name: \"Opis\",\n        id: \"col2\",\n        editable: true,\n        sortable: true,\n        width: '40%',\n    },\n    {\n        name: \"Menu\",\n        type: \"menu\",\n        buttons: [\n            {\n                name: \"Edytuj\",\n                type: \"edit\",\n            },\n            {\n                name: \"Usuń\",\n                type: \"delete\",\n            },\n        ]\n    }\n];\n\n/*\nconst fakeModel = [\n    {\n        __editMode: false,\n        key: 1,\n        col1: { __editMode: false, __value: \"val1\" },\n        col2: { __editMode: true, __value: \"val2\", __oldValue: \"new value 2\" },\n    },\n    {\n        __editMode: false,\n        key: 2,\n        col1: { __editMode: false, __value: \"val3\" },\n        col2: { __editMode: true, __value: \"val4\", __oldValue: \"new value 4\" },\n    },\n];\n*/\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/EditableTable/usage/fakeData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "fakeData",
    "memberof": "src/components/EditableTable/usage/fakeData.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/fakeData.js~fakeData",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/usage/fakeData.js",
    "importStyle": "{fakeData}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "fakeColumns",
    "memberof": "src/components/EditableTable/usage/fakeData.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/fakeData.js~fakeColumns",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/EditableTable/usage/fakeData.js",
    "importStyle": "{fakeColumns}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Hostname/index.js",
    "content": "import React from 'react';\nimport { Button, Input, Icon } from 'antd';\n\nexport class Hostname extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        searchQuery: '',\n        filtered: false,\n        dataSource: this.props.dataSource\n    });\n\n    inputSearchChange = (searchQuery) => {\n        this.setState({\n            searchQuery\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource)\n            }, this.onSearch);\n        }\n    }\n\n    onSearch = () => {\n        const { searchQuery } = this.state;\n        this.setState({\n            filtered: !!searchQuery,\n            visible: false,\n            dataSource: this.applyFilters(this.props.dataSource)\n        });\n    };\n\n    applyFilters = (dataSource) => {\n        const { searchQuery } = this.state;\n        if(searchQuery === '') {\n            this.onClearSearch();\n            return dataSource;\n        }\n        const reg = new RegExp(searchQuery, 'gi');\n        return dataSource.map((host) => {\n            const match = host.hostname.match(reg);\n            if (!match) {\n                return null;\n            }\n            return {\n                ...host,\n                key: host.hostname,\n                displayName: (\n                    <span>\n                          {host.hostname.split(reg).map((text, i) => (\n                              i > 0 ? [<span key=\"1\" className=\"highlight\">{match[0]}</span>, text] : text\n                          ))}\n                        </span>\n                ),\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSearch = () => {\n        this.setState(this.getInitialState());\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'hostname') {\n                return {\n                    ...column,\n                    sorter: (a, b) => a.hostname.localeCompare(b.hostname),\n                    filterDropdown: (\n                        <div className=\"hostname-filter-search\">\n                            <Input\n                                ref={elem => this.hostnameSearchInput = elem}\n                                placeholder=\"Znajdź host\"\n                                value={this.state.searchQuery}\n                                onChange={(e) => this.inputSearchChange(e.target.value)}\n                                onPressEnter={this.onSearch}\n                            />\n                            <Button type=\"primary\" onClick={this.onSearch}>Szukaj</Button>\n                            {\n                                this.state.filtered && this.state.searchQuery !== '' ? <Button type=\"default\" onClick={this.onClearSearch}>Wyczyść</Button> : null\n                            }\n                        </div>\n                    ),\n                    filterIcon: <Icon type=\"search\" style={{ color: this.state.filtered ? '#84e985' : '#aaa' }} />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        this.setState({\n                            visible\n                        }, () => {\n                            return this.hostnameSearchInput && this.hostnameSearchInput.focus();\n                        });\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/FilteredTable/Hostname/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "class",
    "name": "Hostname",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/FilteredTable/Hostname/index.js",
    "importStyle": "{Hostname}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 265,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#state",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "inputSearchChange",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#inputSearchChange",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "onSearch",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#onSearch",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "onClearSearch",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#onClearSearch",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#render",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Metadata/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport MetadataFilter from '../../MetadataFilter';\n\nexport class Metadata extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        filtered: false,\n        type: '',\n        value: '',\n        dataSource: this.props.dataSource\n    });\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource, this.state.type, this.state.value)\n            });\n        }\n    }\n\n    onSelect = (type, value) => {\n        this.setState({\n            filtered: !!value,\n            visible: false,\n            type,\n            value,\n            dataSource: this.applyFilters(this.props.dataSource, type, value),\n        });\n    };\n\n    applyFilters = (dataSource, type, value) => {\n        if(typeof value === 'undefined' || value === '') {\n            this.onClearSelect();\n            return dataSource;\n        }\n        const reg = new RegExp(value, 'gi');\n        return dataSource.map((host) => {\n            const matchedIndex = host.metadata.findIndex(singleMetadata => singleMetadata.id === type && singleMetadata.value.match(reg));\n            if (matchedIndex < 0) {\n                return null;\n            }\n            let newMetadata = host.metadata.slice();\n            newMetadata[matchedIndex] = {\n                ...newMetadata[matchedIndex],\n                name: <span className=\"highlight\">\n                          {newMetadata[matchedIndex].name}\n                        </span>,\n                value: <span className=\"highlight\">\n                          {newMetadata[matchedIndex].value}\n                        </span>\n            };\n            return {\n                ...host,\n                metadata: newMetadata\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSelect = () => {\n        this.setState(this.getInitialState());\n    };\n\n    onDismiss = () => {\n        if (this.state.visible) {\n            this.setState({ visible: false });\n        }\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'metadata') {\n                return {\n                    ...column,\n                    filterDropdown: <MetadataFilter metadata={this.props.metadata} filtered={this.state.filtered} onSelect={this.onSelect} onClear={this.onClearSelect} onDismiss={this.onDismiss} />,\n                    filterIcon: <Icon onClick={e => !this.state.visible && e.stopPropagation()} type=\"tag-o\" style={{ color: this.state.filtered ? '#84e985' : '#aaa' }} />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        if (visible) {\n                            this.setState({\n                                visible\n                            });\n                        }\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/FilteredTable/Metadata/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "class",
    "name": "Metadata",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/FilteredTable/Metadata/index.js",
    "importStyle": "{Metadata}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 277,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "onClearSelect",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onClearSelect",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "onDismiss",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onDismiss",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#render",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Metrics/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport MetricFilter from '../../MetricFilter';\n\nexport class Metrics extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        filtered: false,\n        selected: [],\n        dataSource: this.props.dataSource\n    });\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource, this.state.selected)\n            });\n        }\n    }\n\n    onSelect = (selected) => {\n        this.setState({\n            filtered: !!selected.length,\n            visible: false,\n            selected,\n            dataSource: this.applyFilters(this.props.dataSource, selected),\n        });\n    };\n\n    applyFilters = (dataSource, selected) => {\n        if(!selected.length) {\n            return dataSource;\n        }\n        return dataSource.map((host) => {\n            const matchedIndex = host.metrics.findIndex(metric => selected.some(oneSelected => oneSelected === metric.id));\n            if (matchedIndex < 0) {\n                return null;\n            }\n            const newMetrics = host.metrics.slice();\n            newMetrics[matchedIndex].found = true;\n            return {\n                ...host,\n                metrics: newMetrics\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSelect = () => {\n        this.setState(this.getInitialState());\n    };\n\n    onDismiss = () => {\n        if (this.state.visible) {\n            this.setState({ visible: false });\n        }\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'metrics') {\n                return {\n                    ...column,\n                    filterDropdown: <MetricFilter metrics={this.props.metrics} onSelect={this.onSelect} onClear={this.onClearSelect} onDismiss={this.onDismiss} />,\n                    filterIcon: <Icon onClick={e => !this.state.visible && e.stopPropagation()} type=\"tag-o\" style={{ color: this.state.filtered ? '#84e985' : '#aaa' }} />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        if (visible) {\n                            this.setState({\n                                visible\n                            });\n                        }\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/FilteredTable/Metrics/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 288,
    "kind": "class",
    "name": "Metrics",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/FilteredTable/Metrics/index.js",
    "importStyle": "{Metrics}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 289,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "onClearSelect",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onClearSelect",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "onDismiss",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onDismiss",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#render",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "src/components/HostList/MetadataCell/index.js",
    "content": "import React from 'react';\n\nimport { Collapse, List, Col} from 'antd';\nconst Panel = Collapse.Panel;\n\nconst MetadataCell = ({metadata}) => {\n    return (\n        <Collapse bordered={false}>\n            <Panel header={<span>{metadata.length} metadanych <em>(kliknij aby rozwinąć)</em></span>} key=\"1\">\n                <List\n                    dataSource={metadata}\n                    renderItem={item => (<List.Item>\n                        <Col span={12}><b>{item.name}</b></Col>\n                        <Col span={12}>{item.value}</Col>\n                    </List.Item>)}\n                />\n            </Panel>\n        </Collapse>\n    );\n};\n\nexport default MetadataCell;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetadataCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "Panel",
    "memberof": "src/components/HostList/MetadataCell/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataCell/index.js~Panel",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/HostList/MetadataCell/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "MetadataCell",
    "memberof": "src/components/HostList/MetadataCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetadataCell/index.js~MetadataCell",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetadataCell/index.js",
    "importStyle": "MetadataCell",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metadata\": *}"
        ],
        "defaultRaw": {
          "metadata": null
        },
        "defaultValue": "{\"metadata\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/components/HostList/MetadataFilter/index.js",
    "content": "import React from 'react';\nimport { Select, Input, Button } from 'antd';\nconst { Option } = Select;\n\nclass MetadataFilter extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: '',\n            value: ''\n        };\n    }\n\n    onChangeType = (type) => {\n        this.setState({\n            type\n        });\n    };\n\n    onChangeValue = (value) => {\n        this.setState({\n            value\n        });\n    };\n\n    onClear = () => {\n        this.setState({\n            type: null,\n            value: ''\n        });\n        this.props.onClear();\n    };\n\n    onSelect = () => {\n        this.props.onSelect(this.state.type, this.state.value);\n    };\n\n    componentDidMount() {\n        window.addEventListener('click', this.props.onDismiss);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.props.onDismiss);\n    }\n\n    render() {\n        const { metadata } = this.props;\n        return (\n            <div className=\"metadata-filter-select\" onClick={e => e.stopPropagation()}>\n                <Select\n                    showSearch\n                    placeholder=\"Wybierz metadane\"\n                    optionFilterProp=\"children\"\n                    onChange={this.onChangeType}\n                    value={this.state.type}\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {Object.entries(metadata).map(([id, singleMetadata]) => <Option key={id}>{singleMetadata.name}</Option>)}\n                </Select>\n                <Input onChange={(e) => this.onChangeValue(e.target.value)} onPressEnter={this.onSelect} placeholder=\"Podaj szukaną wartość\" />\n                <Button type=\"primary\" onClick={this.onSelect}>Wybierz</Button>\n                {\n                    this.props.filtered ? <Button type=\"default\" onClick={this.onClear}>Wyczyść</Button> : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MetadataFilter;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetadataFilter/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/HostList/MetadataFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataFilter/index.js~Option",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/HostList/MetadataFilter/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "class",
    "name": "MetadataFilter",
    "memberof": "src/components/HostList/MetadataFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetadataFilter/index.js",
    "importStyle": "MetadataFilter",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 305,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": *, \"value\": *}"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "onChangeType",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onChangeType",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "onChangeValue",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onChangeValue",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#render",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "content": "import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst MetricInfo = ({metric}) => (\n    <div>\n        {\n            metric.parent_id !== null ? <div>\n                <Row>\n                    <Col span={12}>Opis:</Col>\n                    <Col span={12}>{metric.description}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Metryka bazowa:</Col>\n                    <Col span={12}>{metric.parent_id}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Szer. okna:</Col>\n                    <Col span={12}>{metric.moving_window_duration}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Częstotliwość:</Col>\n                    <Col span={12}>{metric.interval}</Col>\n                </Row>\n            </div> : metric.description\n        }\n    </div>\n);\n\nexport default MetricInfo;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "MetricInfo",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js~MetricInfo",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "importStyle": "MetricInfo",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metric\": *}"
        ],
        "defaultRaw": {
          "metric": null
        },
        "defaultValue": "{\"metric\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "content": "import React from 'react';\nimport { Popconfirm, Icon } from 'antd';\n\nconst RemoveMetric = ({onConfirm}) => (\n    <Popconfirm placement=\"top\" title=\"Czy chcesz usunąć tę metrykę?\" onConfirm={onConfirm} onCancel={()=>null} okText=\"Tak\" cancelText=\"Nie\">\n        <Icon type=\"cross\" />\n    </Popconfirm>\n);\n\nexport default RemoveMetric;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "function",
    "name": "RemoveMetric",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js~RemoveMetric",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "importStyle": "RemoveMetric",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onConfirm\": *}"
        ],
        "defaultRaw": {
          "onConfirm": null
        },
        "defaultValue": "{\"onConfirm\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 318,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/index.js",
    "content": "import React from 'react';\nimport { Tooltip, Tag } from 'antd';\n\nimport MetricInfo from './MetricInfo';\nimport RemoveMetric from './RemoveMetric';\n\nconst SingleMetric = ({hostname, metric, onRemove, found}) => {\n    const removable = metric.parent_id !== null;\n    return (<Tooltip placement=\"bottom\" title={<MetricInfo metric={metric}/>}>\n        <Tag\n            color={found ? 'red' : (metric.parent_id === null ? '#87d068' : '#2db7f5')}\n        >{metric.id}\n            {\n                removable && metric.removable ? <RemoveMetric onConfirm={(e) => {\n                    e.preventDefault();\n                    onRemove(hostname, metric.id);\n                }}/> : null\n            }\n        </Tag>\n    </Tooltip>);\n};\n\nexport default SingleMetric;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "SingleMetric",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/index.js~SingleMetric",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetricCell/SingleMetric/index.js",
    "importStyle": "SingleMetric",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"hostname\": *, \"metric\": *, \"onRemove\": *, \"found\": *}"
        ],
        "defaultRaw": {
          "hostname": null,
          "metric": null,
          "onRemove": null,
          "found": null
        },
        "defaultValue": "{\"hostname\":null,\"metric\":null,\"onRemove\":null,\"found\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/index.js",
    "content": "import React from 'react';\n\nimport { Tag, Icon } from 'antd';\nimport SingleMetric from './SingleMetric';\n\n/**\n * This component displays single metric cell in host list table\n * @reactProps {!object} host - data of single host\n * @reactProps {!function} onShowModal - method executed when \"new complex metric\" modal should be shown\n * @reactProps {!function} onRemove - method executed when complex metric should be removed\n */\nconst MetricCell = ({host, onShowModal, onRemove}) => {\n    const invalidatedClass = host.metricsInvalidated === true ? ' metrics-invalidated' : '';\n    return (\n        <div className={`ant-tag-wrapper${invalidatedClass}`}>\n            {\n                host.metrics.map(metric => <SingleMetric hostname={host.hostname} key={metric.id} metric={metric} onRemove={onRemove} found={host.found}/>)\n            }\n            <Tag\n                onClick={() => onShowModal(host.hostname)}\n                style={{ background: '#fff', borderStyle: 'dashed' }}\n            >\n                <Icon type=\"plus\" /> Dodaj metrykę złożoną\n            </Tag>\n        </div>\n    );\n};\n\nexport default MetricCell;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetricCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "MetricCell",
    "memberof": "src/components/HostList/MetricCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/index.js~MetricCell",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetricCell/index.js",
    "importStyle": "MetricCell",
    "description": "This component displays single metric cell in host list table",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@reactProps",
        "tagValue": "{!object} host - data of single host"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{!function} onShowModal - method executed when \"new complex metric\" modal should be shown"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{!function} onRemove - method executed when complex metric should be removed"
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"host\": *, \"onShowModal\": *, \"onRemove\": *}"
        ],
        "defaultRaw": {
          "host": null,
          "onShowModal": null,
          "onRemove": null
        },
        "defaultValue": "{\"host\":null,\"onShowModal\":null,\"onRemove\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/components/HostList/MetricFilter/index.js",
    "content": "import React from 'react';\nimport { Select, Button } from 'antd';\nconst { Option, OptGroup } = Select;\n\nclass MetricFilter extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: []\n        };\n    }\n\n    onChangeSelect = (selected) => {\n        this.setState({\n            selected\n        });\n    };\n\n    onClear = () => {\n        this.setState({\n            selected: []\n        });\n        this.props.onClear();\n    };\n\n    onSelect = () => {\n        this.props.onSelect(this.state.selected);\n    };\n\n    componentDidMount() {\n        window.addEventListener('click', this.props.onDismiss);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.props.onDismiss);\n    }\n\n    render() {\n        const { metrics } = this.props;\n        return (\n            <div className=\"metric-filter-select\" onClick={e => e.stopPropagation()}>\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Wybierz metryki\"\n                    onChange={this.onChangeSelect}\n                    value={this.state.selected}\n                >\n                    <OptGroup label=\"bazowe\">\n                        {Object.entries(metrics.base).map(([id, metric]) => <Option key={metric}>{metric}</Option>)}\n                    </OptGroup>\n                    <OptGroup label=\"złożone\">\n                        {Object.entries(metrics.complex).map(([id, metric]) => <Option key={metric}>{metric}</Option>)}\n                    </OptGroup>\n                </Select>\n                <Button type=\"primary\" onClick={this.onSelect}>Wybierz</Button>\n                {\n                    this.state.selected.length > 0 ? <Button type=\"default\" onClick={this.onClear}>Wyczyść</Button> : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MetricFilter;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/MetricFilter/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/HostList/MetricFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetricFilter/index.js~Option",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/HostList/MetricFilter/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "class",
    "name": "MetricFilter",
    "memberof": "src/components/HostList/MetricFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/MetricFilter/index.js",
    "importStyle": "MetricFilter",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 325,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"selected\": *}"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "onChangeSelect",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onChangeSelect",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#render",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "content": "import React from 'react';\nimport { Icon, Tooltip } from 'antd';\n\nexport class Input extends React.PureComponent {\n    render() {\n        const {id, value, placeholder, disabled, help, icon, onClear, onChange, children} = this.props;\n        let input = null;\n        return React.Children.map(children, (child) => (\n            React.cloneElement(child, {\n                placeholder,\n                disabled,\n                value,\n                prefix: typeof icon !== 'undefined' ? <Icon type={icon} style={{color: 'rgba(0,0,0,.25)'}}/> : null,\n                suffix: value && !disabled ? <Icon type=\"close-circle\" onClick={() => {\n                    onClear(id);\n                    input.focus();\n                }}/> : null,\n                onChange: !disabled ? (e) => onChange(id, typeof e === 'object' ? e.target.value : e) : () => null,\n                ref: node => input = node,\n                addonAfter: help ? <Tooltip title={help}><Icon type=\"question-circle-o\"/></Tooltip> : ''\n            })\n        ));\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "class",
    "name": "Input",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "importStyle": "{Input}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input#render",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "content": "import React from 'react';\nimport { Select as OriginalSelect } from 'antd';\n\nexport class Select extends React.PureComponent {\n    render() {\n        const {id, searchable, disabled, options, onChange} = this.props;\n        return (\n            <OriginalSelect\n                {...this.props}\n                showSearch={searchable}\n                disabled={disabled}\n                onChange={!disabled ? (v) => onChange(id, v) : () => null}\n            >\n                {\n                    options.map(option => {\n                        return <OriginalSelect.Option key={option.value} value={option.value}>{option.name}</OriginalSelect.Option>\n                    })\n                }\n            </OriginalSelect>\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "class",
    "name": "Select",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "importStyle": "{Select}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select#render",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "content": "import React from 'react';\nimport { Form } from 'antd';\n\nconst FormItem = ({ label, children }) => (\n    <Form.Item label={label}>\n        {React.Children.map(children, (child) => (\n            React.cloneElement(child, { placeholder: label })\n        ))}\n    </Form.Item>\n);\n\nexport default FormItem;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "FormItem",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js~FormItem",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "importStyle": "FormItem",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"label\": *, \"children\": *}"
        ],
        "defaultRaw": {
          "label": null,
          "children": null
        },
        "defaultValue": "{\"label\":null,\"children\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 341,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "content": "import React from 'react';\n\nimport { Form, Input, InputNumber } from 'antd';\nimport FormItem from './FormItem';\nimport { Input as DecoratedInput } from './Decorated/Input';\nimport { Select as DecoratedSelect } from './Decorated/Select';\n\nconst { TextArea } = Input;\n\nconst MetricForm = ({form, host, metrics, onChange, onClear, setFormRef, newMetric}) => {\n    setFormRef(form);\n    if(host !== null) {\n        return(\n            <Form className=\"metric-add-form\">\n                <FormItem label=\"Nazwa hosta\">\n                    <DecoratedInput id=\"hostname\" disabled={true} icon=\"desktop\" value={host.hostname} help=\"Adres hosta\">\n                        <Input />\n                    </DecoratedInput>\n                </FormItem>\n                <FormItem label=\"Metryka bazowa\">\n                    {form.getFieldDecorator('parent_id', {\n                        rules: [{ required: true, message: 'Metryka bazowa musi zostać wybrana' }],\n                    })(\n                        <DecoratedSelect id=\"parent_id\" icon=\"bulb\" help=\"Bazowa metryka dla obecnie tworzonej\" options={metrics} onChange={onChange} onClear={onClear} />\n                    )}\n                </FormItem>\n                <FormItem label=\"Opis metryki\">\n                    {form.getFieldDecorator('description', {\n                        rules: [{ required: true, message: 'Proszę podać opis metryki' }],\n                    })(\n                        <TextArea id=\"description\" onChange={(e) => onChange('description', e.target.value)} />\n                    )}\n                </FormItem>\n                <FormItem label=\"Szerokość okna czasowego\">\n                    {form.getFieldDecorator('moving_window_duration', {\n                        rules: [{ required: true, message: 'Proszę podać szerokość okna czasowego' }],\n                    })(\n                        <InputNumber id=\"moving_window_duration\" help=\"Szerokość okna czasowego\" onChange={onChange} onClear={onClear} min={1} />\n                    )}\n                </FormItem>\n                <FormItem label=\"Częstotliwość\">\n                    {form.getFieldDecorator('interval', {\n                        rules: [{ required: true, message: 'Proszę podać częstotliwość' }],\n                    })(\n                        <InputNumber id=\"interval\" help=\"Częstotliwość\" onChange={onChange} onClear={onClear} min={1} />\n                    )}\n                </FormItem>\n            </Form>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst WrappedMetricForm = Form.create()(MetricForm);\nexport default WrappedMetricForm;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 342,
    "kind": "variable",
    "name": "TextArea",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~TextArea",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "MetricForm",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~MetricForm",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"host\": *, \"metrics\": *, \"onChange\": *, \"onClear\": *, \"setFormRef\": *, \"newMetric\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "host": null,
          "metrics": null,
          "onChange": null,
          "onClear": null,
          "setFormRef": null,
          "newMetric": null
        },
        "defaultValue": "{\"form\":null,\"host\":null,\"metrics\":null,\"onChange\":null,\"onClear\":null,\"setFormRef\":null,\"newMetric\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 344,
    "kind": "variable",
    "name": "WrappedMetricForm",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~WrappedMetricForm",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": "WrappedMetricForm",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/index.js",
    "content": "import React from 'react';\nimport { Modal } from 'antd';\n\nimport MetricForm from './MetricForm';\n\nclass NewMetricModal extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: true,\n            loading: false,\n            newMetric: this.getNewMetricValues(),\n            baseMetrics: this.getBaseMetrics(props)\n        };\n        this.form = null;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.host !== nextProps.host) {\n            this.setState({\n                baseMetrics: this.getBaseMetrics(nextProps),\n                newMetric: this.getNewMetricValues()\n            });\n        }\n    }\n\n    getNewMetricValues() {\n        return {\n            description: '',\n            parent_id: null,\n            unit: '',\n            moving_window_duration: '',\n            interval: ''\n        };\n    }\n\n    getBaseMetrics = (props) => {\n        let baseMetrics = [];\n        if(props.host !== null) {\n            const { metrics } = props.host;\n            if(typeof metrics !== 'undefined') {\n                metrics.forEach(metric => {\n                    if(metric.parent_id === null) {\n                        baseMetrics.push({\n                            name: `${metric.id} (${metric.description})`,\n                            value: metric.id\n                        });\n                    }\n                });\n            }\n        }\n        return baseMetrics;\n    };\n\n    onChange = (key, value) => {\n        let newMetric = Object.assign({}, this.state.newMetric);\n        newMetric[key] = value;\n        this.setState({\n            newMetric\n        });\n    };\n\n    onClear = (key) => {\n        let newMetric = Object.assign({}, this.state.newMetric);\n        newMetric[key] = '';\n        this.setState({\n            newMetric\n        });\n    };\n\n    clearModal = () => {\n        this.setState({\n            newMetric: this.getNewMetricValues(),\n        });\n        this.props.onClose();\n    };\n\n    addMetric = () => {\n        if(this.form !== null) {\n            this.form.validateFields((err, values) => {\n                if (!err) {\n                    this.props.onAddMetric(this.props.host.hostname, this.state.newMetric);\n                    this.setState({\n                        loading: true\n                    });\n                    this.form.setFieldsValue(this.getNewMetricValues());\n                }\n            });\n        }\n    };\n\n    setFormRef = (form) => {\n        this.form = form;\n    };\n\n    render() {\n        const {host} = this.props;\n            return (\n                <Modal\n                    title=\"Nowa metryka złożona\"\n                    visible={this.props.host !== null}\n                    onOk={this.addMetric}\n                    onCancel={this.clearModal}\n                    okText=\"Dodaj metrykę\"\n                    cancelText=\"Anuluj\"\n                    confirmLoading={this.state.loading}\n                >\n                    <MetricForm host={host} metrics={this.state.baseMetrics} newMetric={this.state.newMetric} setFormRef={this.setFormRef} onChange={this.onChange} onClear={this.onClear} />\n                </Modal>\n            );\n        }\n}\n\nexport default NewMetricModal;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/NewMetricModal/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "class",
    "name": "NewMetricModal",
    "memberof": "src/components/HostList/NewMetricModal/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/NewMetricModal/index.js",
    "importStyle": "NewMetricModal",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 347,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"validated\": boolean, \"loading\": *, \"newMetric\": *, \"baseMetrics\": *}"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "form",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#form",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "getNewMetricValues",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#getNewMetricValues",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"description\": *, \"parent_id\": *, \"unit\": *, \"moving_window_duration\": *, \"interval\": *}"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "getBaseMetrics",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#getBaseMetrics",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "clearModal",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#clearModal",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "addMetric",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#addMetric",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "setFormRef",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#setFormRef",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#render",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "file",
    "name": "src/components/HostList/index.js",
    "content": "import React from 'react';\nimport { Table } from 'antd';\nimport NewMetricModal from './NewMetricModal';\nimport MetadataCell from './MetadataCell';\nimport MetricCell from './MetricCell';\n\nimport {Hostname as HostnameFiltered} from \"./FilteredTable/Hostname\";\nimport {Metrics as MetricsFiltered} from \"./FilteredTable/Metrics\";\nimport {Metadata as MetadataFiltered} from \"./FilteredTable/Metadata\";\n\nimport './index.less';\n\nclass HostList extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        hostToAddMetric: null\n    });\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props !== nextProps) {\n            this.setState(this.getInitialState());\n        }\n    }\n\n    showModal = (hostname) => {\n        const hostToAddMetric = this.props.hosts.find(host => host.hostname === hostname);\n        if(typeof hostToAddMetric !== 'undefined') {\n            this.setState({\n                hostToAddMetric\n            })\n        }\n    };\n\n    closeModal = () => {\n        this.setState({\n            hostToAddMetric: null\n        })\n    };\n\n    allMetadata = (hosts) => {\n        const metadata = {};\n        hosts.forEach((host) => {\n            host.metadata.forEach((singleMetadata) => {\n                metadata[singleMetadata.id] = singleMetadata;\n            });\n        });\n        return metadata;\n    };\n\n    allMetrics = (hosts) => {\n        const base = {}, complex = {};\n        hosts.forEach((host) => {\n            host.metrics.forEach((metric) => {\n                if(metric.parent_id === null) {\n                    base[metric.id] = metric.id;\n                } else {\n                    complex[metric.id] = metric.id;\n                }\n            });\n        });\n        return {\n            base,\n            complex\n        };\n    };\n\n    render() {\n        const columns = [{\n            title: 'Host',\n            dataIndex: 'displayName',\n            key: 'hostname',\n            width: '26%',\n        }, {\n            title: 'Metadane',\n            dataIndex: 'metadata',\n            key: 'metadata',\n            width: '37%',\n            render: (metadata, host) => <MetadataCell metadata={metadata}/>,\n        }, {\n            title: 'Metryki',\n            dataIndex: 'metrics',\n            key: 'metrics',\n            width: '37%',\n            render: (metrics, host) => <MetricCell onShowModal={this.showModal} onRemove={this.props.onRemoveMetric} host={host}/>,\n        }];\n\n        const hosts = this.props.hosts.map(host => ({\n            ...host,\n            key: host.hostname,\n            displayName: host.hostname\n        }));\n\n        return (\n            <div className=\"host-list\">\n                <NewMetricModal host={this.state.hostToAddMetric} onAddMetric={this.props.onAddMetric} onClose={this.closeModal}/>\n                <HostnameFiltered dataSource={hosts} columns={columns}>\n                    <MetricsFiltered metrics={this.allMetrics(this.props.hosts)}>\n                        <MetadataFiltered metadata={this.allMetadata(this.props.hosts)}>\n                            <Table size=\"middle\" bordered />\n                        </MetadataFiltered>\n                    </MetricsFiltered>\n                </HostnameFiltered>\n            </div>\n        );\n    }\n}\n\nexport default HostList;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 361,
    "kind": "class",
    "name": "HostList",
    "memberof": "src/components/HostList/index.js",
    "static": true,
    "longname": "src/components/HostList/index.js~HostList",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/index.js",
    "importStyle": "HostList",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 362,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 363,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#state",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 366,
    "kind": "member",
    "name": "showModal",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#showModal",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "member",
    "name": "closeModal",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#closeModal",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "member",
    "name": "allMetadata",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#allMetadata",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "member",
    "name": "allMetrics",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#allMetrics",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#render",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "file",
    "name": "src/components/HostList/usage/TableContainer.js",
    "content": "import React from 'react';\nimport HostList from '../index';\nimport {fakeData} from \"./fakeData\";\n\nclass TableContainer extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: fakeData\n        };\n    }\n\n    addMetric = (hostname, metric) => {\n        const dataSource = this.state.dataSource.slice().map(data => {\n            if(data.hostname === hostname) {\n                metric.id = Math.floor(Math.random()*1000)\n                data.metrics.push(metric);\n            }\n            return data;\n        });\n        setTimeout(() => {\n            console.log(dataSource);\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    removeMetric = (hostname, metric_id) => {\n        console.log(hostname, metric_id);\n        const dataSource = this.state.dataSource.slice().map(data => {\n            if(data.hostname === hostname) {\n                const foundIndex = data.metrics.findIndex(metric => metric.id === metric_id);\n                if(foundIndex >= 0) {\n                    data.metrics.splice(foundIndex, 1);\n                }\n            }\n            return data;\n        });\n        setTimeout(() => {\n            console.log(dataSource);\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeCell = (rowId, colId, value) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId][colId] = value;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeRow = (rowId, newColumn) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId] = newColumn;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    addRow = (row) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.push(row);\n        this.setState({\n            dataSource\n        });\n    };\n\n    deleteRow = (rowId) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.splice(rowId, 1);\n        this.setState({\n            dataSource\n        });\n    };\n\n    render() {\n        return (\n            <HostList hosts={fakeData} onAddMetric={this.addMetric} onRemoveMetric={this.removeMetric}/>\n        )\n    }\n}\n\nexport default TableContainer;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/usage/TableContainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "class",
    "name": "TableContainer",
    "memberof": "src/components/HostList/usage/TableContainer.js",
    "static": true,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/usage/TableContainer.js",
    "importStyle": "TableContainer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 373,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "addMetric",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#addMetric",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "member",
    "name": "removeMetric",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#removeMetric",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "changeCell",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#changeCell",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "changeRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#changeRow",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "deleteRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#deleteRow",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#render",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "file",
    "name": "src/components/HostList/usage/fakeData.js",
    "content": "export const fakeData = [\n    {\n        hostname: \"www.host1.fis.pl\",\n        metadata: [\n            {\n                id: 'OS',\n                name: \"Os Version\",\n                value: \"Ubuntu 12.2\"\n            },\n            {\n                id: 'MAX_RAM',\n                name: \"Max RAM\",\n                value: \"12 GB\"\n            }\n        ],\n        metrics: [\n            {\n                id: 'CPU',\n                description: 'CPU usage',\n                parent_id: null,\n                unit: '%',\n                removable: false\n            },{\n                id: 'RAM',\n                description: 'RAM usage',\n                parent_id: null,\n                unit: 'Mb',\n                removable: false\n            }, {\n                id: 'ADV_1',\n                description: 'Taka sobie metryka złożona',\n                parent_id: 'CPU',\n                unit: '%',\n                moving_window_duration: 50,\n                interval: 1,\n                removable: true\n            }, {\n                id: 'RAM_ADV5',\n                description: 'Inna metryka złożona (RAM)',\n                parent_id: 'RAM',\n                unit: 'Mb',\n                moving_window_duration: 21,\n                interval: 6,\n                removable: false\n            }\n        ]\n    },\n    {\n        hostname: \"www.host2.fis.pl\",\n        metadata: [\n            {\n                id: 'OS',\n                name: \"Os Version\",\n                value: \"Ubuntu 12.2\"\n            }, {\n                id: 'MAX_RAM',\n                name: \"Max RAM\",\n                value: \"12 GB\"\n            }, {\n                id: 'DISC_USG',\n                name: \"Disc usage\",\n                value: \"38%\"\n            }\n        ],\n        metrics: [\n            {\n                id: 'CPU',\n                description: 'CPU usage',\n                parent_id: null,\n                unit: '%',\n                removable: false\n            }, {\n                id: 'ADV_1',\n                description: 'Taka sobie metryka złożona',\n                parent_id: 'CPU',\n                unit: '%',\n                moving_window_duration: 50,\n                interval: 1,\n                removable: true\n            }\n        ]\n    }\n];\n\nexport const fakeColumns = [\n\n];\n\n/*\nconst fakeModel = [\n    {\n        __editMode: false,\n        key: 1,\n        col1: { __editMode: false, __value: \"val1\" },\n        col2: { __editMode: true, __value: \"val2\", __oldValue: \"new value 2\" },\n    },\n    {\n        __editMode: false,\n        key: 2,\n        col1: { __editMode: false, __value: \"val3\" },\n        col2: { __editMode: true, __value: \"val4\", __oldValue: \"new value 4\" },\n    },\n];\n*/\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/HostList/usage/fakeData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "variable",
    "name": "fakeData",
    "memberof": "src/components/HostList/usage/fakeData.js",
    "static": true,
    "longname": "src/components/HostList/usage/fakeData.js~fakeData",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/usage/fakeData.js",
    "importStyle": "{fakeData}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "name": "fakeColumns",
    "memberof": "src/components/HostList/usage/fakeData.js",
    "static": true,
    "longname": "src/components/HostList/usage/fakeData.js~fakeColumns",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/HostList/usage/fakeData.js",
    "importStyle": "{fakeColumns}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "src/components/LoginForm/index.js",
    "content": "import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport './index.less';\n\nconst FormItem = Form.Item;\n\nconst LoginForm = ({ form, indeterminate, signIn }) => (\n    <Form onSubmit={e => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                signIn(values);\n            }\n        });\n    }} className={`login-form ${indeterminate ? 'indeterminate' : ''}`}>\n        <FormItem>\n            {form.getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Nazwa użytkownika musi zostać podana' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Nazwa użytkownika\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Hasło musi zostać podane' }],\n            })(\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n            })(\n                <Checkbox>Zapamiętaj mnie</Checkbox>\n            )}\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Zaloguj się\n            </Button>\n        </FormItem>\n    </Form>\n);\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\nexport default WrappedLoginForm;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/LoginForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "variable",
    "name": "FormItem",
    "memberof": "src/components/LoginForm/index.js",
    "static": true,
    "longname": "src/components/LoginForm/index.js~FormItem",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "LoginForm",
    "memberof": "src/components/LoginForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/LoginForm/index.js~LoginForm",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"indeterminate\": *, \"signIn\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "indeterminate": null,
          "signIn": null
        },
        "defaultValue": "{\"form\":null,\"indeterminate\":null,\"signIn\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "variable",
    "name": "WrappedLoginForm",
    "memberof": "src/components/LoginForm/index.js",
    "static": true,
    "longname": "src/components/LoginForm/index.js~WrappedLoginForm",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/LoginForm/index.js",
    "importStyle": "WrappedLoginForm",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "src/components/MonitorsTable/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport EditableTable from '../EditableTable';\nimport strToColor from '../../utils/strToColor';\nimport './index.less';\n\nconst columns = [\n    {\n        name: \"Adres\",\n        id: \"address\",\n        editable: true,\n        sortable: true,\n        width: '30%',\n        required: true,\n        prefixRender: (field) => <Icon className=\"monitor-icon\" type=\"database\" style={{ color: strToColor(field.value) }} />\n    },\n    {\n        name: \"Opis\",\n        id: \"description\",\n        editable: true,\n        sortable: true,\n        required: true,\n        width: '50%',\n    },\n    {\n        name: \"Menu\",\n        type: \"menu\",\n        buttons: [\n            {\n                name: \"Edytuj\",\n                type: \"edit\",\n            },\n            {\n                name: \"Usuń\",\n                type: \"delete\",\n            },\n        ]\n    }\n];\n\nconst MonitorsTable = ({ changeMonitorAddress, changeMonitorDescription, changeMonitor, addMonitor, removeMonitor, ...props }) => (\n    <EditableTable\n        className=\"monitors-table\"\n        columns={columns}\n        onChangeCell={(rowId, colId, value) => {\n            const address = props.dataSource[rowId].address;\n            if (colId === 'address') {\n                changeMonitorAddress(address, value);\n            }\n            else if (colId === 'description') {\n                changeMonitorDescription(address, value);\n            }\n        }}\n        onChangeRow={(rowId, rowData) => {\n            const address = props.dataSource[rowId].address;\n            changeMonitor(address, rowData);\n        }}\n        onAddRow={addMonitor}\n        onDeleteRow={(rowId) => {\n            const address = props.dataSource[rowId].address;\n            removeMonitor(address);\n        }}\n        {...props}\n    />\n);\n\nexport default MonitorsTable;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/MonitorsTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "columns",
    "memberof": "src/components/MonitorsTable/index.js",
    "static": true,
    "longname": "src/components/MonitorsTable/index.js~columns",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 391,
    "kind": "function",
    "name": "MonitorsTable",
    "memberof": "src/components/MonitorsTable/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/MonitorsTable/index.js~MonitorsTable",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/MonitorsTable/index.js",
    "importStyle": "MonitorsTable",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"changeMonitorAddress\": *, \"changeMonitorDescription\": *, \"changeMonitor\": *, \"addMonitor\": *, \"removeMonitor\": *, ...props: Object}"
        ],
        "defaultRaw": {
          "changeMonitorAddress": null,
          "changeMonitorDescription": null,
          "changeMonitor": null,
          "addMonitor": null,
          "removeMonitor": null,
          "props": {}
        },
        "defaultValue": "{\"changeMonitorAddress\":null,\"changeMonitorDescription\":null,\"changeMonitor\":null,\"addMonitor\":null,\"removeMonitor\":null,\"props\":{}}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "src/components/Notification/index.js",
    "content": "import {notification} from 'antd';\n\n/*\n    Example:\n\n    import Notification from \"/components/Notification\";\n\n    Notification.error(\"Błędny login lub hasło\");\n    Notification.success(\"Metryka zaawansowana została dodana\");\n */\n\nexport default class Notification\n{\n    static success(description) {\n        notification.success({\n            message: \"Sukces\",\n            placement: \"bottomLeft\",\n            duration: 3,\n            description\n        });\n    }\n\n    static info(description) {\n        notification.info({\n            message: \"Informacja\",\n            placement: \"bottomLeft\",\n            duration: 3,\n            description\n        });\n    }\n\n    static warning(description) {\n        notification.warning({\n            message: \"Ostrzeżenie\",\n            placement: \"bottomLeft\",\n            duration: 3,\n            description\n        });\n    }\n\n    static error(description) {\n        notification.error({\n            message: \"Błąd\",\n            placement: \"bottomLeft\",\n            duration: 3,\n            description\n        });\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/Notification/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "class",
    "name": "Notification",
    "memberof": "src/components/Notification/index.js",
    "static": true,
    "longname": "src/components/Notification/index.js~Notification",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/Notification/index.js",
    "importStyle": "Notification",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "success",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.success",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "info",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.info",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "warning",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.warning",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "error",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.error",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "src/components/RefreshHostsButton/index.js",
    "content": "import React from 'react';\nimport { Button, Icon } from 'antd';\nimport './index.less';\n\nconst RefreshHostsButton = ({ invalidated, refresh }) => <Button\n    type=\"primary\"\n    className=\"refresh-hosts-button\"\n    disabled={invalidated}\n    onClick={refresh}\n><Icon type=\"reload\" />Odśwież listę hostów</Button>\n\nexport default RefreshHostsButton;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/RefreshHostsButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "RefreshHostsButton",
    "memberof": "src/components/RefreshHostsButton/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/RefreshHostsButton/index.js~RefreshHostsButton",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/RefreshHostsButton/index.js",
    "importStyle": "RefreshHostsButton",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"invalidated\": *, \"refresh\": *}"
        ],
        "defaultRaw": {
          "invalidated": null,
          "refresh": null
        },
        "defaultValue": "{\"invalidated\":null,\"refresh\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/components/RegisterForm/index.js",
    "content": "import React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport './index.less';\n\nconst FormItem = Form.Item;\n\nconst RegisterForm = ({ form, indeterminate, signUp }) => (\n    <Form onSubmit={e => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                const { password2, ...credentials } = values;\n                signUp(credentials);\n            }\n        });\n    }} className={`login-form ${indeterminate ? 'indeterminate' : ''}`}>\n        <FormItem>\n            {form.getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Nazwa użytkownika musi zostać podana' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Nazwa użytkownika\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Hasło musi zostać podane' }],\n            })(\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password2', {\n                rules: [{ validator: (rule, password2, callback) => {\n                    const password = form.getFieldValue('password');\n                    if (password2 && password === password2) {\n                        callback();\n                    }\n                    else {\n                        callback(true);\n                    }\n                }, message: 'Hasła muszą być identyczne' }],\n            })(\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Powtórz hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                Zarejestruj się\n            </Button>\n        </FormItem>\n    </Form>\n);\n\nconst WrappedRegisterForm = Form.create()(RegisterForm);\n\nexport default WrappedRegisterForm;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/components/RegisterForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "variable",
    "name": "FormItem",
    "memberof": "src/components/RegisterForm/index.js",
    "static": true,
    "longname": "src/components/RegisterForm/index.js~FormItem",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "function",
    "name": "RegisterForm",
    "memberof": "src/components/RegisterForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/RegisterForm/index.js~RegisterForm",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/components/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"indeterminate\": *, \"signUp\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "indeterminate": null,
          "signUp": null
        },
        "defaultValue": "{\"form\":null,\"indeterminate\":null,\"signUp\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "variable",
    "name": "WrappedRegisterForm",
    "memberof": "src/components/RegisterForm/index.js",
    "static": true,
    "longname": "src/components/RegisterForm/index.js~WrappedRegisterForm",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/components/RegisterForm/index.js",
    "importStyle": "WrappedRegisterForm",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "file",
    "name": "src/containers/AddLiveChart/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMetricsArray } from '../../reducers';\nimport { addLiveChart } from '../../actions/liveCharts';\nimport AddChart from '../../components/AddChart';\n\nconst mapStateToProps = (state) => ({\n    metrics: getMetricsArray(state)\n});\n\nconst mapDispatchToProps = {\n    onAdd: addLiveChart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddChart);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/AddLiveChart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AddLiveChart/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AddLiveChart/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AddLiveChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AddLiveChart/index.js",
    "static": true,
    "longname": "src/containers/AddLiveChart/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AddLiveChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"onAdd\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/containers/AppLayout/__tests__/layout.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport AppLayout from '../index.js';\nimport initStore from '../../../initStore';\n\nit('renders without crashing', () => {\n    const div = document.createElement('div');\n    const { store, history } = initStore({ router: { location: { pathname: 'test-pathname' }}});\n    ReactDOM.render((\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <AppLayout>\n                    <p>Junk</p>\n                </AppLayout>\n            </ConnectedRouter>\n        </Provider>\n    ), div);\n    ReactDOM.unmountComponentAtNode(div);\n});\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/AppLayout/__tests__/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "src/containers/AppLayout/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getLocation, isAuthTokenSet } from '../../reducers';\nimport { signOut } from '../../actions/auth';\nimport AppLayout from '../../components/AppLayout'\n\nconst mapStateToProps = (state) => ({\n    location: getLocation(state),\n    auth: isAuthTokenSet(state)\n})\n\nconst mapDispatchToProps = {\n    signOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLayout);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/AppLayout/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AppLayout/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AppLayout/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 410,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AppLayout/index.js",
    "static": true,
    "longname": "src/containers/AppLayout/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"signOut\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 411,
    "kind": "file",
    "name": "src/containers/AuthServer/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getAuthServer } from '../../reducers';\nimport * as authActions from '../../actions/auth';\nimport AuthServer from '../../components/AuthServer'\n\nconst mapStateToProps = (state) => ({\n    authServer: getAuthServer(state)\n})\n\nconst mapDispatchToProps = {\n    changeAuthServer: authActions.changeAuthServer\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthServer);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/AuthServer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AuthServer/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AuthServer/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AuthServer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AuthServer/index.js",
    "static": true,
    "longname": "src/containers/AuthServer/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/AuthServer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"changeAuthServer\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 414,
    "kind": "file",
    "name": "src/containers/HostList/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getHostsArray } from '../../reducers';\nimport HostList from '../../components/HostList';\n\nconst mapStateToProps = (state) => ({\n    hosts: getHostsArray(state)\n})\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HostList);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/HostList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/HostList/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/HostList/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/HostList/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/HostList/index.js",
    "static": true,
    "longname": "src/containers/HostList/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/HostList/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 417,
    "kind": "file",
    "name": "src/containers/LoginForm/index.js",
    "content": "import { connect } from 'react-redux';\nimport * as authActions from '../../actions/auth';\nimport { getAuthTokenRequested } from '../../reducers';\nimport LoginForm from '../../components/LoginForm';\n\nconst mapStateToProps = (state) => ({\n    indeterminate: getAuthTokenRequested(state)\n})\n\nconst mapDispatchToProps = {\n    signIn: authActions.signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/LoginForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 418,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/LoginForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/LoginForm/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/LoginForm/index.js",
    "static": true,
    "longname": "src/containers/LoginForm/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"signIn\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "src/containers/MonitorsTable/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMonitorsArray } from '../../reducers';\nimport { changeMonitorAddress, changeMonitorDescription, changeMonitor, addMonitor, removeMonitor } from '../../actions/monitors';\nimport MonitorsTable from '../../components/MonitorsTable';\n\nconst mapStateToProps = (state) => ({\n    dataSource: getMonitorsArray(state)\n})\n\nconst mapDispatchToProps = {\n    changeMonitorAddress,\n    changeMonitorDescription,\n    changeMonitor,\n    addMonitor,\n    removeMonitor\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorsTable);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/MonitorsTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/MonitorsTable/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/MonitorsTable/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 422,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/MonitorsTable/index.js",
    "static": true,
    "longname": "src/containers/MonitorsTable/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"changeMonitorAddress\": *, \"changeMonitorDescription\": *, \"changeMonitor\": *, \"addMonitor\": *, \"removeMonitor\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "src/containers/RefreshHostsButton/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMonitorsHostsInvalidated } from '../../reducers';\nimport { refreshHosts } from '../../actions/hosts';\nimport RefreshHostsButton from '../../components/RefreshHostsButton';\n\nconst mapStateToProps = (state) => ({\n    invalidated: getMonitorsHostsInvalidated(state)\n})\n\nconst mapDispatchToProps = {\n    refresh: refreshHosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RefreshHostsButton);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/RefreshHostsButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/RefreshHostsButton/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/RefreshHostsButton/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/RefreshHostsButton/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/RefreshHostsButton/index.js",
    "static": true,
    "longname": "src/containers/RefreshHostsButton/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/RefreshHostsButton/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"refresh\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 426,
    "kind": "file",
    "name": "src/containers/RegisterForm/index.js",
    "content": "import { connect } from 'react-redux';\nimport * as authActions from '../../actions/auth';\nimport { getAuthTokenRequested } from '../../reducers';\nimport RegisterForm from '../../components/RegisterForm';\n\nconst mapStateToProps = (state) => ({\n    indeterminate: getAuthTokenRequested(state)\n})\n\nconst mapDispatchToProps = {\n    signUp: authActions.signUp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/containers/RegisterForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/RegisterForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/RegisterForm/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/RegisterForm/index.js",
    "static": true,
    "longname": "src/containers/RegisterForm/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/containers/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"signUp\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport registerServiceWorker from './registerServiceWorker';\nimport AppLayout from './containers/AppLayout';\nimport initStore from './initStore';\nimport { routes } from './routes';\nimport NotFound from './pages/NotFound';\n\nconst { store, history } = initStore();\n\nconst App = () => (\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <AppLayout>\n                <Switch>\n                    {routes}\n                    <Route component={NotFound} />\n                </Switch>\n            </AppLayout>\n        </ConnectedRouter>\n    </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "store",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~store",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 431,
    "kind": "function",
    "name": "App",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~App",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 432,
    "kind": "file",
    "name": "src/initStore.js",
    "content": "import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\nimport createHistory from 'history/createBrowserHistory';\nimport reducer from './reducers';\n\nimport home from './middlewares/home';\nimport notifications from './middlewares/notifications';\nimport routesChecker from './middlewares/routesChecker';\nimport globalsStorage from './middlewares/globalsStorage';\nimport hostsProvider from './middlewares/hostsProvider';\n\nexport default (initialState) => {\n    const history = createHistory();\n    const routerMid = routerMiddleware(history);\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    return {\n        store: createStore(\n            reducer,\n            initialState,\n            composeEnhancers(\n                applyMiddleware(routesChecker, home, notifications, globalsStorage, hostsProvider, reduxThunk, routerMid)\n            )\n        ),\n        history\n    };\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/initStore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "function",
    "name": "initStore",
    "memberof": "src/initStore.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/initStore.js~initStore",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/initStore.js",
    "importStyle": "initStore",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "initialState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"store\": *, \"history\": *}"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "file",
    "name": "src/middlewares/globalsStorage.js",
    "content": "import { SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT, CHANGE_AUTH_SERVER, RESTORE_SESSION } from '../actions/auth';\nimport {\n    CHANGE_MONITOR_ADDRESS,\n    CHANGE_MONITOR_DESCRIPTION,\n    CHANGE_MONITOR,\n    ADD_MONITOR,\n    REMOVE_MONITOR\n} from '../actions/monitors';\nimport { getAuthServer, getMonitorsArray } from '../reducers';\n\nconst AUTH_SERVER_STORAGE_KEY = 'AUTH_SERVER';\nconst MONITORS_STORAGE_KEY = 'MONITORS';\nconst TOKEN_KEY = 'TOKEN';\n\nexport const getSavedAuthServer = () => {\n    return localStorage.getItem(AUTH_SERVER_STORAGE_KEY) || window.DEFAULT_AUTH_SERVER;\n};\n\nexport const getSavedMonitors = () => {\n    const storedMonitors = localStorage.getItem(MONITORS_STORAGE_KEY);\n    if (storedMonitors) {\n        let parsed;\n        try {\n            parsed = JSON.parse(storedMonitors);\n        }\n        catch (err) {}\n        if (parsed) {\n            return parsed;\n        }\n    }\n    return window.DEFAULT_MONITORS;\n}\n\nexport default store => next => action => {\n\n    if (action.type === SIGN_IN_SUCCESS || action.type === SIGN_UP_SUCCESS) {\n        if (action.credentials.remember) {\n            localStorage.setItem(TOKEN_KEY, action.payload.token);\n        }\n        else {\n            localStorage.removeItem(TOKEN_KEY);\n        }\n    }\n\n    if (action.type === SIGN_OUT) {\n        localStorage.removeItem(TOKEN_KEY);\n    }\n\n    if (action.type === RESTORE_SESSION) {\n        const token = localStorage.getItem(TOKEN_KEY);\n        if (token) {\n            action.token = token;\n        }\n        else {\n            return;\n        }\n    }\n\n    if (action.type === CHANGE_AUTH_SERVER) {\n        const result = next(action);\n        const server = getAuthServer(store.getState());\n        if (action.server) {\n            localStorage.setItem(AUTH_SERVER_STORAGE_KEY, server);\n        }\n        else {\n            localStorage.removeItem(AUTH_SERVER_STORAGE_KEY);\n        }\n        return result;\n    }\n\n    else if (\n        action.type === CHANGE_MONITOR_ADDRESS ||\n        action.type === CHANGE_MONITOR_DESCRIPTION ||\n        action.type === CHANGE_MONITOR ||\n        action.type === ADD_MONITOR ||\n        action.type === REMOVE_MONITOR\n    ) {\n        const result = next(action);\n        const monitors = getMonitorsArray(store.getState());\n        localStorage.setItem(MONITORS_STORAGE_KEY, JSON.stringify(monitors));\n        return result;\n    }\n\n    return next(action);\n};\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/middlewares/globalsStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "name": "AUTH_SERVER_STORAGE_KEY",
    "memberof": "src/middlewares/globalsStorage.js",
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~AUTH_SERVER_STORAGE_KEY",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 436,
    "kind": "variable",
    "name": "MONITORS_STORAGE_KEY",
    "memberof": "src/middlewares/globalsStorage.js",
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~MONITORS_STORAGE_KEY",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 437,
    "kind": "variable",
    "name": "TOKEN_KEY",
    "memberof": "src/middlewares/globalsStorage.js",
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~TOKEN_KEY",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 438,
    "kind": "function",
    "name": "getSavedAuthServer",
    "memberof": "src/middlewares/globalsStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~getSavedAuthServer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": "{getSavedAuthServer}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "function",
    "name": "getSavedMonitors",
    "memberof": "src/middlewares/globalsStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~getSavedMonitors",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": "{getSavedMonitors}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "function",
    "name": "globalsStorage",
    "memberof": "src/middlewares/globalsStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/globalsStorage.js~globalsStorage",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/globalsStorage.js",
    "importStyle": "globalsStorage",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/middlewares/home.js",
    "content": "import { isAuthTokenSet } from '../reducers';\n\n/**\n * Catches home route and replaces it with default route for with-token or without-token state.\n * In result, you don't need to worry where to route after login / logout / etc.. - just\n * dispatch react-router-redux-ish push('/'). And OFC home routing could be accomplished in the same maneer.\n */\nexport default store => next => action => {\n    if (action.type === '@@router/LOCATION_CHANGE' && action.payload.pathname === '/') {\n        if (isAuthTokenSet(store.getState())) {\n            window.history.replaceState(null, document.title, '/live');\n            action.payload.pathname = '/live';\n        }\n        else {\n            window.history.replaceState(null, document.title, '/sign-in');\n            action.payload.pathname = '/sign-in';\n        }\n    }\n    return next(action);\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/middlewares/home.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "function",
    "name": "home",
    "memberof": "src/middlewares/home.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/home.js~home",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/home.js",
    "importStyle": "home",
    "description": "Catches home route and replaces it with default route for with-token or without-token state.\nIn result, you don't need to worry where to route after login / logout / etc.. - just\ndispatch react-router-redux-ish push('/'). And OFC home routing could be accomplished in the same maneer.",
    "lineNumber": 8,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "src/middlewares/hostsProvider.js",
    "content": "import { SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT, RESTORE_SESSION } from '../actions/auth';\nimport { CHANGE_MONITOR_ADDRESS, CHANGE_MONITOR, ADD_MONITOR } from '../actions/monitors';\nimport { GET_HOSTS_SUCCESS, GET_HOSTS_FAILURE, GET_HOSTS_REQUEST, refreshHosts } from '../actions/hosts';\nimport { getMonitorsHostsInvalidated } from '../reducers';\n\nconst refreshTimeout = 1000 * 60 * 5;\nlet timeout;\n\nconst clearHostsTimeout = () => timeout && clearInterval(timeout);\n\nexport default store => next => action => {\n\n    const result = next(action);\n\n    if (\n        action.type === SIGN_IN_SUCCESS\n        || action.type === SIGN_UP_SUCCESS\n        || action.type === RESTORE_SESSION\n        || (action.type === CHANGE_MONITOR_ADDRESS && action.address !== action.newAddress)\n        || (action.type === CHANGE_MONITOR && action.address !== action.payload.address)\n        || action.type === ADD_MONITOR\n        || (\n            (action.type === GET_HOSTS_FAILURE || action.type === GET_HOSTS_SUCCESS)\n            && !getMonitorsHostsInvalidated(store.getState())\n        )\n    ) {\n        clearHostsTimeout();\n        if (action.type !== GET_HOSTS_FAILURE && action.type !== GET_HOSTS_SUCCESS) {\n            store.dispatch(refreshHosts());\n        }\n        timeout = setInterval(() => {\n            store.dispatch(refreshHosts());\n        }, refreshTimeout);\n    }\n\n    else if (action.type === SIGN_OUT || action.type === GET_HOSTS_REQUEST) {\n        clearHostsTimeout();\n    }\n\n    else if (action.type === GET_HOSTS_FAILURE || action.type === GET_HOSTS_SUCCESS) {\n\n    }\n\n    return result;\n\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/middlewares/hostsProvider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "variable",
    "name": "refreshTimeout",
    "memberof": "src/middlewares/hostsProvider.js",
    "static": true,
    "longname": "src/middlewares/hostsProvider.js~refreshTimeout",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/hostsProvider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 445,
    "kind": "function",
    "name": "clearHostsTimeout",
    "memberof": "src/middlewares/hostsProvider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/hostsProvider.js~clearHostsTimeout",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/hostsProvider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "hostsProvider",
    "memberof": "src/middlewares/hostsProvider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/hostsProvider.js~hostsProvider",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/hostsProvider.js",
    "importStyle": "hostsProvider",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/middlewares/notifications.js",
    "content": "import Notification from '../components/Notification';\nimport { SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT } from '../actions/auth';\nimport { CHANGE_MONITOR_ADDRESS, CHANGE_MONITOR_DESCRIPTION, CHANGE_MONITOR, ADD_MONITOR } from '../actions/monitors';\nimport { getMonitorById } from '../reducers';\n\nconst errorToMsg = (code, error) => {\n    switch (code) {\n        case 400:\n            return 'Formularz został źle wypełniony';\n        case 401:\n            return 'Błędne dane autoryzacyjne';\n        case 404:\n            return 'Podany zasób nie istnieje';\n        case 409:\n            return 'Zasób, do którego próbujesz się odwołać, już istnieje i nie może zostać w ten sposób zmodyfikowany';\n        default:\n            return error;\n    }\n}\n\n/**\n * Notification logic core - it's always better to hold it in one place... so here we are :)\n */\nexport default store => next => action => {\n\n    if (action.error) {\n        const msg = errorToMsg(action.code, action.error);\n        Notification.error(msg);\n    }\n\n    else if (action.type === SIGN_IN_SUCCESS) {\n        Notification.success('Zostałeś zalogowany poprawnie');\n    }\n\n    else if (action.type === SIGN_UP_SUCCESS) {\n        Notification.success('Rejestracja przebiegła pomyślnie');\n    }\n\n    else if (action.type === SIGN_OUT) {\n        Notification.success('Zostałeś wylogowany poprawnie');\n    }\n\n    // notifications with checkings\n\n    else if (action.type === CHANGE_MONITOR_ADDRESS) {\n        const target = getMonitorById(store.getState(), action.address);\n        const monitorExists = getMonitorById(store.getState(), action.newAddress);\n        if (!action.newAddress) {\n            Notification.error('Pole z adresem monitora nie może być puste!');\n            action.newAddress = target.address;\n        }\n        else if (monitorExists) {\n            Notification.error('Podany nowy adres monitora już istnieje');\n            action.newAddress = target.address;\n        }\n    }\n\n    else if (action.type === CHANGE_MONITOR_DESCRIPTION) {\n        const target = getMonitorById(store.getState(), action.address);\n        if (!action.newDescription) {\n            Notification.error('Pole z opisem monitora nie może być puste!');\n            action.newDescription = target.description;\n        }\n    }\n\n    else if (action.type === CHANGE_MONITOR) {\n        const target = getMonitorById(store.getState(), action.address);\n        const monitorExists = getMonitorById(store.getState(), action.payload.address);\n        if (!action.payload.address) {\n            Notification.error('Pole z adresem monitora nie może być puste!');\n            action.payload = target;\n        }\n        else if (!action.payload.description) {\n            Notification.error('Pole z opisem monitora nie może być puste!');\n            action.payload = target;\n        }\n        else if (monitorExists) {\n            Notification.error('Podany nowy adres monitora już istnieje');\n            action.payload = target;\n        }\n    }\n\n    else if (action.type === ADD_MONITOR) {\n        if (!action.payload.address) {\n            Notification.error('Pole z adresem monitora nie może być puste!');\n            return;\n        }\n        if (!action.payload.description) {\n            Notification.error('Pole z opisem monitora nie może być puste!');\n            return;\n        }\n        const monitorExists = getMonitorById(store.getState(), action.payload.address);\n        if (monitorExists) {\n            Notification.error('Podany adres monitora już istnieje');\n            return;\n        }\n    }\n\n    return next(action);\n\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/middlewares/notifications.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "function",
    "name": "errorToMsg",
    "memberof": "src/middlewares/notifications.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/notifications.js~errorToMsg",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/middlewares/notifications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 449,
    "kind": "function",
    "name": "notifications",
    "memberof": "src/middlewares/notifications.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/notifications.js~notifications",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/notifications.js",
    "importStyle": "notifications",
    "description": "Notification logic core - it's always better to hold it in one place... so here we are :)",
    "lineNumber": 24,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 450,
    "kind": "file",
    "name": "src/middlewares/routesChecker.js",
    "content": "import { push } from 'react-router-redux';\nimport { SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT, restoreSession, signOut } from '../actions/auth';\nimport { getLocation, isAuthTokenSet } from '../reducers';\nimport { routesAndAuthRequired } from '../routes';\n\nexport default store => next => action => {\n\n    const isLocationChange = action.type === '@@router/LOCATION_CHANGE';\n    const state = store.getState();\n\n    if (isLocationChange || action.type === SIGN_IN_SUCCESS || action.type === SIGN_UP_SUCCESS || action.type === SIGN_OUT) {\n\n        const nextLocation = isLocationChange ? action.payload : getLocation(state);\n        const routeAuthRequired = (routesAndAuthRequired[nextLocation.pathname] || {}).auth;\n\n        const authorized = isLocationChange ? isAuthTokenSet(state) : (action.type === SIGN_IN_SUCCESS || action.type === SIGN_UP_SUCCESS);\n\n        if (routeAuthRequired === false && authorized === true) {\n            if (isLocationChange) {\n                // jak ktos przeroutuje sie np. w /login a juz jest zalogowany\n                action.payload.pathname = '/';\n                return next(action);\n            }\n            else {\n                // normalne logowanie sie\n                const result = next(action);\n                store.dispatch(push('/'));\n                return result;\n            }\n        }\n\n        else if (routeAuthRequired === true && authorized === false) {\n            \n            if (isLocationChange) {\n                // jak ktos chce routowac tam gdzie nie powinien - przywracanie sesji itd\n                store.dispatch(restoreSession());\n                const restored = isAuthTokenSet(store.getState());\n                if (!restored) {\n                    action.payload.pathname = '/';\n                }\n                return next(action);\n            }\n            else {\n                // normalne wylogowanie sie\n                const result = next(action);\n                store.dispatch(push('/'));\n                return result;\n            }\n        }\n\n    }\n\n    else if (action.code === 401 && isAuthTokenSet(state)) {\n        store.dispatch(signOut());\n    }\n\n    return next(action);\n\n}",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/middlewares/routesChecker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 451,
    "kind": "function",
    "name": "routesChecker",
    "memberof": "src/middlewares/routesChecker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/middlewares/routesChecker.js~routesChecker",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/middlewares/routesChecker.js",
    "importStyle": "routesChecker",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 452,
    "kind": "file",
    "name": "src/pages/Historical/index.js",
    "content": "import React from 'react';\nimport HistoricalChartWrapper from '../../components/Chart/usage/HistoricalChartWrapper';\n\nconst Historical = () => (\n    <div className=\"full-page\">\n        <h1>Pomiary historyczne</h1>\n        <HistoricalChartWrapper />\n    </div>\n);\n\nexport default Historical;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/Historical/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 453,
    "kind": "function",
    "name": "Historical",
    "memberof": "src/pages/Historical/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Historical/index.js~Historical",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/Historical/index.js",
    "importStyle": "Historical",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 454,
    "kind": "file",
    "name": "src/pages/Live/index.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeLiveChart, changeMetricLiveChart, addHostLiveChart, removeHostLiveChart, getData } from '../../actions/liveCharts';\nimport { getLiveChartsArray, getMetricsAll } from '../../reducers';\nimport AddLiveChart from '../../containers/AddLiveChart';\nimport LiveChart from '../../components/Chart/usage/LiveChartWrapper';\n\nconst Live = ({ liveCharts, removeLiveChart, changeMetricLiveChart, addHostLiveChart, removeHostLiveChart, metrices, getData }) => (\n    <div className=\"full-page\">\n        <h1>Pomiary na żywo</h1>\n        <AddLiveChart />\n        {liveCharts.map(c => (\n            <LiveChart\n                key={c.id}\n                onChartClosed={() => removeLiveChart(c.id)}\n                onMetricChanged={metric => changeMetricLiveChart(c.id, metric)}\n                onHostAdded={host => addHostLiveChart(c.id, host)}\n                onHostDismissed={host => removeHostLiveChart(c.id, host)}\n                metrices={metrices}\n                getData={getData}\n                {...c}\n            />\n        ))}\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    liveCharts: getLiveChartsArray(state),\n    metrices: getMetricsAll(state)\n});\n\nconst mapDispatchToProps = {\n    removeLiveChart,\n    changeMetricLiveChart,\n    addHostLiveChart,\n    removeHostLiveChart,\n    getData\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Live);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/Live/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 455,
    "kind": "function",
    "name": "Live",
    "memberof": "src/pages/Live/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Live/index.js~Live",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"liveCharts\": *, \"removeLiveChart\": *, \"changeMetricLiveChart\": *, \"addHostLiveChart\": *, \"removeHostLiveChart\": *, \"metrices\": *, \"getData\": *}"
        ],
        "defaultRaw": {
          "liveCharts": null,
          "removeLiveChart": null,
          "changeMetricLiveChart": null,
          "addHostLiveChart": null,
          "removeHostLiveChart": null,
          "metrices": null,
          "getData": null
        },
        "defaultValue": "{\"liveCharts\":null,\"removeLiveChart\":null,\"changeMetricLiveChart\":null,\"addHostLiveChart\":null,\"removeHostLiveChart\":null,\"metrices\":null,\"getData\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 456,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/pages/Live/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Live/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 457,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/pages/Live/index.js",
    "static": true,
    "longname": "src/pages/Live/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "{\"removeLiveChart\": *, \"changeMetricLiveChart\": *, \"addHostLiveChart\": *, \"removeHostLiveChart\": *, \"getData\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 458,
    "kind": "file",
    "name": "src/pages/Metrics/index.js",
    "content": "import React from 'react';\nimport HostList from '../../containers/HostList';\nimport RefreshHostsButton from '../../containers/RefreshHostsButton';\n\nconst Metrics = () => (\n    <div className=\"full-page\">\n        <h1>Hosty i Metryki</h1>\n        <HostList />\n        <RefreshHostsButton />\n    </div>\n);\n\nexport default Metrics;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/Metrics/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "Metrics",
    "memberof": "src/pages/Metrics/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Metrics/index.js~Metrics",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/Metrics/index.js",
    "importStyle": "Metrics",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 460,
    "kind": "file",
    "name": "src/pages/Monitors/index.js",
    "content": "import React from 'react';\nimport MonitorsTable from '../../containers/MonitorsTable';\n\nconst Monitors = () => (\n    <div className=\"full-page\">\n        <h1>Monitory</h1>\n        <MonitorsTable />\n    </div>\n);\n\nexport default Monitors;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/Monitors/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 461,
    "kind": "function",
    "name": "Monitors",
    "memberof": "src/pages/Monitors/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Monitors/index.js~Monitors",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/Monitors/index.js",
    "importStyle": "Monitors",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "src/pages/NotFound/index.js",
    "content": "import React from 'react';\n\nconst NotFound = () => (\n    <div className=\"full-page\">\n        <h1>Strony nie znaleziono</h1>\n    </div>\n);\n\nexport default NotFound;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/NotFound/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "function",
    "name": "NotFound",
    "memberof": "src/pages/NotFound/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/NotFound/index.js~NotFound",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/NotFound/index.js",
    "importStyle": "NotFound",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 464,
    "kind": "file",
    "name": "src/pages/SignIn/index.js",
    "content": "import React from 'react';\nimport LoginForm from '../../containers/LoginForm';\nimport AuthServer from '../../containers/AuthServer';\n\nconst SignIn = () => (\n    <div className=\"centered-page\">\n        <h1>Panel logowania</h1>\n        <LoginForm />\n        <AuthServer />\n    </div>\n);\n\nexport default SignIn;",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/SignIn/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 465,
    "kind": "function",
    "name": "SignIn",
    "memberof": "src/pages/SignIn/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/SignIn/index.js~SignIn",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/SignIn/index.js",
    "importStyle": "SignIn",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 466,
    "kind": "file",
    "name": "src/pages/SignUp/index.js",
    "content": "import React from 'react';\nimport RegisterForm from '../../containers/RegisterForm';\nimport AuthServer from '../../containers/AuthServer';\n\nconst SignUp = () => (\n    <div className=\"centered-page\">\n        <h1>Panel rejestracji</h1>\n        <RegisterForm />\n        <AuthServer />\n    </div>\n);\n\nexport default SignUp;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/pages/SignUp/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 467,
    "kind": "function",
    "name": "SignUp",
    "memberof": "src/pages/SignUp/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/SignUp/index.js~SignUp",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/pages/SignUp/index.js",
    "importStyle": "SignUp",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 468,
    "kind": "file",
    "name": "src/reducers/auth.js",
    "content": "import { combineReducers } from 'redux';\nimport { getSavedAuthServer } from '../middlewares/globalsStorage';\nimport {\n    SIGN_IN_REQUEST,\n    SIGN_IN_FAILURE,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_REQUEST,\n    SIGN_UP_FAILURE,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT,\n    CHANGE_AUTH_SERVER,\n    RESTORE_SESSION\n} from '../actions/auth';\n\nconst defaultAuthServer = getSavedAuthServer();\n\nconst token = (state = null, action) => {\n    switch (action.type) {\n        case SIGN_IN_SUCCESS:\n        case SIGN_UP_SUCCESS:\n            return action.payload.token;\n        case RESTORE_SESSION:\n            return action.token;\n        case SIGN_OUT:\n            return null;\n        default:\n            return state;\n    }\n}\n\nconst tokenRequested = (state = false, action) => {\n    switch (action.type) {\n        case SIGN_IN_REQUEST:\n        case SIGN_UP_REQUEST:\n            return true;\n        case SIGN_IN_SUCCESS:\n        case SIGN_UP_SUCCESS:\n        case SIGN_IN_FAILURE:\n        case SIGN_UP_FAILURE:\n            return false;\n        default:\n            return state;\n    }\n};\n\nconst server = (state = defaultAuthServer, action) => {\n    switch (action.type) {\n        case CHANGE_AUTH_SERVER:\n            return action.server || defaultAuthServer;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({ token, tokenRequested, server });\n\nexport const isAuthTokenSet = (state) => Boolean(state.token);\nexport const getAuthTokenRequested = (state) => state.tokenRequested;\nexport const getAuthServer = (state) => state.server;\nexport const getAuthToken = (state) => state.token;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 469,
    "kind": "variable",
    "name": "defaultAuthServer",
    "memberof": "src/reducers/auth.js",
    "static": true,
    "longname": "src/reducers/auth.js~defaultAuthServer",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 470,
    "kind": "function",
    "name": "token",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~token",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 471,
    "kind": "function",
    "name": "tokenRequested",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~tokenRequested",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 472,
    "kind": "function",
    "name": "server",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~server",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultAuthServer",
        "defaultValue": "defaultAuthServer"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 473,
    "kind": "function",
    "name": "isAuthTokenSet",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~isAuthTokenSet",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": "{isAuthTokenSet}",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 474,
    "kind": "function",
    "name": "getAuthTokenRequested",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getAuthTokenRequested",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": "{getAuthTokenRequested}",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "getAuthServer",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getAuthServer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": "{getAuthServer}",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 476,
    "kind": "function",
    "name": "getAuthToken",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getAuthToken",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/auth.js",
    "importStyle": "{getAuthToken}",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 477,
    "kind": "file",
    "name": "src/reducers/entities/hosts.js",
    "content": "import { GET_HOSTS_SUCCESS, GET_HOSTS_FAILURE } from '../../actions/hosts';\nimport { CHANGE_MONITOR_ADDRESS, CHANGE_MONITOR, REMOVE_MONITOR } from '../../actions/monitors';\nimport { SIGN_OUT } from '../../actions/auth';\n\nconst cleanPrevHostsFromMonitor = (state, monitor) => Object.entries(state)\n    .filter(([ key, obj ]) => obj.monitor !== monitor)\n    .reduce((c, [ key, obj ]) => ({\n        ...c,\n        [key]: obj\n    }), {});\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_HOSTS_SUCCESS:\n            return {\n                ...cleanPrevHostsFromMonitor(state, action.monitor),\n                ...action.payload.result.reduce((c, h) => ({\n                    ...c,\n                    [h]: {\n                        ...action.payload.entities.hosts[h],\n                        monitor: action.monitor\n                    }\n                }), {})\n            };\n        case GET_HOSTS_FAILURE:\n            return cleanPrevHostsFromMonitor(state, action.monitor);\n        case CHANGE_MONITOR:\n        case REMOVE_MONITOR:\n        case CHANGE_MONITOR_ADDRESS:\n            if (action.payload && action.payload.address === action.address) {\n                return state;\n            }\n            return cleanPrevHostsFromMonitor(state, action.address);\n        case SIGN_OUT:\n            return {};\n        default:\n            return state;\n    }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/entities/hosts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "cleanPrevHostsFromMonitor",
    "memberof": "src/reducers/entities/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/hosts.js~cleanPrevHostsFromMonitor",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/entities/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "hosts",
    "memberof": "src/reducers/entities/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/hosts.js~hosts",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/hosts.js",
    "importStyle": "hosts",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "file",
    "name": "src/reducers/entities/index.js",
    "content": "import { combineReducers } from 'redux';\nimport { denormalize } from 'normalizr';\nimport * as schema from '../../schema';\nimport monitors, * as fromMonitors from './monitors';\nimport hosts from './hosts';\nimport metrics, * as fromMetrics from './metrics';\n\nexport default combineReducers({ monitors, hosts, metrics });\n\nexport const getMonitorsArray = (state) => fromMonitors.getArray(state.monitors);\nexport const getMonitorById = (state, address) => fromMonitors.getById(state.monitors, address);\nexport const getMonitorsAddresses = (state) => fromMonitors.getAddresses(state.monitors);\nexport const getMonitorsHostsInvalidated = (state) => fromMonitors.getHostsInvalidated(state.monitors);\n\nexport const getHostsArray = (state) => denormalize(Object.keys(state.hosts), [schema.host], state);\n\nexport const getMetricsArray = (state) => fromMetrics.getArray(state.metrics);\nexport const getMetricsAll = (state) => fromMetrics.getAll(state.metrics);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/entities/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "getMonitorsArray",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMonitorsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMonitorsArray}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "function",
    "name": "getMonitorById",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMonitorById",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMonitorById}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "getMonitorsAddresses",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMonitorsAddresses",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMonitorsAddresses}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 484,
    "kind": "function",
    "name": "getMonitorsHostsInvalidated",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMonitorsHostsInvalidated",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMonitorsHostsInvalidated}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 485,
    "kind": "function",
    "name": "getHostsArray",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getHostsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getHostsArray}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 486,
    "kind": "function",
    "name": "getMetricsArray",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMetricsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMetricsArray}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 487,
    "kind": "function",
    "name": "getMetricsAll",
    "memberof": "src/reducers/entities/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/index.js~getMetricsAll",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/index.js",
    "importStyle": "{getMetricsAll}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 488,
    "kind": "file",
    "name": "src/reducers/entities/metrics.js",
    "content": "import { GET_HOSTS_SUCCESS, GET_HOSTS_FAILURE } from '../../actions/hosts';\nimport { CHANGE_MONITOR_ADDRESS, CHANGE_MONITOR, REMOVE_MONITOR } from '../../actions/monitors';\nimport { SIGN_OUT } from '../../actions/auth';\n\nconst cleanPrevMetricsFromMonitor = (state, monitor) => Object.entries(state)\n    .reduce((c, [key, obj]) => ({\n        ...c,\n        [key]: {\n            ...obj,\n            hosts: obj.hosts.filter(h => h.monitor !== monitor)\n        }\n    }), {});\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_HOSTS_SUCCESS:\n            return Object.entries(action.payload.entities.metrics).reduce((c, [key, obj]) => ({\n                ...c,\n                [key]: {\n                    ...obj,\n                    hosts: [\n                        ...(c[key] ? c[key].hosts : []),\n                        ...Object.values(action.payload.entities.hosts)\n                            .filter(h => h.metrics.indexOf(key) !== -1)\n                            .map(h => ({ host: h.hostname, monitor: action.monitor }))\n                    ]\n                }\n            }), cleanPrevMetricsFromMonitor(state, action.monitor));\n        case GET_HOSTS_FAILURE:\n            return cleanPrevMetricsFromMonitor(state, action.monitor);\n        case CHANGE_MONITOR:\n        case REMOVE_MONITOR:\n        case CHANGE_MONITOR_ADDRESS:\n            if (action.payload && action.payload.address === action.address) {\n                return state;\n            }\n            return cleanPrevMetricsFromMonitor(state, action.address);\n        case SIGN_OUT:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const getArray = (state) => Object.values(state).sort((a, b) => a.id.localeCompare(b.id));\nexport const getAll = (state) => state;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/entities/metrics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 489,
    "kind": "function",
    "name": "cleanPrevMetricsFromMonitor",
    "memberof": "src/reducers/entities/metrics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/metrics.js~cleanPrevMetricsFromMonitor",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/entities/metrics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 490,
    "kind": "function",
    "name": "metrics",
    "memberof": "src/reducers/entities/metrics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/metrics.js~metrics",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/metrics.js",
    "importStyle": "metrics",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "getArray",
    "memberof": "src/reducers/entities/metrics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/metrics.js~getArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/metrics.js",
    "importStyle": "{getArray}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "getAll",
    "memberof": "src/reducers/entities/metrics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/metrics.js~getAll",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/metrics.js",
    "importStyle": "{getAll}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 493,
    "kind": "file",
    "name": "src/reducers/entities/monitors.js",
    "content": "import { getSavedMonitors } from '../../middlewares/globalsStorage';\nimport { CHANGE_MONITOR_ADDRESS, CHANGE_MONITOR_DESCRIPTION, CHANGE_MONITOR, ADD_MONITOR, REMOVE_MONITOR } from '../../actions/monitors';\nimport { GET_HOSTS_REQUEST, GET_HOSTS_SUCCESS, GET_HOSTS_FAILURE } from '../../actions/hosts';\nimport { SIGN_OUT } from '../../actions/auth';\n\nconst savedMonitors = getSavedMonitors();\nconst defaultById = savedMonitors.reduce((c, m) => ({\n    ...c, [m.address]: {\n        ...m,\n        hostsIndeterminated: false,\n        hosts: null\n    }\n}), {});\n\nexport default (state = defaultById, action) => {\n    switch (action.type) {\n        case CHANGE_MONITOR_ADDRESS:\n            const { [action.address]: targetMonitor, ...restMonitors } = state;\n            return {\n                ...restMonitors,\n                [action.newAddress]: {\n                    ...targetMonitor,\n                    address: action.newAddress\n                }\n            };\n        case CHANGE_MONITOR_DESCRIPTION:\n            return {\n                ...state,\n                [action.address]: {\n                    ...state[action.address],\n                    description: action.newDescription\n                }\n            };\n        case CHANGE_MONITOR:\n            const { [action.address]: targetMonitorAll, ...restMonitorsAll } = state;\n            return {\n                ...restMonitorsAll,\n                [action.payload.address]: {\n                    ...action.payload,\n                    hostsIndeterminated: false,\n                    hosts: null\n                }\n            };\n        case ADD_MONITOR:\n            return {\n                ...state,\n                [action.payload.address]: {\n                    ...action.payload,\n                    hostsIndeterminated: false,\n                    hosts: null\n                }\n            };\n        case REMOVE_MONITOR:\n            const { [action.address]: monitorToRemove, ...monitorsNotToRemove } = state;\n            return monitorsNotToRemove;\n        case GET_HOSTS_REQUEST:\n            return {\n                ...state,\n                [action.monitor]: {\n                    ...state[action.monitor],\n                    hostsIndeterminated: true\n                }\n            };\n        case GET_HOSTS_SUCCESS:\n            return {\n                ...state,\n                [action.monitor]: {\n                    ...state[action.monitor],\n                    hostsIndeterminated: false,\n                    hosts: action.payload.result\n                }\n            };\n        case GET_HOSTS_FAILURE:\n            return {\n                ...state,\n                [action.monitor]: {\n                    ...state[action.monitor],\n                    hostsIndeterminated: false,\n                    hosts: null\n                }\n            };\n        case SIGN_OUT:\n            return Object.entries(state)\n                .reduce((c, [key, obj]) => ({\n                    ...c,\n                    [key]: {\n                        ...obj,\n                        hostsIndeterminated: false,\n                        hosts: null\n                    }\n                }), {});\n        default:\n            return state;\n    }\n}\n\nexport const getArray = (state) => Object.values(state)\n    .map(({ address, description }) => ({ address, description }))\n    .sort((a, b) => a.address.localeCompare(b.address));\nexport const getById = (state, address) => state[address];\nexport const getAddresses = (state) => Object.keys(state);\nexport const getHostsInvalidated = (state) => Object.values(state).some(m => m.hostsIndeterminated);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/entities/monitors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 494,
    "kind": "variable",
    "name": "savedMonitors",
    "memberof": "src/reducers/entities/monitors.js",
    "static": true,
    "longname": "src/reducers/entities/monitors.js~savedMonitors",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 495,
    "kind": "variable",
    "name": "defaultById",
    "memberof": "src/reducers/entities/monitors.js",
    "static": true,
    "longname": "src/reducers/entities/monitors.js~defaultById",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 496,
    "kind": "function",
    "name": "monitors",
    "memberof": "src/reducers/entities/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/monitors.js~monitors",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": "monitors",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultById",
        "defaultValue": "defaultById"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "getArray",
    "memberof": "src/reducers/entities/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/monitors.js~getArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": "{getArray}",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 498,
    "kind": "function",
    "name": "getById",
    "memberof": "src/reducers/entities/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/monitors.js~getById",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": "{getById}",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 499,
    "kind": "function",
    "name": "getAddresses",
    "memberof": "src/reducers/entities/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/monitors.js~getAddresses",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": "{getAddresses}",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 500,
    "kind": "function",
    "name": "getHostsInvalidated",
    "memberof": "src/reducers/entities/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/entities/monitors.js~getHostsInvalidated",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/entities/monitors.js",
    "importStyle": "{getHostsInvalidated}",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 501,
    "kind": "file",
    "name": "src/reducers/index.js",
    "content": "import { combineReducers } from 'redux';\nimport { routerReducer as router } from 'react-router-redux';\n\nimport auth, * as fromAuth from './auth';\nimport entities, * as fromEntities from './entities';\nimport liveCharts, * as fromLiveCharts from './liveCharts';\n\nexport default combineReducers({ auth, liveCharts, entities, router });\n\nexport const isAuthTokenSet = (state) => fromAuth.isAuthTokenSet(state.auth);\nexport const getAuthTokenRequested = (state) => fromAuth.getAuthTokenRequested(state.auth);\nexport const getAuthToken = (state) => fromAuth.getAuthToken(state.auth);\nexport const getAuthServer = (state) => fromAuth.getAuthServer(state.auth);\n\nexport const getLiveChartsArray = (state) => fromLiveCharts.getArray(state.liveCharts);\n\nexport const getMonitorsArray = (state) => fromEntities.getMonitorsArray(state.entities);\nexport const getMonitorById = (state, address) => fromEntities.getMonitorById(state.entities, address);\nexport const getMonitorsAddresses = (state) => fromEntities.getMonitorsAddresses(state.entities);\nexport const getMonitorsHostsInvalidated = (state) => fromEntities.getMonitorsHostsInvalidated(state.entities);\nexport const getHostsArray = (state) => fromEntities.getHostsArray(state.entities);\nexport const getMetricsArray = (state) => fromEntities.getMetricsArray(state.entities);\nexport const getMetricsAll = (state) => fromEntities.getMetricsAll(state.entities);\n\nexport const getLocation = (state) => state.router.location;\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 502,
    "kind": "function",
    "name": "isAuthTokenSet",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~isAuthTokenSet",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{isAuthTokenSet}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 503,
    "kind": "function",
    "name": "getAuthTokenRequested",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getAuthTokenRequested",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getAuthTokenRequested}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 504,
    "kind": "function",
    "name": "getAuthToken",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getAuthToken",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getAuthToken}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 505,
    "kind": "function",
    "name": "getAuthServer",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getAuthServer",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getAuthServer}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 506,
    "kind": "function",
    "name": "getLiveChartsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getLiveChartsArray}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 507,
    "kind": "function",
    "name": "getMonitorsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMonitorsArray}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 508,
    "kind": "function",
    "name": "getMonitorById",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorById",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMonitorById}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 509,
    "kind": "function",
    "name": "getMonitorsAddresses",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsAddresses",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMonitorsAddresses}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 510,
    "kind": "function",
    "name": "getMonitorsHostsInvalidated",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsHostsInvalidated",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMonitorsHostsInvalidated}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 511,
    "kind": "function",
    "name": "getHostsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getHostsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getHostsArray}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 512,
    "kind": "function",
    "name": "getMetricsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMetricsArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMetricsArray}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "function",
    "name": "getMetricsAll",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMetricsAll",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getMetricsAll}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 514,
    "kind": "function",
    "name": "getLocation",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLocation",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/index.js",
    "importStyle": "{getLocation}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "src/reducers/liveCharts.js",
    "content": "import { combineReducers } from 'redux';\nimport { SIGN_OUT } from '../actions/auth';\nimport { ADD_LIVE_CHART, REMOVE_LIVE_CHART, CHANGE_METRIC_LIVE_CHART,\n    ADD_HOST_LIVE_CHART, REMOVE_HOST_LIVE_CHART } from '../actions/liveCharts';\n\nconst byId = (state = {}, action) => {\n    switch (action.type) {\n        case ADD_LIVE_CHART:\n            return {\n                ...state,\n                [action.id]: {\n                    id: action.id,\n                    metricName: action.metric,\n                    metricHostsSelected: []\n                }\n            };\n        case REMOVE_LIVE_CHART:\n            const { [action.id]: toRemove, ...rest } = state;\n            return rest;\n        case CHANGE_METRIC_LIVE_CHART:\n            return {\n                ...state,\n                [action.id]: {\n                    ...state[action.id],\n                    metricName: action.metric,\n                    metricHostsSelected: []\n                }\n            };\n        case ADD_HOST_LIVE_CHART:\n            return {\n                ...state,\n                [action.id]: {\n                    ...state[action.id],\n                    metricHostsSelected: [\n                        ...state[action.id].metricHostsSelected,\n                        action.host\n                    ]\n                }\n            };\n        case REMOVE_HOST_LIVE_CHART:\n            const all = state[action.id].metricHostsSelected;\n            const pos = all.indexOf(action.host);\n            return {\n                ...state,\n                [action.id]: {\n                    ...state[action.id],\n                    metricHostsSelected: [\n                        ...all.slice(0, pos),\n                        ...all.slice(pos + 1)\n                    ]\n                }\n            };\n        case SIGN_OUT:\n            return {};\n        default:\n            return state;\n    }\n}\n\nconst allIds = (state = [], action) => {\n    switch (action.type) {\n        case ADD_LIVE_CHART:\n            return [\n                ...state,\n                action.id\n            ];\n        case REMOVE_LIVE_CHART:\n            const pos = state.indexOf(action.id);\n            return [\n                ...state.slice(0, pos),\n                ...state.slice(pos + 1)\n            ];\n        case SIGN_OUT:\n            return [];\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({ byId, allIds });\n\nexport const getArray = (state) => state.allIds.map(key => state.byId[key]);\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/reducers/liveCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "function",
    "name": "byId",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~byId",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 517,
    "kind": "function",
    "name": "allIds",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~allIds",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/reducers/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 518,
    "kind": "function",
    "name": "getArray",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~getArray",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/reducers/liveCharts.js",
    "importStyle": "{getArray}",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 519,
    "kind": "file",
    "name": "src/registerServiceWorker.js",
    "content": "// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/registerServiceWorker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "isLocalhost",
    "memberof": "src/registerServiceWorker.js",
    "static": true,
    "longname": "src/registerServiceWorker.js~isLocalhost",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 521,
    "kind": "function",
    "name": "register",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~register",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/registerServiceWorker.js",
    "importStyle": "register",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 522,
    "kind": "function",
    "name": "registerValidSW",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~registerValidSW",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "swUrl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 523,
    "kind": "function",
    "name": "checkValidServiceWorker",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~checkValidServiceWorker",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "swUrl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 524,
    "kind": "function",
    "name": "unregister",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~unregister",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/registerServiceWorker.js",
    "importStyle": "{unregister}",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "src/routes.js",
    "content": "import React from 'react';\nimport { Route } from 'react-router';\n\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/SignUp';\nimport Live from './pages/Live';\nimport Historical from './pages/Historical';\nimport Metrics from './pages/Metrics';\nimport Monitors from './pages/Monitors';\n\nexport const routesAndAuthRequired = {\n    '/live': {\n        auth: true,\n        component: Live\n    },\n    '/historical': {\n        auth: true,\n        component: Historical\n    },\n    '/metrics': {\n        auth: true,\n        component: Metrics\n    },\n    '/monitors': {\n        auth: true,\n        component: Monitors\n    },\n    '/sign-in': {\n        auth: false,\n        component: SignIn\n    },\n    '/sign-up': {\n        auth: false,\n        component: SignUp\n    }\n};\n\nexport const routes = Object.entries(routesAndAuthRequired).map(([ path, obj ]) => (\n    <Route key={path} path={path} component={obj.component} />\n));\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "routesAndAuthRequired",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~routesAndAuthRequired",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/routes.js",
    "importStyle": "{routesAndAuthRequired}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"/live\": *, \"/historical\": *, \"/metrics\": *, \"/monitors\": *, \"/sign-in\": *, \"/sign-up\": *}"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "routes",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~routes",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/routes.js",
    "importStyle": "{routes}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "file",
    "name": "src/schema.js",
    "content": "import { schema } from 'normalizr';\n\nexport const metric = new schema.Entity('metrics');\n\nexport const host = new schema.Entity('hosts', {\n    metrics: [metric]\n}, {\n    idAttribute: 'hostname'\n});\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 529,
    "kind": "variable",
    "name": "metric",
    "memberof": "src/schema.js",
    "static": true,
    "longname": "src/schema.js~metric",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/schema.js",
    "importStyle": "{metric}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "host",
    "memberof": "src/schema.js",
    "static": true,
    "longname": "src/schema.js~host",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/schema.js",
    "importStyle": "{host}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "file",
    "name": "src/utils/escapeRegExp.js",
    "content": "export default (text) => {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/utils/escapeRegExp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 532,
    "kind": "function",
    "name": "escapeRegExp",
    "memberof": "src/utils/escapeRegExp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/escapeRegExp.js~escapeRegExp",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/utils/escapeRegExp.js",
    "importStyle": "escapeRegExp",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "file",
    "name": "src/utils/guid.js",
    "content": "function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\nexport default () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/utils/guid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 534,
    "kind": "function",
    "name": "s4",
    "memberof": "src/utils/guid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/guid.js~s4",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/utils/guid.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 535,
    "kind": "function",
    "name": "guid",
    "memberof": "src/utils/guid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/guid.js~guid",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/utils/guid.js",
    "importStyle": "guid",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "file",
    "name": "src/utils/strToColor.js",
    "content": "const colors = [\"#7cb5ec\", \"#434348\", \"#90ed7d\", \"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\"];\n\nconst hashCode = (str) => {\n    var hash = 0;\n    if (str.length === 0) return hash;\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = ((hash<<5)-hash)+char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n}\n\nexport default (str) => colors[Math.abs(hashCode(str)) % colors.length];",
    "static": true,
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/src/utils/strToColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "variable",
    "name": "colors",
    "memberof": "src/utils/strToColor.js",
    "static": true,
    "longname": "src/utils/strToColor.js~colors",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/utils/strToColor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 538,
    "kind": "function",
    "name": "hashCode",
    "memberof": "src/utils/strToColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/strToColor.js~hashCode",
    "access": "public",
    "export": false,
    "importPath": "resmon-guiclient/src/utils/strToColor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 539,
    "kind": "function",
    "name": "strToColor",
    "memberof": "src/utils/strToColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/strToColor.js~strToColor",
    "access": "public",
    "export": true,
    "importPath": "resmon-guiclient/src/utils/strToColor.js",
    "importStyle": "strToColor",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# resmon-guiclient\nRepository for a guiclient component, which is part of resmon product.\n\n## Development\n- install npm\n- install yarn globally: `npm install --global yarn`\n- run `yarn` to install dependencies\n- run `yarn test` to test (with watch)\n- run `yarn start` to start dev server (with watch)\n- run `yarn run-test-servers` to start fake auth server _(localhost:3001)_ and monitor _(localhost:3002)_\n- you may want to install react and [redux](https://github.com/zalmoxisus/redux-devtools-extension) plugins for browsers\n\n## Structure overview\n- `/src/components` contains pure react components (without redux integration)\n- `/src/containers` contains react components which are connected to redux\n- `/src/pages` contains page-level react components\n- `/src/reducers` contains redux reducers - pure functions transforming store to another state\n- `/src/actions` contains action creators - functions returning actions that could be directly dispatched by redux\n- `/src/api.js` constains functions making api calls and returning promise-like object\n- `/src/index.js` entry file\n\n## CI\n- install npm\n- install yarn globally: `npm install --global yarn`\n- run `yarn` to install dependencies\n- run `yarn test:nowatch` to test\n- run `yarn build` to build",
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"resmon-guiclient\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"antd\": \"^3.4.1\",\n    \"babel-plugin-import\": \"^1.7.0\",\n    \"chai\": \"^4.1.2\",\n    \"chai-enzyme\": \"^0.8.0\",\n    \"cors\": \"^2.8.4\",\n    \"enzyme\": \"^3.3.0\",\n    \"enzyme-adapter-react-16\": \"^1.1.1\",\n    \"express\": \"^4.16.3\",\n    \"highcharts\": \"^6.1.0\",\n    \"history\": \"^4.7.2\",\n    \"moment\": \"^2.22.1\",\n    \"normalizr\": \"^3.2.4\",\n    \"react\": \"^16.3.2\",\n    \"react-app-rewire-define-plugin\": \"^1.0.0\",\n    \"react-app-rewire-less\": \"^2.1.1\",\n    \"react-app-rewired\": \"^1.5.0\",\n    \"react-dom\": \"^16.3.2\",\n    \"react-props\": \"^0.0.3\",\n    \"react-redux\": \"^5.0.7\",\n    \"react-router\": \"^4.2.0\",\n    \"react-router-dom\": \"^4.2.2\",\n    \"react-router-redux\": \"^5.0.0-alpha.9\",\n    \"react-scripts\": \"1.1.4\",\n    \"redux\": \"^4.0.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"scripts\": {\n    \"doc\": \"esdoc -c esdoc.json\",\n    \"start\": \"react-app-rewired start\",\n    \"run-test-servers\": \"node ./test-servers/index.js\",\n    \"build\": \"react-app-rewired build\",\n    \"test\": \"react-app-rewired test --env=jsdom\",\n    \"test:nowatch\": \"CI=true ENV=production react-app-rewired test --env=jsdom\",\n    \"test:coverage\": \"CI=true react-app-rewired test --env=jsdom --coverage\",\n    \"eject\": \"react-app-rewired eject\"\n  },\n  \"jest\": {\n    \"setupFiles\": [\n      \"./setup-jest.js\"\n    ],\n    \"collectCoverageFrom\": [\n      \"src/**/*.{js,jsx}\",\n      \"!<rootDir>/node_modules/\"\n    ],\n    \"coverageThreshold\": {\n      \"global\": {\n        \"branches\": 90,\n        \"functions\": 90,\n        \"lines\": 90,\n        \"statements\": 90\n      }\n    },\n    \"coverageReporters\": [\n      \"text\"\n    ]\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/home/tomek/Pulpit/PZ/test/resmon-guiclient/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]