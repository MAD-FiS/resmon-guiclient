[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/actions/sync.js",
    "content": "import moment from 'moment';\nimport uniqid from 'uniqid';\nimport * as types from './types';\n\n// ****************************** auth ******************************\n\nexport const signInRequest = (payload) => ({\n    type: types.SIGN_IN_REQUEST,\n    payload\n});\n\nexport const signInSuccess = (payload) => ({\n    type: types.SIGN_IN_SUCCESS,\n    payload\n});\n\nexport const signInFailure = (payload) => ({\n    type: types.SIGN_IN_FAILURE,\n    payload,\n    error: true\n});\n\nexport const signUpRequest = (payload) => ({\n    type: types.SIGN_UP_REQUEST,\n    payload\n});\n\nexport const signUpSuccess = (payload) => ({\n    type: types.SIGN_UP_SUCCESS,\n    payload\n});\n\nexport const signUpFailure = (payload) => ({\n    type: types.SIGN_UP_FAILURE,\n    payload,\n    error: true\n});\n\nexport const removeToken = () => ({\n    type: types.REMOVE_TOKEN\n});\n\nexport const changeAuthServer = (payload) => ({\n    type: types.CHANGE_AUTH_SERVER,\n    payload\n});\n\n// ****************************** monitors ******************************\n\nexport const addMonitor = (payload) => ({\n    type: types.ADD_MONITOR,\n    payload\n});\n\nexport const setMonitorAddress = (payload, monitor) => ({\n    type: types.SET_MONITOR_ADDRESS,\n    payload,\n    meta: {\n        monitor\n    }\n});\n\nexport const setMonitorDescription = (payload, monitor) => ({\n    type: types.SET_MONITOR_DESCRIPTION,\n    payload,\n    meta: {\n        monitor\n    }\n});\n\nexport const removeMonitor = (monitor) => ({\n    type: types.REMOVE_MONITOR,\n    meta: {\n        monitor\n    }\n});\n\nexport const getHosts = () => ({\n    type: types.GET_HOSTS\n});\n\nexport const getHostsRequest = (monitor) => ({\n    type: types.GET_HOSTS_REQUEST,\n    meta: {\n        monitor\n    }\n});\n\nexport const getHostsSuccess = (payload, monitor) => ({\n    type: types.GET_HOSTS_SUCCESS,\n    payload,\n    meta: {\n        monitor\n    }\n});\n\nexport const getHostsFailure = (payload, monitor) => ({\n    type: types.GET_HOSTS_FAILURE,\n    payload,\n    error: true,\n    meta: {\n        monitor\n    }\n});\n\n// ****************************** complex metrics ******************************\n\nexport const addComplexMetricRequest = (payload, host) => ({\n    type: types.ADD_COMPLEX_METRIC_REQUEST,\n    payload,\n    meta: {\n        host\n    }\n});\n\nexport const addComplexMetricSuccess = (payload, host) => ({\n    type: types.ADD_COMPLEX_METRIC_SUCCESS,\n    payload,\n    meta: {\n        host\n    }\n});\n\nexport const addComplexMetricFailure = (payload, host) => ({\n    type: types.ADD_COMPLEX_METRIC_FAILURE,\n    payload,\n    error: true,\n    meta: {\n        host\n    }\n});\n\nexport const removeComplexMetricRequest = (id, host) => ({\n    type: types.REMOVE_COMPLEX_METRIC_REQUEST,\n    meta: {\n        id,\n        host\n    }\n});\n\nexport const removeComplexMetricSucces = (id, host) => ({\n    type: types.REMOVE_COMPLEX_METRIC_SUCCESS,\n    meta: {\n        id,\n        host\n    }\n});\n\nexport const removeComplexMetricFailure = (payload, host) => ({\n    type: types.REMOVE_COMPLEX_METRIC_FAILURE,\n    payload,\n    error: true,\n    meta: {\n        host\n    }\n});\n\n// ****************************** live chart ******************************\n\nexport const addLiveChart = (payload) => ({\n    type: types.ADD_LIVE_CHART,\n    payload: {\n        ...payload,\n        id: uniqid()\n    }\n});\n\nexport const removeLiveChart = (id) => ({\n    type: types.REMOVE_LIVE_CHART,\n    meta: {\n        id\n    }\n});\n\nexport const setLiveChartMetric = (payload, id) => ({\n    type: types.SET_LIVE_CHART_METRIC,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const addLiveChartHost = (payload, id) => ({\n    type: types.ADD_LIVE_CHART_HOST,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const removeLiveChartHost = (id, host) => ({\n    type: types.REMOVE_LIVE_CHART_HOST,\n    meta: {\n        id,\n        host\n    }\n});\n\nexport const getLiveMeasurementsRequest = (id, initialFetch) => ({\n    type: types.GET_LIVE_MEASUREMENTS_REQUEST,\n    meta: {\n        id,\n        initialFetch\n    }\n});\n\nexport const getLiveMeasurementsSuccess = (payload, id) => ({\n    type: types.GET_LIVE_MEASUREMENTS_SUCCESS,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const getLiveMeasurementsFailure = (payload, id, monitor) => ({\n    type: types.GET_LIVE_MEASUREMENTS_FAILURE,\n    payload,\n    error: true,\n    meta: {\n        id,\n        monitor\n    }\n});\n\n// ****************************** historical chart ******************************\n\nexport const addHistoricalChart = (payload) => ({\n    type: types.ADD_HISTORICAL_CHART,\n    payload: {\n        ...payload,\n        id: uniqid(),\n        start: moment().subtract(1, 'hours').toISOString(),\n        end: moment().toISOString()\n    }\n});\n\nexport const removeHistoricalChart = (id) => ({\n    type: types.REMOVE_HISTORICAL_CHART,\n    meta: {\n        id\n    }\n});\n\nexport const setHistoricalChartRange = (payload, id) => ({\n    type: types.SET_HISTORICAL_CHART_RANGE,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const setHistoricalChartMetric1 = (payload, id) => ({\n    type: types.SET_HISTORICAL_CHART_METRIC1,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const setHistoricalChartMetric2 = (payload, id) => ({\n    type: types.SET_HISTORICAL_CHART_METRIC2,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const addHistoricalChartHost1 = (payload, id) => ({\n    type: types.ADD_HISTORICAL_CHART_HOST1,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const addHistoricalChartHost2 = (payload, id) => ({\n    type: types.ADD_HISTORICAL_CHART_HOST2,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const removeHistoricalChartHost1 = (id, host) => ({\n    type: types.REMOVE_HISTORICAL_CHART_HOST1,\n    meta: {\n        id,\n        host\n    }\n});\n\nexport const removeHistoricalChartHost2 = (id, host) => ({\n    type: types.REMOVE_HISTORICAL_CHART_HOST2,\n    meta: {\n        id,\n        host\n    }\n});\n\nexport const getHistoricalMeasurementsRequest = (id) => ({\n    type: types.GET_HISTORICAL_MEASUREMENTS_REQUEST,\n    meta: {\n        id\n    }\n});\n\nexport const getHistoricalMeasurementsSuccess = (payload, id) => ({\n    type: types.GET_HISTORICAL_MEASUREMENTS_SUCCESS,\n    payload,\n    meta: {\n        id\n    }\n});\n\nexport const getHistoricalMeasurementsFailure = (payload, id, monitor) => ({\n    type: types.GET_HISTORICAL_MEASUREMENTS_FAILURE,\n    payload,\n    error: true,\n    meta: {\n        id,\n        monitor\n    }\n});\n\n// ****************************** routing ******************************\n\nexport const changeRoutingContext = (payload) => ({\n    type: types.CHANGE_ROUTING_CONTEXT,\n    payload\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/actions/sync.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "signInRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signInRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signInRequest}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "signInSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signInSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signInSuccess}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "signInFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signInFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signInFailure}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "signUpRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signUpRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signUpRequest}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "signUpSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signUpSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signUpSuccess}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "signUpFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~signUpFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{signUpFailure}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "removeToken",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeToken}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "changeAuthServer",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~changeAuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{changeAuthServer}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "addMonitor",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addMonitor",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addMonitor}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "setMonitorAddress",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setMonitorAddress",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setMonitorAddress}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "setMonitorDescription",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setMonitorDescription",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setMonitorDescription}",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "removeMonitor",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeMonitor",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeMonitor}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "getHosts",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHosts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHosts}",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "getHostsRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHostsRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHostsRequest}",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "getHostsSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHostsSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHostsSuccess}",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "getHostsFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHostsFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHostsFailure}",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "addComplexMetricRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addComplexMetricRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addComplexMetricRequest}",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "addComplexMetricSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addComplexMetricSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addComplexMetricSuccess}",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "addComplexMetricFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addComplexMetricFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addComplexMetricFailure}",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "removeComplexMetricRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeComplexMetricRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeComplexMetricRequest}",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "removeComplexMetricSucces",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeComplexMetricSucces",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeComplexMetricSucces}",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "removeComplexMetricFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeComplexMetricFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeComplexMetricFailure}",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "addLiveChart",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addLiveChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addLiveChart}",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "removeLiveChart",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeLiveChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeLiveChart}",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "setLiveChartMetric",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setLiveChartMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setLiveChartMetric}",
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "addLiveChartHost",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addLiveChartHost",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addLiveChartHost}",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "removeLiveChartHost",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeLiveChartHost",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeLiveChartHost}",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "getLiveMeasurementsRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getLiveMeasurementsRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getLiveMeasurementsRequest}",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "initialFetch",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "getLiveMeasurementsSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getLiveMeasurementsSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getLiveMeasurementsSuccess}",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "getLiveMeasurementsFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getLiveMeasurementsFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getLiveMeasurementsFailure}",
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "addHistoricalChart",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addHistoricalChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addHistoricalChart}",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "removeHistoricalChart",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeHistoricalChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeHistoricalChart}",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "setHistoricalChartRange",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setHistoricalChartRange",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setHistoricalChartRange}",
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "setHistoricalChartMetric1",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setHistoricalChartMetric1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setHistoricalChartMetric1}",
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "setHistoricalChartMetric2",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~setHistoricalChartMetric2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{setHistoricalChartMetric2}",
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "addHistoricalChartHost1",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addHistoricalChartHost1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addHistoricalChartHost1}",
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "addHistoricalChartHost2",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~addHistoricalChartHost2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{addHistoricalChartHost2}",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "removeHistoricalChartHost1",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeHistoricalChartHost1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeHistoricalChartHost1}",
    "description": null,
    "lineNumber": 284,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "removeHistoricalChartHost2",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~removeHistoricalChartHost2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{removeHistoricalChartHost2}",
    "description": null,
    "lineNumber": 292,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "getHistoricalMeasurementsRequest",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHistoricalMeasurementsRequest",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHistoricalMeasurementsRequest}",
    "description": null,
    "lineNumber": 300,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "getHistoricalMeasurementsSuccess",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHistoricalMeasurementsSuccess",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHistoricalMeasurementsSuccess}",
    "description": null,
    "lineNumber": 307,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "getHistoricalMeasurementsFailure",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~getHistoricalMeasurementsFailure",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{getHistoricalMeasurementsFailure}",
    "description": null,
    "lineNumber": 315,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "changeRoutingContext",
    "memberof": "src/actions/sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/sync.js~changeRoutingContext",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/sync.js",
    "importStyle": "{changeRoutingContext}",
    "description": null,
    "lineNumber": 327,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/actions/types.js",
    "content": "// ****************************** auth ******************************\n\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\n// payload: { username, password, remember }\n\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\n// payload: { access_token }\n\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\n// payload: Error(...), error: true\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\n// payload: { username, password }\n\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\n// payload: { access_token }\n\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n// payload: Error(...), error: true\n\nexport const REMOVE_TOKEN = 'REMOVE_TOKEN';\n\nexport const CHANGE_AUTH_SERVER = 'CHANGE_AUTH_SERVER';\n// payload: { address }\n\n// ****************************** monitors ******************************\n\nexport const ADD_MONITOR = 'ADD_MONITOR';\n// payload: { address, description }\n\nexport const SET_MONITOR_ADDRESS = 'SET_MONITOR_ADDRESS';\n// payload: { address }, meta: { monitor }\n\nexport const SET_MONITOR_DESCRIPTION = 'SET_MONITOR_DESCRIPTION';\n// payload: { description }, meta: { monitor }\n\nexport const REMOVE_MONITOR = 'REMOVE_MONITOR';\n// meta: { monitor }\n\nexport const GET_HOSTS = 'GET_HOSTS';\n\nexport const GET_HOSTS_REQUEST = 'GET_HOSTS_REQUEST';\n// meta: { monitor }\n\nexport const GET_HOSTS_SUCCESS = 'GET_HOSTS_SUCCESS';\n// payload: [...], meta: { monitor }\n\nexport const GET_HOSTS_FAILURE = 'GET_HOSTS_FAILURE';\n// payload: Error(...), error: true, meta: { monitor }\n\n// ****************************** complex metrics ******************************\n\nexport const ADD_COMPLEX_METRIC_REQUEST = 'ADD_COMPLEX_METRIC_REQUEST';\n// payload: { description, parent_id, moving_window_duration, interval }, meta: { host }\n\nexport const ADD_COMPLEX_METRIC_SUCCESS = 'ADD_COMPLEX_METRIC_SUCCESS';\n// payload: { id, unit, description, parent_id, moving_window_duration, interval }, meta: { host }\n\nexport const ADD_COMPLEX_METRIC_FAILURE = 'ADD_COMPLEX_METRIC_FAILURE';\n// payload: Error(...), error: true, meta: { host }\n\nexport const REMOVE_COMPLEX_METRIC_REQUEST = 'REMOVE_COMPLEX_METRIC_REQUEST';\n// meta: { id, host }\n\nexport const REMOVE_COMPLEX_METRIC_SUCCESS = 'REMOVE_COMPLEX_METRIC_SUCCESS';\n// meta: { id, host }\n\nexport const REMOVE_COMPLEX_METRIC_FAILURE = 'REMOVE_COMPLEX_METRIC_FAILURE';\n// payload: Error(...), error: true, meta: { host }\n\n// ****************************** live chart ******************************\n\nexport const ADD_LIVE_CHART = 'ADD_LIVE_CHART';\n// payload: { id, metric }\n\nexport const REMOVE_LIVE_CHART = 'REMOVE_LIVE_CHART';\n// meta: { id }\n\nexport const SET_LIVE_CHART_METRIC = 'SET_LIVE_CHART_METRIC';\n// payload: { metric }, meta: { id }\n\nexport const ADD_LIVE_CHART_HOST = 'ADD_LIVE_CHART_HOST';\n// payload: { host }, meta: { id }\n\nexport const REMOVE_LIVE_CHART_HOST = 'REMOVE_LIVE_CHART_HOST';\n// meta: { id, host }\n\nexport const GET_LIVE_MEASUREMENTS_REQUEST = 'GET_LIVE_MEASUREMENTS_REQUEST';\n// meta: { id, initialFetch }\n\nexport const GET_LIVE_MEASUREMENTS_SUCCESS = 'GET_LIVE_MEASUREMENTS_SUCCESS';\n// payload: { measurements: {...} }, meta: { id }\n\nexport const GET_LIVE_MEASUREMENTS_FAILURE = 'GET_LIVE_MEASUREMENTS_FAILURE';\n// payload: Error(...), error: true, meta: { id, monitor }\n\n// ****************************** historical chart ******************************\n\nexport const ADD_HISTORICAL_CHART = 'ADD_HISTORICAL_CHART';\n// payload: { id, metric }\n\nexport const REMOVE_HISTORICAL_CHART = 'REMOVE_HISTORICAL_CHART';\n// meta: { id }\n\nexport const SET_HISTORICAL_CHART_RANGE = 'SET_HISTORICAL_CHART_RANGE';\n// payload: { start, end }, meta: { id }\n\nexport const SET_HISTORICAL_CHART_METRIC1 = 'SET_HISTORICAL_CHART_METRIC1';\n// payload: { metric }, meta: { id }\n\nexport const SET_HISTORICAL_CHART_METRIC2 = 'SET_HISTORICAL_CHART_METRIC2';\n// payload: { metric }, meta: { id }\n\nexport const ADD_HISTORICAL_CHART_HOST1 = 'ADD_HISTORICAL_CHART_HOST1';\n// payload: { host }, meta: { id }\n\nexport const ADD_HISTORICAL_CHART_HOST2 = 'ADD_HISTORICAL_CHART_HOST2';\n// payload: { host }, meta: { id }\n\nexport const REMOVE_HISTORICAL_CHART_HOST1 = 'REMOVE_HISTORICAL_CHART_HOST1';\n// meta: { id, host }\n\nexport const REMOVE_HISTORICAL_CHART_HOST2 = 'REMOVE_HISTORICAL_CHART_HOST2';\n// meta: { id, host }\n\nexport const GET_HISTORICAL_MEASUREMENTS_REQUEST = 'GET_HISTORICAL_MEASUREMENTS_REQUEST';\n// meta: { id }\n\nexport const GET_HISTORICAL_MEASUREMENTS_SUCCESS = 'GET_HISTORICAL_MEASUREMENTS_SUCCESS';\n// payload: { measurements1: {...}, measurements2: {...} }, meta: { id }\n\nexport const GET_HISTORICAL_MEASUREMENTS_FAILURE = 'GET_HISTORICAL_MEASUREMENTS_FAILURE';\n// payload: Error(...), error: true, meta: { id, monitor }\n\n// ****************************** routing ******************************\n\nexport const CHANGE_ROUTING_CONTEXT = 'CHANGE_ROUTING_CONTEXT';\n// payload: { pathname }\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/actions/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "SIGN_IN_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_IN_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_IN_REQUEST}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "SIGN_IN_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_IN_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_IN_SUCCESS}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "SIGN_IN_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_IN_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_IN_FAILURE}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "SIGN_UP_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_UP_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_UP_REQUEST}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "SIGN_UP_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_UP_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_UP_SUCCESS}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "SIGN_UP_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SIGN_UP_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SIGN_UP_FAILURE}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "REMOVE_TOKEN",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_TOKEN",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_TOKEN}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "CHANGE_AUTH_SERVER",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~CHANGE_AUTH_SERVER",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{CHANGE_AUTH_SERVER}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "ADD_MONITOR",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_MONITOR",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_MONITOR}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "SET_MONITOR_ADDRESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_MONITOR_ADDRESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_MONITOR_ADDRESS}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "SET_MONITOR_DESCRIPTION",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_MONITOR_DESCRIPTION",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_MONITOR_DESCRIPTION}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "REMOVE_MONITOR",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_MONITOR",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_MONITOR}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "GET_HOSTS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HOSTS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HOSTS}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "GET_HOSTS_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HOSTS_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HOSTS_REQUEST}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "GET_HOSTS_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HOSTS_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HOSTS_SUCCESS}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "GET_HOSTS_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HOSTS_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HOSTS_FAILURE}",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "ADD_COMPLEX_METRIC_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_COMPLEX_METRIC_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_COMPLEX_METRIC_REQUEST}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "ADD_COMPLEX_METRIC_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_COMPLEX_METRIC_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_COMPLEX_METRIC_SUCCESS}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "ADD_COMPLEX_METRIC_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_COMPLEX_METRIC_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_COMPLEX_METRIC_FAILURE}",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "REMOVE_COMPLEX_METRIC_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_COMPLEX_METRIC_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_COMPLEX_METRIC_REQUEST}",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "REMOVE_COMPLEX_METRIC_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_COMPLEX_METRIC_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_COMPLEX_METRIC_SUCCESS}",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "REMOVE_COMPLEX_METRIC_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_COMPLEX_METRIC_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_COMPLEX_METRIC_FAILURE}",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "ADD_LIVE_CHART",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_LIVE_CHART}",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "REMOVE_LIVE_CHART",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_LIVE_CHART",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_LIVE_CHART}",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "SET_LIVE_CHART_METRIC",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_LIVE_CHART_METRIC",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_LIVE_CHART_METRIC}",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "ADD_LIVE_CHART_HOST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_LIVE_CHART_HOST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_LIVE_CHART_HOST}",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "REMOVE_LIVE_CHART_HOST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_LIVE_CHART_HOST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_LIVE_CHART_HOST}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "GET_LIVE_MEASUREMENTS_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_LIVE_MEASUREMENTS_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_LIVE_MEASUREMENTS_REQUEST}",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "GET_LIVE_MEASUREMENTS_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_LIVE_MEASUREMENTS_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_LIVE_MEASUREMENTS_SUCCESS}",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "GET_LIVE_MEASUREMENTS_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_LIVE_MEASUREMENTS_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_LIVE_MEASUREMENTS_FAILURE}",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "ADD_HISTORICAL_CHART",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_HISTORICAL_CHART",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_HISTORICAL_CHART}",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "REMOVE_HISTORICAL_CHART",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_HISTORICAL_CHART",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_HISTORICAL_CHART}",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "SET_HISTORICAL_CHART_RANGE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_HISTORICAL_CHART_RANGE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_HISTORICAL_CHART_RANGE}",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "SET_HISTORICAL_CHART_METRIC1",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_HISTORICAL_CHART_METRIC1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_HISTORICAL_CHART_METRIC1}",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "SET_HISTORICAL_CHART_METRIC2",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~SET_HISTORICAL_CHART_METRIC2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{SET_HISTORICAL_CHART_METRIC2}",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "ADD_HISTORICAL_CHART_HOST1",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_HISTORICAL_CHART_HOST1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_HISTORICAL_CHART_HOST1}",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "ADD_HISTORICAL_CHART_HOST2",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~ADD_HISTORICAL_CHART_HOST2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{ADD_HISTORICAL_CHART_HOST2}",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "REMOVE_HISTORICAL_CHART_HOST1",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_HISTORICAL_CHART_HOST1",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_HISTORICAL_CHART_HOST1}",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "REMOVE_HISTORICAL_CHART_HOST2",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~REMOVE_HISTORICAL_CHART_HOST2",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{REMOVE_HISTORICAL_CHART_HOST2}",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "GET_HISTORICAL_MEASUREMENTS_REQUEST",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HISTORICAL_MEASUREMENTS_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HISTORICAL_MEASUREMENTS_REQUEST}",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "GET_HISTORICAL_MEASUREMENTS_SUCCESS",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HISTORICAL_MEASUREMENTS_SUCCESS",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HISTORICAL_MEASUREMENTS_SUCCESS}",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "GET_HISTORICAL_MEASUREMENTS_FAILURE",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~GET_HISTORICAL_MEASUREMENTS_FAILURE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{GET_HISTORICAL_MEASUREMENTS_FAILURE}",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "CHANGE_ROUTING_CONTEXT",
    "memberof": "src/actions/types.js",
    "static": true,
    "longname": "src/actions/types.js~CHANGE_ROUTING_CONTEXT",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/actions/types.js",
    "importStyle": "{CHANGE_ROUTING_CONTEXT}",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/api.js",
    "content": "import qs from 'qs';\n\nconst apiCall = (address, obj = {}) => fetch(address, obj)\n    .then(\n        r => new Promise((res, rej) => {\n            r.json().then(\n                data => res({ r, data }),\n                () => rej({ status: r.status, message: String(r.statusText) })\n            );\n        }),\n        error => Promise.reject({ status: null, message: String(error) })\n    )\n    .then(({ r, data }) => {\n        if (!r.ok) {\n            throw({ status: r.status, message: data.message || data.detail || data.msg });\n        }\n        return data;\n    });\n\n// ****************************** auth server ******************************\n\nexport const login = (server, payload) => apiCall(`${server}/login`, {\n    body: JSON.stringify(payload),\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'POST'\n});\n\nexport const registration = (server, payload) => apiCall(`${server}/registration`, {\n    body: JSON.stringify(payload),\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'POST'\n});\n\n// ****************************** monitor ******************************\n\nexport const getHosts = (server, token) => apiCall(`${server}/hosts`, {\n    headers: {\n        'Authorization': `Bearer ${token}`\n    }\n});\n\nexport const postComplexMetric = (server, token, host, payload) => apiCall(`${server}/hosts/${host}/metrics`, {\n    body: JSON.stringify(payload),\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    },\n    method: 'POST'\n});\n\nexport const deleteComplexMetric = (server, token, host, id) => apiCall(`${server}/hosts/${host}/metrics/${id}`, {\n    headers: {\n        'Authorization': `Bearer ${token}`\n    },\n    method: 'DELETE'\n});\n\nexport const getMeasurements = (server, token, query) => apiCall(`${server}/measurements?${qs.stringify(query)}`, {\n    headers: {\n        'Authorization': `Bearer ${token}`\n    }\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "apiCall",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~apiCall",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "login",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~login",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{login}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "registration",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~registration",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{registration}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "getHosts",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~getHosts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{getHosts}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "postComplexMetric",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~postComplexMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{postComplexMetric}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "deleteComplexMetric",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~deleteComplexMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{deleteComplexMetric}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "getMeasurements",
    "memberof": "src/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api.js~getMeasurements",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/api.js",
    "importStyle": "{getMeasurements}",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "query",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/components/AddChart/index.js",
    "content": "import React from 'react';\nimport { Button, Select, Icon } from 'antd';\nimport './index.less';\n\nclass AddChart extends React.PureComponent {\n\n    state = {\n        value: undefined\n    };\n\n    onChange = (value) => {\n        this.setState({ value });\n    }\n\n    onButtonClick = () => {\n        this.props.onAdd({ metric: this.state.value });\n        this.setState({ value: undefined });\n    }\n\n    render() {\n        const { metrics } = this.props;\n        const { value } = this.state;\n        return (\n            <div className=\"add-chart\">\n                <Select\n                    className=\"add-chart-select\" placeholder=\"Wybierz metrykę\" allowClear={true}\n                    showSearch={true} value={value} onChange={this.onChange}\n                >\n                    {metrics.map(metric => (\n                        <Select.Option key={metric} value={metric}>{metric}</Select.Option>\n                    ))}\n                </Select>\n                <Button\n                    className=\"add-chart-button\" type=\"primary\"\n                    onClick={this.onButtonClick} disabled={!value}\n                >\n                    <Icon type=\"plus\" />\n                    Dodaj wykres\n                </Button>\n            </div>\n        );\n    }\n\n}\n\nexport default AddChart;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/AddChart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "class",
    "name": "AddChart",
    "memberof": "src/components/AddChart/index.js",
    "static": true,
    "longname": "src/components/AddChart/index.js~AddChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/AddChart/index.js",
    "importStyle": "AddChart",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#state",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "onButtonClick",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#onButtonClick",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/AddChart/index.js~AddChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AddChart/index.js~AddChart#render",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/components/AppLayout/__tests__/layout.js",
    "content": "import React from 'react';\nimport { shallow } from 'enzyme';\nimport AppLayout from '../index.js';\n\nit('contains Res-Mon title', () => {\n    const layout = shallow(<AppLayout location={{ pathname: 'test-pathname' }}>Junk</AppLayout>);\n    expect(layout.find('.title').children().text()).toEqual('Res-Mon');\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/AppLayout/__tests__/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "src/components/AppLayout/index.js",
    "content": "import React from 'react';\nimport { Layout, Menu, LocaleProvider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport pl_PL from 'antd/lib/locale-provider/pl_PL';\nimport 'moment/locale/pl';\nimport './layout.less';\nimport { LIVE_ROUTE, HISTORICAL_ROUTE, MONITORS_ROUTE, HOSTS_ROUTE,\n    LOGIN_ROUTE, REGISTRATION_ROUTE } from '../../routes';\n\nconst { Sider, Content, Footer } = Layout;\n\nconst AppLayout = ({ children, location, auth, signOut }) => (\n    <LocaleProvider locale={pl_PL}>\n        <Layout className=\"app-root\">\n            <Sider breakpoint=\"lg\" collapsedWidth=\"0\" className=\"app-side\">\n                <Link to=\"/\" className=\"title\">Res-Mon</Link>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"inline\"\n                    className=\"menu\"\n                    selectedKeys={[ location.pathname ]}\n                    onClick={(item) => item.key === 'sign-out' && signOut()}\n                >\n                    {auth && <Menu.Item key={LIVE_ROUTE}>\n                        <Link to={LIVE_ROUTE}>Pomiary na żywo</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key={HISTORICAL_ROUTE}>\n                        <Link to={HISTORICAL_ROUTE}>Pomiary historyczne</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key={HOSTS_ROUTE}>\n                        <Link to={HOSTS_ROUTE}>Hosty i Metryki</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key={MONITORS_ROUTE}>\n                        <Link to={MONITORS_ROUTE}>Monitory</Link>\n                    </Menu.Item>}\n                    {!auth && <Menu.Item key={LOGIN_ROUTE}>\n                        <Link to={LOGIN_ROUTE}>Logowanie</Link>\n                    </Menu.Item>}\n                    {!auth && <Menu.Item key={REGISTRATION_ROUTE}>\n                        <Link to={REGISTRATION_ROUTE}>Rejestracja</Link>\n                    </Menu.Item>}\n                    {auth && <Menu.Item key=\"sign-out\">Wyloguj się</Menu.Item>}\n                </Menu>\n            </Sider>\n            <Layout className=\"app-content-wrapper\">\n                <Content className=\"app-content\">\n                    {React.cloneElement(children, { location })}\n                </Content>\n                <Footer className=\"app-footer\">\n                    &copy; <a href=\"https://github.com/MAD-FiS\">MAD-Team</a> (\n                    <a href=\"https://github.com/drzazga888\">drzazga888</a>&nbsp;\n                    / <a href=\"https://github.com/Grzegorz-00\">Grzegorz-00</a>&nbsp;\n                    / <a href=\"https://github.com/GrzegorzR\">GrzegorzR</a>&nbsp;\n                    / <a href=\"https://github.com/IanRacon\">IanRacon</a>&nbsp;\n                    / <a href=\"https://github.com/kawues\">kawues</a>&nbsp;\n                    / <a href=\"https://github.com/lukasz22\">lukasz22</a>&nbsp;\n                    / <a href=\"https://github.com/tbajorek\">tbajorek</a>&nbsp;\n                    / <a href=\"https://github.com/tchw\">tchw</a>&nbsp;\n                    / <a href=\"https://github.com/XtorukmaktoX\">XtorukmaktoX</a>\n                    ) 2018.\n                </Footer>\n            </Layout>\n        </Layout>\n    </LocaleProvider>\n);\n\nexport default AppLayout;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/AppLayout/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "Sider",
    "memberof": "src/components/AppLayout/index.js",
    "static": true,
    "longname": "src/components/AppLayout/index.js~Sider",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "AppLayout",
    "memberof": "src/components/AppLayout/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/AppLayout/index.js~AppLayout",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/AppLayout/index.js",
    "importStyle": "AppLayout",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"children\": *, \"location\": *, \"auth\": *, \"signOut\": *}"
        ],
        "defaultRaw": {
          "children": null,
          "location": null,
          "auth": null,
          "signOut": null
        },
        "defaultValue": "{\"children\":null,\"location\":null,\"auth\":null,\"signOut\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/components/AuthServer/index.js",
    "content": "import React from 'react';\nimport EditableCell from '../EditableTable/EditableCell';\nimport './index.less';\n\nclass AuthServer extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMode: false,\n            authServer: this.props.authServer\n        };\n        this.rootRef = React.createRef();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.authServer !== newProps.authServer) {\n            this.setState({ authServer: newProps.authServer });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.editMode && !prevState.editMode) {\n            this.rootRef.current.getElementsByTagName('input')[0].focus();\n        }\n    }\n\n    onEditStart = () => {\n        this.setState({ editMode: true });\n    }\n\n    onEditCancel = () => {\n        this.setState({ editMode: false, authServer: this.props.authServer });\n    }\n\n    onHandleChange = (a, b, authServer) => {\n        this.setState({ authServer });\n    }\n\n    onSave = () => {\n        this.props.changeAuthServer({ address: this.state.authServer });\n        this.setState({ editMode: false });\n    }\n\n    render() {\n        const { authServer, editMode } = this.state;\n        return (\n            <div className=\"auth-server\" ref={this.rootRef}>\n                <span>Server autoryzacyjny:&nbsp;</span>\n                <EditableCell\n                    value={authServer}\n                    editable={true}\n                    onHandleChange={this.onHandleChange}\n                    editMode={editMode}\n                    onEditStart={this.onEditStart}\n                    onEditCancel={this.onEditCancel}\n                    onSave={this.onSave}\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default AuthServer;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/AuthServer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "class",
    "name": "AuthServer",
    "memberof": "src/components/AuthServer/index.js",
    "static": true,
    "longname": "src/components/AuthServer/index.js~AuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/AuthServer/index.js",
    "importStyle": "AuthServer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 156,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"editMode\": *, \"authServer\": *}"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "rootRef",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#rootRef",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "newProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "prevState",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "onEditStart",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onEditStart",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "onEditCancel",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onEditCancel",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "onHandleChange",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onHandleChange",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "onSave",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#onSave",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/AuthServer/index.js~AuthServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/AuthServer/index.js~AuthServer#render",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/components/Chart/ChartDeleteButton.js",
    "content": "import React from 'react';\nimport { Icon, Popconfirm } from 'antd';\n\nconst ChartDeleteButton = ({ onDelete }) => (\n    <Popconfirm title=\"Na pewno chcesz usunąć ten wykres?\" onConfirm={onDelete} okText=\"Usuń\" cancelText=\"Anuluj\">\n        <a className=\"chart-delete-button\">\n            <Icon type=\"delete\" />\n        </a>\n    </Popconfirm>\n);\n\nexport default ChartDeleteButton;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/ChartDeleteButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "ChartDeleteButton",
    "memberof": "src/components/Chart/ChartDeleteButton.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartDeleteButton.js~ChartDeleteButton",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/ChartDeleteButton.js",
    "importStyle": "ChartDeleteButton",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onDelete\": *}"
        ],
        "defaultRaw": {
          "onDelete": null
        },
        "defaultValue": "{\"onDelete\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/components/Chart/ChartEngine.js",
    "content": "import React from 'react';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsBoost from 'highcharts/modules/boost';\nimport strToColor from '../../utils/strToColor';\nimport moment from 'moment';\n\nHighchartsBoost(Highcharts);\n\nHighcharts.setOptions({\n    lang: {\n        months: [\n            'Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec',\n            'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'\n        ],\n        shortMonths: ['Sty', 'Lut', 'Mar', 'Kwi', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'Paź', 'Lis', 'Gru'],\n        weekdays: ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota']\n    },\n    global: {\n        useUTC: false\n    }\n});\n\nconst metricGeneral = metric => metric[Object.keys(metric)[0]];\n\nconst mapData = (data, withDataLabel) => {\n    if (withDataLabel) {\n        return data.map(({ time, value }) => ({\n            x: moment(time).valueOf(),\n            y: value\n        }));\n    } else {\n        return data.map(({ time, value }) => [ moment(time).valueOf(), value ]);\n    }\n};\n\nclass ChartEngine extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.createChart();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            this.props.metric1Measurements !== prevProps.metric1Measurements\n            || this.props.metric1Measurements !== prevProps.metric2Measurements\n        ) {\n            this.destroyChart();\n            this.createChart();\n        }\n    }\n\n    componentWillUnmount() {\n        this.destroyChart();\n    }\n\n    /*addPoints() {\n        const { metric1Info, metric1LastUpdate, metric1Measurements, metric1HostsSelected } = this.props;\n        metric1HostsSelected\n            .map(host => ({\n                host,\n                points: metric1Measurements[host].slice(-metric1LastUpdate[host])\n            }))\n            .forEach(({ host, points }) => {\n                let series = this.chart.get(`${metric1Info.id}:${host}`);\n                points.forEach(({ time, value }) => {\n                    series.removePoint(0, false);\n                    series.addPoint({\n                        x: moment(time).valueOf(),\n                        y: value\n                    }, false);\n                });\n            });\n        this.chart.redraw(true);\n    }*/\n\n    createChart() {\n        const {\n            metric1, metric1Measurements,\n            metric2, metric2Measurements,\n            navigatorDisabled, withDataLabel\n        } = this.props;\n        const metric1General = metricGeneral(metric1);\n        let yAxis = [\n            {\n                id: metric1General.id,\n                title: {\n                    text: metric1General.id\n                },\n                labels: {\n                    format: '{value}' + metric1General.unit\n                },\n                opposite: false\n            }\n        ];\n        let series = Object.entries(metric1Measurements).map(([ host, data ]) => ({\n            name: `${metric1General.id}, ${host}`,\n            id: `${metric1General.id}:${host}`,\n            data: mapData(data, withDataLabel),\n            color: strToColor(host),\n            yAxis: metric1General.id,\n            tooltip: {\n                valueSuffix: metric1General.unit\n            }\n        }));\n        if (metric2Measurements && Object.keys(metric2Measurements).length > 0) {\n            const metric2General = metricGeneral(metric2);\n            yAxis.push({\n                id: metric2General.id,\n                title: {\n                    text: metric2General.id\n                },\n                labels: {\n                    format: '{value}' + metric2General.unit\n                },\n                gridLineWidth: 0,\n                opposite: true\n            });\n            series = series.concat(Object.entries(metric2Measurements || []).map(([ host, data ]) => ({\n                name: `${metric2General.id}, ${host}`,\n                id: `${metric2General.id}:${host}`,\n                data: mapData(data, withDataLabel),\n                color: strToColor(host),\n                yAxis: metric2General.id,\n                tooltip: {\n                    valueSuffix: metric2General.unit\n                },\n                dashStyle: 'Dash'\n            })));\n        }\n        this.chart = Highcharts.stockChart(this.chartRef.current, {\n            series,\n            plotOptions: {\n                series: {\n                    dataLabels: {\n                        formatter: function() {\n                            if (this.point.index !== this.series.data.length - 1) {\n                                return null;\n                            }\n                            const nrFormatted = Highcharts.numberFormat(\n                                this.y,\n                                this.series.tooltipOptions.valueDecimals\n                            );\n                            const suffix = this.series.tooltipOptions.valueSuffix;\n                            return `\n                                <span style=\"color: ${this.color};\">${this.series.name}</span><br />\n                                <strong style=\"color: ${this.color};\">${nrFormatted}${suffix}</strong>\n                            `;\n                        },\n                        enabled: withDataLabel\n                    }\n                }\n            },\n            chart: {\n                backgroundColor: 'transparent'\n            },\n            tooltip: {\n                split: true,\n                crosshairs: true,\n                valueDecimals: 2\n            },\n            boost: {\n                useGPUTranslations: true\n            },\n            scrollbar: {\n                liveRedraw: false,\n                enabled: !navigatorDisabled\n            },\n            rangeSelector: {\n                inputEnabled: false\n            },\n            navigator: {\n                enabled: !navigatorDisabled\n            },\n            yAxis\n        });\n        this.chartLoadTimeout = setTimeout(() => this.chart.reflow());\n    }\n\n    destroyChart() {\n        if (this.chartLoadTimeout) {\n            clearTimeout(this.chartLoadTimeout);\n        }\n        this.chart.destroy();\n        this.chart = null;\n    }\n\n    render() {\n        return <div className={`chart ${this.props.invalidated ? 'indeterminate' : ''}`} ref={this.chartRef}></div>;\n    }\n\n}\n\nexport default ChartEngine;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/ChartEngine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "metricGeneral",
    "memberof": "src/components/Chart/ChartEngine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartEngine.js~metricGeneral",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartEngine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "metric",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "mapData",
    "memberof": "src/components/Chart/ChartEngine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartEngine.js~mapData",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartEngine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "withDataLabel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "class",
    "name": "ChartEngine",
    "memberof": "src/components/Chart/ChartEngine.js",
    "static": true,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/ChartEngine.js",
    "importStyle": "ChartEngine",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 172,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "chartRef",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#chartRef",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "createChart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#createChart",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "chart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#chart",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "chartLoadTimeout",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#chartLoadTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "destroyChart",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#destroyChart",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/ChartEngine.js~ChartEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartEngine.js~ChartEngine#render",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/components/Chart/ChartLegend.js",
    "content": "import React from 'react';\nimport { Select, List, Icon, Tooltip } from 'antd';\nimport strToColor from '../../utils/strToColor';\n\nconst { Option } = Select;\n\nconst MetricHeader = ({ allowClear, label, value, onChange, metrics }) => (\n    <div className=\"metric-header\">\n        <strong className=\"metric-name\">{label}:</strong>\n        <Select\n            showSearch={true}\n            allowClear={allowClear}\n            value={value || undefined}\n            onChange={onChange}\n            placeholder=\"Wybierz metrykę\"\n            className=\"metric-selector\"\n        >\n            {metrics.map(m => <Option key={m} value={m}>{m}</Option>)}\n        </Select>\n    </div>\n);\n\nconst HostsSelector = ({ selected, onDismiss }) => (\n    <List\n        size=\"small\"\n        dataSource={selected}\n        renderItem={({ hostname, metricDescription }) => (\n            <List.Item\n                actions={[\n                    <a key=\"close\" onClick={onDismiss.bind(this, hostname)}><Icon type=\"close\" /></a>\n                ]}\n            >\n                <div className=\"series-dot\" style={{ backgroundColor: strToColor(hostname) }}></div>\n                {hostname}\n                <Tooltip title={'Opis powiązanej metryki: ' + metricDescription}>\n                    <Icon className=\"metric-hint\" type=\"question-circle\" />\n                </Tooltip>\n            </List.Item>\n        )}\n    />\n);\n\nclass HostsAdder extends React.PureComponent {\n\n    state = {};\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (\n            this.state.value\n            && (\n                nextProps.all.indexOf(this.state.value) === -1\n                || nextProps.selected.indexOf(this.state.value) !== -1\n            )\n        ) {\n            this.setState({ value: undefined });\n        }\n    }\n\n    onValueChange = (value) => {\n        this.setState({ value });\n    }\n\n    onSubmit = () => {\n        if (this.state.value) {\n            this.props.onSubmit(this.state.value);\n        }\n    }\n\n    render() {\n        const { all, selected } = this.props;\n        const { value } = this.state;\n        const dropdownValues = all.filter(h => selected.indexOf(h) === -1);\n        return (\n            <div className=\"hosts-adder\">\n                <Select\n                    showSearch={true} allowClear placeholder=\"Wybierz host\"\n                    value={value} onChange={this.onValueChange} className=\"hosts-selector\"\n                >\n                    {dropdownValues.map(h => <Option key={h} value={h}>{h}</Option>)}\n                </Select>\n                <a className=\"add-button\" onClick={this.onSubmit}><Icon type=\"plus\" /></a>\n            </div>\n        );\n    }\n\n}\n\nconst ChartLegend = ({ necessary, label, metrics, metric, hosts, onMetricChanged, onHostAdded, onHostDismissed }) => (\n    <div className=\"chart-legend\">\n        <MetricHeader\n            allowClear={!necessary} label={label} value={metric}\n            onChange={onMetricChanged} metrics={Object.keys(metrics)}\n        />\n        {necessary || metric ?\n            <HostsSelector\n                selected={hosts.map(hostname => ({\n                    hostname,\n                    metricDescription: metrics[metric][hostname].description\n                }))}\n                onDismiss={onHostDismissed}\n            />\n            : null}\n        {necessary || metric ?\n            <HostsAdder all={Object.keys(metrics[metric])} selected={hosts} onSubmit={onHostAdded} />\n            : null}\n    </div>\n);\n\nexport default ChartLegend;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/ChartLegend.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/Chart/ChartLegend.js",
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~Option",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "MetricHeader",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~MetricHeader",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"allowClear\": *, \"label\": *, \"value\": *, \"onChange\": *, \"metrics\": *}"
        ],
        "defaultRaw": {
          "allowClear": null,
          "label": null,
          "value": null,
          "onChange": null,
          "metrics": null
        },
        "defaultValue": "{\"allowClear\":null,\"label\":null,\"value\":null,\"onChange\":null,\"metrics\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "HostsSelector",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~HostsSelector",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"selected\": *, \"onDismiss\": *}"
        ],
        "defaultRaw": {
          "selected": null,
          "onDismiss": null
        },
        "defaultValue": "{\"selected\":null,\"onDismiss\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "HostsAdder",
    "memberof": "src/components/Chart/ChartLegend.js",
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartLegend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ],
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#state",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "onValueChange",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#onValueChange",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "onSubmit",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#onSubmit",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/ChartLegend.js~HostsAdder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/ChartLegend.js~HostsAdder#render",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "ChartLegend",
    "memberof": "src/components/Chart/ChartLegend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartLegend.js~ChartLegend",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/ChartLegend.js",
    "importStyle": "ChartLegend",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"necessary\": *, \"label\": *, \"metrics\": *, \"metric\": *, \"hosts\": *, \"onMetricChanged\": *, \"onHostAdded\": *, \"onHostDismissed\": *}"
        ],
        "defaultRaw": {
          "necessary": null,
          "label": null,
          "metrics": null,
          "metric": null,
          "hosts": null,
          "onMetricChanged": null,
          "onHostAdded": null,
          "onHostDismissed": null
        },
        "defaultValue": "{\"necessary\":null,\"label\":null,\"metrics\":null,\"metric\":null,\"hosts\":null,\"onMetricChanged\":null,\"onHostAdded\":null,\"onHostDismissed\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "src/components/Chart/ChartTimeRange.js",
    "content": "import React from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst ChartTimeRange = ({ from, to, onChange }) => (\n    <div className=\"chart-time-range\">\n        Przedział czasu: <RangePicker\n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm:ss\"\n            defaultValue={[ moment(from), moment(to) ]}\n            onOk={([ from, to ]) => onChange(from.format(), to.format())}\n        />\n    </div>\n);\n\nexport default ChartTimeRange;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/ChartTimeRange.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "RangePicker",
    "memberof": "src/components/Chart/ChartTimeRange.js",
    "static": true,
    "longname": "src/components/Chart/ChartTimeRange.js~RangePicker",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/ChartTimeRange.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "ChartTimeRange",
    "memberof": "src/components/Chart/ChartTimeRange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/ChartTimeRange.js~ChartTimeRange",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/ChartTimeRange.js",
    "importStyle": "ChartTimeRange",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"from\": *, \"to\": *, \"onChange\": *}"
        ],
        "defaultRaw": {
          "from": null,
          "to": null,
          "onChange": null
        },
        "defaultValue": "{\"from\":null,\"to\":null,\"onChange\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/components/Chart/HistoricalChart.js",
    "content": "import React from 'react';\nimport moment from 'moment';\nimport { Icon } from 'antd';\nimport ChartEngine from './ChartEngine';\nimport ChartLegend from './ChartLegend';\nimport ChartTimeRange from './ChartTimeRange';\nimport ChartDeleteButton from './ChartDeleteButton';\n\nconst exportToCsv = (metric1, metric2, measurements1, measurements2) => {\n    let bySecond = Object.values(measurements1).reduce((c, d) => c.concat(d), []);\n    if (measurements2) {\n        bySecond = bySecond.concat(Object.values(measurements1).reduce((c, d) => c.concat(d), []));\n    }\n    bySecond = bySecond.map(d => moment(d.time).unix())\n        .filter((v, i, a) => a.indexOf(v) === i)\n        .sort();\n    let labels = [ 'time', ...Object.keys(measurements1).map(m => metric1 + ':' + m) ];\n    if (measurements2) {\n        labels = labels.concat(Object.keys(measurements2).map(m => metric2 + ':' + m));\n    }\n    const arr2d = bySecond.map(() => Array.from({ length: labels.length }));\n    const bySecondToIndex = bySecond.reduce((c, v, i) => Object.assign({ [v]: i }, c), {});\n    const labelsToIndex = labels.reduce((c, v, i) => Object.assign({ [v]: i }, c), {});\n    for (let i = 0; i < arr2d.length; ++i) {\n        arr2d[i][0] = moment.unix(bySecond[i]).toISOString();\n    }\n    for (const host of Object.keys(measurements1)) {\n        for (const point of Object.values(measurements1[host])) {\n            arr2d[bySecondToIndex[moment(point.time).unix()]][labelsToIndex[metric1 + ':' + host]] = point.value;\n        }\n    }\n    if (measurements2) {\n        for (const host of Object.keys(measurements2)) {\n            for (const point of Object.values(measurements2[host])) {\n                arr2d[bySecondToIndex[moment(point.time).unix()]][labelsToIndex[metric2 + ':' + host]] = point.value;\n            }\n        }\n    }\n    const toExport = [ labels, ...arr2d ];\n    const str = toExport.map(v => v.join(',')).join('\\r\\n');\n    const exportLink = document.createElement('a');\n    exportLink.setAttribute('href', 'data:text/csv;base64,' + window.btoa(str));\n    exportLink.setAttribute('download', 'historical_' + metric1 + (metric2 ? '_' + metric2 : '') + '.csv');\n    exportLink.appendChild(document.createTextNode('test.csv'));\n    document.getElementsByTagName('body')[0].appendChild(exportLink);\n    exportLink.click();\n    exportLink.remove();\n};\n\nconst HistoricalChart = ({\n    metric1, measurements1, hosts1,\n    metric2, measurements2, hosts2,\n    metrics, indeterminate, start, end,\n    onMetric1Changed, onHostDismissedFromMetric1, onHostAddedToMetric1,\n    onMetric2Changed, onHostDismissedFromMetric2, onHostAddedToMetric2,\n    onRangeChanged, onChartClosed\n}) => (\n    <div className=\"chart-container\">\n        <div className=\"chart-container-main\">\n            <div className=\"chart-corner\">\n                <ChartTimeRange from={start} to={end} onChange={onRangeChanged} />\n                <a\n                    className=\"chart-csv-button\"\n                    onClick={() => exportToCsv(metric1, metric2, measurements1, measurements2)}\n                >\n                    <Icon type=\"export\" />\n                </a>\n                <ChartDeleteButton onDelete={onChartClosed} />\n            </div>\n            <ChartEngine\n                metric1={metrics[metric1]}\n                metric1Measurements={measurements1}\n                metric2={metrics[metric2]}\n                metric2Measurements={measurements2}\n                indeterminate={indeterminate}\n            />\n        </div>\n        <div className=\"chart-container-side\">\n            <ChartLegend\n                necessary={true}\n                label=\"Metryka podstawowa\"\n                metrics={metrics}\n                metric={metric1}\n                hosts={hosts1}\n                onMetricChanged={onMetric1Changed}\n                onHostAdded={onHostAddedToMetric1}\n                onHostDismissed={onHostDismissedFromMetric1}\n            />\n            <ChartLegend\n                label=\"Metryka dodatkowa\"\n                metrics={metrics}\n                metric={metric2}\n                hosts={hosts2}\n                onMetricChanged={onMetric2Changed}\n                onHostAdded={onHostAddedToMetric2}\n                onHostDismissed={onHostDismissedFromMetric2}\n            />\n        </div>\n    </div>\n);\n\nexport default HistoricalChart;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/HistoricalChart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "exportToCsv",
    "memberof": "src/components/Chart/HistoricalChart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/HistoricalChart.js~exportToCsv",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/HistoricalChart.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "metric1",
        "types": [
          "*"
        ]
      },
      {
        "name": "metric2",
        "types": [
          "*"
        ]
      },
      {
        "name": "measurements1",
        "types": [
          "*"
        ]
      },
      {
        "name": "measurements2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "HistoricalChart",
    "memberof": "src/components/Chart/HistoricalChart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/HistoricalChart.js~HistoricalChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/HistoricalChart.js",
    "importStyle": "HistoricalChart",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metric1\": *, \"measurements1\": *, \"hosts1\": *, \"metric2\": *, \"measurements2\": *, \"hosts2\": *, \"metrics\": *, \"indeterminate\": *, \"start\": *, \"end\": *, \"onMetric1Changed\": *, \"onHostDismissedFromMetric1\": *, \"onHostAddedToMetric1\": *, \"onMetric2Changed\": *, \"onHostDismissedFromMetric2\": *, \"onHostAddedToMetric2\": *, \"onRangeChanged\": *, \"onChartClosed\": *}"
        ],
        "defaultRaw": {
          "metric1": null,
          "measurements1": null,
          "hosts1": null,
          "metric2": null,
          "measurements2": null,
          "hosts2": null,
          "metrics": null,
          "indeterminate": null,
          "start": null,
          "end": null,
          "onMetric1Changed": null,
          "onHostDismissedFromMetric1": null,
          "onHostAddedToMetric1": null,
          "onMetric2Changed": null,
          "onHostDismissedFromMetric2": null,
          "onHostAddedToMetric2": null,
          "onRangeChanged": null,
          "onChartClosed": null
        },
        "defaultValue": "{\"metric1\":null,\"measurements1\":null,\"hosts1\":null,\"metric2\":null,\"measurements2\":null,\"hosts2\":null,\"metrics\":null,\"indeterminate\":null,\"start\":null,\"end\":null,\"onMetric1Changed\":null,\"onHostDismissedFromMetric1\":null,\"onHostAddedToMetric1\":null,\"onMetric2Changed\":null,\"onHostDismissedFromMetric2\":null,\"onHostAddedToMetric2\":null,\"onRangeChanged\":null,\"onChartClosed\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/components/Chart/LiveChart.js",
    "content": "import React from 'react';\nimport ChartEngine from './ChartEngine';\nimport ChartLegend from './ChartLegend';\nimport ChartDeleteButton from './ChartDeleteButton';\n\nconst LiveChart = ({\n    onChartClosed, onHostAdded, onHostDismissed, onMetricChanged,\n    hosts, invalidated, measurements, metric, metrics\n}) => (\n    <div className=\"chart-container\">\n        <div className=\"chart-container-main\">\n            <div className=\"chart-corner\">\n                <ChartDeleteButton onDelete={onChartClosed} />\n            </div>\n            <ChartEngine\n                metric1={metrics[metric]}\n                metric1Measurements={measurements}\n                metric1Hosts={hosts}\n                navigatorDisabled={true}\n                withDataLabel={true}\n                invalidated={invalidated}\n            />\n        </div>\n        <div className=\"chart-container-side\">\n            <ChartLegend\n                necessary={true}\n                label=\"Metryka\"\n                metrics={metrics}\n                metric={metric}\n                hosts={hosts}\n                onMetricChanged={onMetricChanged}\n                onHostAdded={onHostAdded}\n                onHostDismissed={onHostDismissed}\n            />\n        </div>\n    </div>\n);\n\nexport default LiveChart;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/LiveChart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "LiveChart",
    "memberof": "src/components/Chart/LiveChart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/LiveChart.js~LiveChart",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/LiveChart.js",
    "importStyle": "LiveChart",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onChartClosed\": *, \"onHostAdded\": *, \"onHostDismissed\": *, \"onMetricChanged\": *, \"hosts\": *, \"invalidated\": *, \"measurements\": *, \"metric\": *, \"metrics\": *}"
        ],
        "defaultRaw": {
          "onChartClosed": null,
          "onHostAdded": null,
          "onHostDismissed": null,
          "onMetricChanged": null,
          "hosts": null,
          "invalidated": null,
          "measurements": null,
          "metric": null,
          "metrics": null
        },
        "defaultValue": "{\"onChartClosed\":null,\"onHostAdded\":null,\"onHostDismissed\":null,\"onMetricChanged\":null,\"hosts\":null,\"invalidated\":null,\"measurements\":null,\"metric\":null,\"metrics\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/components/Chart/index.js",
    "content": "import './index.less';\n\nexport { default as HistoricalChart } from './HistoricalChart';\nexport { default as LiveChart } from './LiveChart';\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "src/components/Chart/usage/HistoricalChartWrapper.js",
    "content": "import React from 'react';\nimport moment from 'moment';\nimport { HistoricalChart } from '../index';\nimport { getData, metrices } from './utils';\n\nclass HistoricalChartWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        const matric1Name = 'CPU';\n        const metric1HostsSelected = [\n            'host2.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ];\n        const rangeFrom = moment('2018-01-09 00:00').format();\n        const rangeTo = moment('2018-01-09 02:00').format();\n        this.state = {\n            indeterminate: false,\n            metrices: Object.keys(metrices),\n            metric1Info: Object.assign({\n                name: matric1Name\n            }, metrices[matric1Name]),\n            metric1HostsSelected: metric1HostsSelected,\n            metric1Measurements: getData(rangeFrom, rangeTo, matric1Name, metric1HostsSelected),\n            metric2Info: null,\n            metric2HostsSelected: null,\n            metric2Measurements: null,\n            rangeFrom: rangeFrom,\n            rangeTo: rangeTo\n        };\n    }\n\n    componentWillUnmount() {\n        this.clearDataTimeout();\n    }\n\n    clearDataTimeout() {\n        if (this.dataTimeout) {\n            clearTimeout(this.dataTimeout);\n        }\n    }\n\n    loadData() {\n        this.clearDataTimeout();\n        this.dataTimeout = setTimeout(() => {\n            this.setState({\n                indeterminate: false,\n                metric1Measurements: getData(\n                    this.state.rangeFrom,\n                    this.state.rangeTo,\n                    this.state.metric1Info.name,\n                    this.state.metric1HostsSelected\n                ),\n                metric2Measurements: this.state.metric2Info ? getData(\n                    this.state.rangeFrom,\n                    this.state.rangeTo,\n                    this.state.metric2Info.name,\n                    this.state.metric2HostsSelected\n                ) : null\n            });\n        }, 1500);\n    }\n\n    onMetric1Changed = (metric) => {\n        this.setState({\n            indeterminate: true,\n            metric1Info: Object.assign({\n                name: metric\n            }, metrices[metric]),\n            metric1HostsSelected: []\n        }, this.loadData);\n    }\n\n    onMetric2Changed = (metric) => {\n        this.setState({\n            indeterminate: true,\n            metric2Info: metric ? Object.assign({\n                name: metric\n            }, metrices[metric]) : null,\n            metric2HostsSelected: metric ? [] : null\n        }, this.loadData);\n    }\n\n    onChartClosed = () => {\n        alert('Closed!');\n    }\n\n    onHostAddedToMetric1 = (host) => {\n        this.setState({\n            indeterminate: true,\n            metric1HostsSelected: [ ...this.state.metric1HostsSelected, host ]\n        }, this.loadData);\n    }\n\n    onHostAddedToMetric2 = (host) => {\n        this.setState({\n            indeterminate: true,\n            metric2HostsSelected: [ ...this.state.metric2HostsSelected, host ]\n        }, this.loadData);\n    }\n\n    onHostDismissedFromMetric1 = (host) => {\n        const list = this.state.metric1HostsSelected;\n        const pos = list.indexOf(host);\n        this.setState({\n            indeterminate: true,\n            metric1HostsSelected: [ ...list.slice(0, pos), ...list.slice(pos + 1) ]\n        }, this.loadData);\n    }\n\n    onHostDismissedFromMetric2 = (host) => {\n        const list = this.state.metric2HostsSelected;\n        const pos = list.indexOf(host);\n        this.setState({\n            indeterminate: true,\n            metric2HostsSelected: [ ...list.slice(0, pos), ...list.slice(pos + 1) ]\n        }, this.loadData);\n    }\n\n    onRangeChanged = (rangeFrom, rangeTo) => {\n        this.setState({\n            indeterminate: true,\n            rangeFrom,\n            rangeTo\n        }, this.loadData);\n    }\n\n    render() {\n        return <HistoricalChart\n            {...this.state}\n            onMetric1Changed={this.onMetric1Changed}\n            onMetric2Changed={this.onMetric2Changed}\n            onChartClosed={this.onChartClosed}\n            onHostAddedToMetric1={this.onHostAddedToMetric1}\n            onHostAddedToMetric2={this.onHostAddedToMetric2}\n            onHostDismissedFromMetric1={this.onHostDismissedFromMetric1}\n            onHostDismissedFromMetric2={this.onHostDismissedFromMetric2}\n            onRangeChanged={this.onRangeChanged}\n        />;\n    }\n\n}\n\nexport default HistoricalChartWrapper;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/usage/HistoricalChartWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "HistoricalChartWrapper",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js",
    "static": true,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/usage/HistoricalChartWrapper.js",
    "importStyle": "HistoricalChartWrapper",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#state",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"indeterminate\": *, \"metrices\": *, \"metric1Info\": *, \"metric1HostsSelected\": *, \"metric1Measurements\": *, \"metric2Info\": *, \"metric2HostsSelected\": *, \"metric2Measurements\": *, \"rangeFrom\": *, \"rangeTo\": *}"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "clearDataTimeout",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#clearDataTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "loadData",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#loadData",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "dataTimeout",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#dataTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "onMetric1Changed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onMetric1Changed",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "onMetric2Changed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onMetric2Changed",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "onChartClosed",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onChartClosed",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "onHostAddedToMetric1",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostAddedToMetric1",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "onHostAddedToMetric2",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostAddedToMetric2",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "onHostDismissedFromMetric1",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostDismissedFromMetric1",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "onHostDismissedFromMetric2",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onHostDismissedFromMetric2",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "onRangeChanged",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#onRangeChanged",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/HistoricalChartWrapper.js~HistoricalChartWrapper#render",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "src/components/Chart/usage/LiveChartWrapper.js",
    "content": "import React from 'react';\nimport moment from 'moment';\nimport { LiveChart } from '../index';\n\nclass LiveChartWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.updateTime = moment().format();\n        this.state = {\n            indeterminate: false,\n            metricMeasurements: {},\n            lastUpdate: null\n        };\n    }\n\n    clearTick() {\n        this.timeout && clearInterval(this.timeout);\n    }\n\n    loadPart() {\n        this.props.getData(\n            this.updateTime,\n            undefined,\n            this.props.metricName,\n            this.props.metricHostsSelected\n        ).then(data => {\n            const concated = data.reduce((c, d) => c.concat(d), []);\n            if (concated.map(d => d.data.length).reduce((c, l) => c + l, 0)) {\n                this.updateTime = moment().format();\n                const processed = concated.reduce((c, d) => ({\n                    ...c,\n                    [d.hostname]: d.data\n                }), {});\n                this.setState({\n                    metricMeasurements: this.props.metricHostsSelected.reduce((c, host) => ({\n                        ...c,\n                        [host]: [\n                            ...this.state.metricMeasurements[host],\n                            ...processed[host]\n                        ]\n                    }), {}),\n                    lastUpdate: Object.entries(processed).reduce((c, [ host, d ]) => ({\n                        ...c,\n                        [host]: d.length\n                    }), {})\n                });\n            }\n        });\n    }\n\n    loadFull() {\n        if (this.props.metricHostsSelected.length) {\n            this.setState({ indeterminate: true });\n            this.props.getData(\n                moment().subtract(1, 'hours').format(),\n                undefined,\n                this.props.metricName,\n                this.props.metricHostsSelected\n            ).then(data => {\n                this.updateTime = moment().format();\n                this.setState({\n                    indeterminate: false,\n                    metricMeasurements: data.reduce((c, d) => c.concat(d), []).reduce((c, d) => ({\n                        ...c,\n                        [d.hostname]: d.data\n                    }), {}),\n                    lastUpdate: null\n                });\n                this.clearTick();\n                this.timeout = setInterval(() => this.loadPart(), 5 * 1000);\n            });\n        }\n        else {\n            this.setState({\n                indeterminate: false,\n                lastUpdate: null,\n                metricMeasurements: {}\n            });\n            this.updateTime = moment().format();\n        }\n    }\n\n    componentDidMount() {\n        this.loadFull();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            this.props.metricHostsSelected !== prevProps.metricHostsSelected\n            || this.props.metricName !== prevProps.metricName\n        ) {\n            this.loadFull();\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearTick();\n    }\n\n    render() {\n        return <LiveChart\n            {...this.state}\n            metrices={Object.keys(this.props.metrices)}\n            metricInfo={this.props.metrices[this.props.metricName]}\n            metricHostsSelected={this.props.metricHostsSelected}\n            onMetricChanged={this.props.onMetricChanged}\n            onChartClosed={this.props.onChartClosed}\n            onHostAdded={this.props.onHostAdded}\n            onHostDismissed={this.props.onHostDismissed}\n        />;\n    }\n\n}\n\nexport default LiveChartWrapper;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/usage/LiveChartWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "class",
    "name": "LiveChartWrapper",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js",
    "static": true,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/usage/LiveChartWrapper.js",
    "importStyle": "LiveChartWrapper",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "updateTime",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#updateTime",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"indeterminate\": *, \"metricMeasurements\": *, \"lastUpdate\": *}"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "clearTick",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#clearTick",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "timeout",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#timeout",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "loadPart",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#loadPart",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "loadFull",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#loadFull",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "prevProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/Chart/usage/LiveChartWrapper.js~LiveChartWrapper#render",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/components/Chart/usage/utils.js",
    "content": "import moment from 'moment';\n\nexport const metrices = {\n    'CPU': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'CPU1': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'CPU2': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'RAM': {\n        unit: 'GB',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'Disk': {\n        unit: 'MB',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host2.agh.edu.pl',\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl',\n            'host5.agh.edu.pl'\n        ]\n    },\n    'Complex 1': {\n        unit: '%',\n        hosts: [\n            'host1.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    },\n    'Complex 2': {\n        unit: '%',\n        hosts: [\n            'host3.agh.edu.pl',\n            'host4.agh.edu.pl'\n        ]\n    }\n};\n\nconst steps = 60 * 60 * 24 / 5;\n\nconst getSeriesDayTemplate = () => {\n    const startVal = 20 * Math.random() + 3;\n    let val = startVal;\n    const data = Array.from({ length: steps }).map(() => {\n        val += (Math.random() - 0.5);\n        return val;\n    });\n    const diff = val - startVal;\n    return data.map((value, i) => value - (diff * i / steps));\n};\n\nconst seriesTemplates = Object.entries(metrices).reduce((metricCumm, [ metric, metricData ]) => {\n    return Object.assign({\n        [metric]: metricData.hosts.reduce((hostCumm, host) => {\n            return Object.assign({\n                [host]: getSeriesDayTemplate()\n            }, hostCumm);\n        }, {})\n    }, metricCumm);\n}, {});\n\nexport const getData = (from, to, metric, hosts) => {\n    const momStart = moment(from);\n    const momEnd = moment(to);\n    const diff5min = Math.floor(momEnd.diff(momStart, 'seconds') / 5);\n    return Object.values(hosts).reduce((cumm, host) => {\n        const template = seriesTemplates[metric][host];\n        let momIter = moment(momStart);\n        let templateIdx = Math.floor(momIter.unix() / 5);\n        const measurements = Array.from({ length: diff5min }).map(() => {\n            momIter = momIter.add(5, 'seconds');\n            templateIdx = (templateIdx + 1) % steps;\n            return {\n                time: momIter.format(),\n                value: template[templateIdx]\n            };\n        });\n        return Object.assign({\n            [host]: measurements\n        }, cumm);\n    }, {});\n};\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Chart/usage/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "metrices",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~metrices",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/usage/utils.js",
    "importStyle": "{metrices}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"CPU\": *, \"CPU1\": *, \"CPU2\": *, \"RAM\": *, \"Disk\": *, \"Complex 1\": *, \"Complex 2\": *}"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "steps",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~steps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "getSeriesDayTemplate",
    "memberof": "src/components/Chart/usage/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~getSeriesDayTemplate",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "name": "seriesTemplates",
    "memberof": "src/components/Chart/usage/utils.js",
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~seriesTemplates",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/Chart/usage/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "getData",
    "memberof": "src/components/Chart/usage/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Chart/usage/utils.js~getData",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Chart/usage/utils.js",
    "importStyle": "{getData}",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "metric",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "content": "import React from 'react';\nimport {Input, Icon} from 'antd';\n\nconst InputWrapper = ({value, editable, rowId, colId, onHandleChange, onSave, onEditCancel}) => (\n    <React.Fragment>\n        <Input\n            value={value}\n            className=\"text-wrapper-value\"\n            onChange={(e) => onHandleChange(rowId, colId, e.target.value)}\n            onPressEnter={() => editable ? onSave(rowId, colId) : null}\n        />\n        {\n            editable ?\n                <React.Fragment>\n                    <Icon\n                        type=\"check\"\n                        className=\"editable-cell-icon-check\"\n                        onClick={() => onSave(rowId, colId)}\n                    />\n                    <Icon\n                        type=\"close\"\n                        className=\"editable-cell-icon-cancel\"\n                        onClick={() => onEditCancel(rowId, colId)}\n                    />\n                </React.Fragment>\n                : ''\n        }\n    </React.Fragment>\n);\n\n\nexport default InputWrapper;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "InputWrapper",
    "memberof": "src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/InputWrapper/index.js~InputWrapper",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/EditableCell/InputWrapper/index.js",
    "importStyle": "InputWrapper",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onHandleChange\": *, \"onSave\": *, \"onEditCancel\": *}"
        ],
        "defaultRaw": {
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onHandleChange": null,
          "onSave": null,
          "onEditCancel": null
        },
        "defaultValue": "{\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onHandleChange\":null,\"onSave\":null,\"onEditCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\n\nconst TextWrapper = ({value, editable, rowId, colId, onEditStart}) => (\n    <React.Fragment>\n        {value ? <div className=\"text-wrapper-value\">{value}</div> : null}\n        {\n            editable ?\n                <Icon\n                    type=\"edit\"\n                    className=\"editable-cell-icon\"\n                    onClick={() => onEditStart(rowId, colId)}\n                /> : ''\n        }\n    </React.Fragment>\n);\n\nexport default TextWrapper;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "TextWrapper",
    "memberof": "src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/TextWrapper/index.js~TextWrapper",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/EditableCell/TextWrapper/index.js",
    "importStyle": "TextWrapper",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onEditStart\": *}"
        ],
        "defaultRaw": {
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onEditStart": null
        },
        "defaultValue": "{\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onEditStart\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/components/EditableTable/EditableCell/index.js",
    "content": "import React from 'react';\n\nimport InputWrapper from './InputWrapper';\nimport TextWrapper from './TextWrapper';\n\nconst EditableCell = ({\n    prefix, editMode, loading, value, editable, rowId, colId,\n    onHandleChange, onSave, onEditStart, onEditCancel\n}) => (\n    <div className={`editable-cell ${loading ? 'loading' : ''}`}>\n        {prefix}\n        {editMode ?\n            <InputWrapper\n                value={value} editable={editable} rowId={rowId} colId={colId}\n                onHandleChange={onHandleChange} onSave={onSave} onEditCancel={onEditCancel}\n            />\n            : <TextWrapper\n                value={value} editable={editable} rowId={rowId} colId={colId} onEditStart={onEditStart}\n            />}\n    </div>\n);\n\nEditableCell.defaultProps = {\n    value: '',\n    editable: false,\n    __editMode: false\n};\n\nexport default EditableCell;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/EditableCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "EditableCell",
    "memberof": "src/components/EditableTable/EditableCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/EditableCell/index.js~EditableCell",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/EditableCell/index.js",
    "importStyle": "EditableCell",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"prefix\": *, \"editMode\": *, \"loading\": *, \"value\": *, \"editable\": *, \"rowId\": *, \"colId\": *, \"onHandleChange\": *, \"onSave\": *, \"onEditStart\": *, \"onEditCancel\": *}"
        ],
        "defaultRaw": {
          "prefix": null,
          "editMode": null,
          "loading": null,
          "value": null,
          "editable": null,
          "rowId": null,
          "colId": null,
          "onHandleChange": null,
          "onSave": null,
          "onEditStart": null,
          "onEditCancel": null
        },
        "defaultValue": "{\"prefix\":null,\"editMode\":null,\"loading\":null,\"value\":null,\"editable\":null,\"rowId\":null,\"colId\":null,\"onHandleChange\":null,\"onSave\":null,\"onEditStart\":null,\"onEditCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/Delete/index.js",
    "content": "import React from 'react';\nimport { Popconfirm } from 'antd';\n\nconst Delete = ({record, text, onDeleteRow}) => (\n    <Popconfirm title=\"Czy chcesz usunąć?\" onConfirm={() => onDeleteRow(record.key)}>\n        <a onClick={e => e.preventDefault()}>{text}</a>\n    </Popconfirm>\n);\n\nexport default Delete;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/Menu/Delete/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "Delete",
    "memberof": "src/components/EditableTable/Menu/Delete/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/Delete/index.js~Delete",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/Menu/Delete/index.js",
    "importStyle": "Delete",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"record\": *, \"text\": *, \"onDeleteRow\": *}"
        ],
        "defaultRaw": {
          "record": null,
          "text": null,
          "onDeleteRow": null
        },
        "defaultValue": "{\"record\":null,\"text\":null,\"onDeleteRow\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/Edit/index.js",
    "content": "import React from 'react';\nimport { Popconfirm, Divider } from 'antd';\n\nconst Edit =({record, text, editable, onSaveRow, onEditRowStart, onEditRowCancel}) => (\n    <span className=\"editable-row-operations\">\n        {\n            editable ?\n                <span>\n                    <a onClick={() => onSaveRow(record.key)}>Zapisz</a>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm title=\"Czy chcesz cofnąć zmiany?\" onConfirm={() => onEditRowCancel(record.key)}>\n                        <a>Anuluj</a>\n                    </Popconfirm>\n                </span>\n                : <a onClick={() => onEditRowStart(record.key)}>{text}</a>\n        }\n    </span>\n);\n\nexport default Edit;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/Menu/Edit/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "Edit",
    "memberof": "src/components/EditableTable/Menu/Edit/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/Edit/index.js~Edit",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/Menu/Edit/index.js",
    "importStyle": "Edit",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"record\": *, \"text\": *, \"editable\": *, \"onSaveRow\": *, \"onEditRowStart\": *, \"onEditRowCancel\": *}"
        ],
        "defaultRaw": {
          "record": null,
          "text": null,
          "editable": null,
          "onSaveRow": null,
          "onEditRowStart": null,
          "onEditRowCancel": null
        },
        "defaultValue": "{\"record\":null,\"text\":null,\"editable\":null,\"onSaveRow\":null,\"onEditRowStart\":null,\"onEditRowCancel\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "src/components/EditableTable/Menu/index.js",
    "content": "import React from 'react';\nimport { Divider } from 'antd';\nimport Edit from './Edit';\nimport Delete from './Delete';\n\nconst Menu = ({loading, menuButtons, record, editable, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow}) => {\n    let key = 0;\n    const buttonsArray = menuButtons.map((button, i) => {\n        switch (button.type) {\n            case 'edit':\n                return (\n                    <React.Fragment key={++key}>\n                        {i ? <Divider type=\"vertical\" /> : null}\n                        <Edit\n                            record={record} text={button.name} editable={editable} onSaveRow={onSaveRow}\n                            onEditRowStart={onEditRowStart} onEditRowCancel={onEditRowCancel}\n                        />\n                    </React.Fragment>\n                );\n            case 'delete':\n                return (\n                    <React.Fragment key={++key}>\n                        {i ? <Divider type=\"vertical\" /> : null}\n                        <Delete record={record} text={button.name} onDeleteRow={onDeleteRow} />\n                    </React.Fragment>\n                );\n            default:\n                return null;\n        }\n    });\n    return (\n        <div className={`editable-menu-cell ${loading ? 'loading' : ''}`}>\n            {buttonsArray}\n        </div>\n    );\n};\n\nexport default Menu;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/Menu/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "Menu",
    "memberof": "src/components/EditableTable/Menu/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/Menu/index.js~Menu",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/Menu/index.js",
    "importStyle": "Menu",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"loading\": *, \"menuButtons\": *, \"record\": *, \"editable\": *, \"onSaveRow\": *, \"onEditRowStart\": *, \"onEditRowCancel\": *, \"onDeleteRow\": *}"
        ],
        "defaultRaw": {
          "loading": null,
          "menuButtons": null,
          "record": null,
          "editable": null,
          "onSaveRow": null,
          "onEditRowStart": null,
          "onEditRowCancel": null,
          "onDeleteRow": null
        },
        "defaultValue": "{\"loading\":null,\"menuButtons\":null,\"record\":null,\"editable\":null,\"onSaveRow\":null,\"onEditRowStart\":null,\"onEditRowCancel\":null,\"onDeleteRow\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "content": "import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst FormAdd = ({form, columnNames, required, onChange, setFormRef}) => {\n    setFormRef(form);\n    let inputs = [];\n    Object.entries(columnNames).forEach(([columnId, columnName]) => {\n        inputs.push(\n            <Form.Item label={columnName} key={columnId}>\n                {form.getFieldDecorator(columnId, {\n                    rules: [{ required: required[columnId], message: `Pole ${columnName} nie może być puste` }],\n                })(\n                    <Input onChange={(e) => onChange(columnId, e.target.value)} />\n                )}\n            </Form.Item>\n        );\n    });\n    return (\n        <Form layout=\"vertical\">\n            {inputs}\n        </Form>\n    );\n};\n\nconst WrappedFormAdd = Form.create()(FormAdd);\nexport default WrappedFormAdd;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "FormAdd",
    "memberof": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/FormAdd/index.js~FormAdd",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"columnNames\": *, \"required\": *, \"onChange\": *, \"setFormRef\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "columnNames": null,
          "required": null,
          "onChange": null,
          "setFormRef": null
        },
        "defaultValue": "{\"form\":null,\"columnNames\":null,\"required\":null,\"onChange\":null,\"setFormRef\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "WrappedFormAdd",
    "memberof": "src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/FormAdd/index.js~WrappedFormAdd",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/ModalAdd/FormAdd/index.js",
    "importStyle": "WrappedFormAdd",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "src/components/EditableTable/ModalAdd/index.js",
    "content": "import React, { Component } from 'react';\nimport FormAdd from './FormAdd';\nimport { Button, Modal, Icon } from 'antd';\n\nclass ModalAdd extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            row: {},\n            visible: false\n        };\n        this.columnNames = {};\n        this.required = {};\n        for (const column of this.props.columns) {\n            if (column.type !== 'menu') {\n                this.state.row[column.id] = '';\n                this.columnNames[column.id] = column.name;\n                this.required[column.id] = column.required;\n            }\n        }\n        this.form = null;\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    addRow = () => {\n        if(this.form !== null) {\n            this.form.validateFields((err) => {\n                if (!err) {\n                    this.props.onAdd(Object.assign({}, this.state.row));\n                    this.setState({\n                        row: this._getEmptyRow(),\n                        visible: false\n                    });\n                    this.form.setFieldsValue(this._getEmptyRow());\n                }\n            });\n        }\n    };\n\n    onChange = (columnId, value) => {\n        let row = Object.assign({}, this.state.row);\n        row[columnId] = value;\n        this.setState({\n            row\n        });\n    };\n\n    _getEmptyRow() {\n        let newRow = {};\n        Object.entries(this.state.row).forEach(([columnId]) => newRow[columnId] = '');\n        return newRow;\n    }\n\n    setFormRef = (form) => {\n        this.form = form;\n    };\n\n    render() {\n        return (\n            <div className=\"form-add\">\n                <Button type=\"primary\" className=\"editable-add-btn\" onClick={this.showModal}>\n                    <Icon type=\"plus\" />\n                    {this.props.buttonText}\n                </Button>\n                <Modal\n                    title=\"Dodaj nowy\"\n                    visible={this.state.visible}\n                    onOk={this.addRow}\n                    onCancel={this.hideModal}\n                    okText=\"Dodaj\"\n                    cancelText=\"Anuluj\"\n                >\n                    <FormAdd\n                        row={this.state.row} columnNames={this.columnNames} required={this.required}\n                        onChange={this.onChange} setFormRef={this.setFormRef}\n                    />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalAdd;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/ModalAdd/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "class",
    "name": "ModalAdd",
    "memberof": "src/components/EditableTable/ModalAdd/index.js",
    "static": true,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/ModalAdd/index.js",
    "importStyle": "ModalAdd",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"row\": *, \"visible\": *}"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "columnNames",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#columnNames",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "required",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#required",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "form",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#form",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "showModal",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#showModal",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "hideModal",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#hideModal",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "_getEmptyRow",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#_getEmptyRow",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "setFormRef",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#setFormRef",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/ModalAdd/index.js~ModalAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/ModalAdd/index.js~ModalAdd#render",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/components/EditableTable/columnsTransformer.js",
    "content": "import React from 'react';\nimport EditableCell from './EditableCell';\nimport Menu from './Menu';\n\nconst sorterDecorator = (inputColumn, originalColumn) => {\n    inputColumn.sorter = (a, b) => {\n        const val1 = a[originalColumn.id].value;\n        const val2 = b[originalColumn.id].value;\n        if (typeof val1 !== typeof val2) {\n            return false;\n        }\n        switch (typeof val1) {\n            case 'number':\n                return val1 < val2;\n            case 'string':\n                return val1.localeCompare(val2);\n            default:\n                return false;\n        }\n    };\n    return inputColumn;\n};\n\nconst menuTransformer = (inputColumn, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow) => {\n    return {\n        title: inputColumn.name,\n        render: (value, record) => { // eslint-disable-line react/display-name\n            return (\n                <Menu\n                    menuButtons={inputColumn.buttons} loading={record.__loading}\n                    editable={record.__editMode} record={record} onSaveRow={onSaveRow}\n                    onEditRowStart={onEditRowStart} onEditRowCancel={onEditRowCancel}\n                    onDeleteRow={onDeleteRow}\n                />\n            );\n        },\n    };\n};\n\nconst columnTransformer = (\n    inputColumns, onHandleChange = () => (null), onSaveCell = () => (null), onEditCellStart = () => (null),\n    onEditCellCancel = () => (null), onSaveRow = () => (null), onEditRowStart = () => (null),\n    onEditRowCancel = () => (null), onDeleteRow = () => (null)\n) => {\n    let outputColumns = [], newColumn;\n    for (const column of inputColumns) {\n        if (column.type === 'menu') {\n            newColumn = menuTransformer(column, onSaveRow, onEditRowStart, onEditRowCancel, onDeleteRow);\n        } else {\n            newColumn = {\n                title: column.name,\n                dataIndex: column.id,\n                render: (value, record) => ( // eslint-disable-line react/display-name\n                    <EditableCell prefix={column.prefixRender ? column.prefixRender(value, record, column) : null}\n                        editable={column.editable && !record.__editMode}\n                        loading={value.__loading || record.__loading} rowId={record.key}\n                        colId={value.__name} onHandleChange={onHandleChange} onSave={onSaveCell}\n                        onEditStart={onEditCellStart} onEditCancel={onEditCellCancel}\n                        value={value.value} editMode={value.__editMode || record.__editMode}\n                        __name={value.__name}\n                    />\n                ),\n            };\n        }\n        if (column.sortable === true) {\n            newColumn = sorterDecorator(newColumn, column);\n        }\n        outputColumns.push(newColumn);\n    }\n    return outputColumns;\n};\n\nexport default columnTransformer;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/columnsTransformer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "sorterDecorator",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~sorterDecorator",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/EditableTable/columnsTransformer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "inputColumn",
        "types": [
          "*"
        ]
      },
      {
        "name": "originalColumn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "menuTransformer",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~menuTransformer",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/EditableTable/columnsTransformer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "inputColumn",
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveRow",
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowCancel",
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeleteRow",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"title\": *, \"render\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "columnTransformer",
    "memberof": "src/components/EditableTable/columnsTransformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/columnsTransformer.js~columnTransformer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/columnsTransformer.js",
    "importStyle": "columnTransformer",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "inputColumns",
        "types": [
          "*"
        ]
      },
      {
        "name": "onHandleChange",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveCell",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditCellStart",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditCellCancel",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onSaveRow",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowStart",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onEditRowCancel",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "onDeleteRow",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/components/EditableTable/dataTransformer.js",
    "content": "class dataTransformer\n{\n    static get internalFields() {\n        return [\n            '__editMode',\n            '__loading',\n            '__name',\n            'key'\n        ];\n    }\n    static data2model = (inputData) => {\n        let outputData = [], outputRow, key = 0;\n        for (const row of inputData) {\n            outputRow = Object.assign({__editMode: false, __loading: false}, row);\n            for (const cell in row) {\n                outputRow[cell] = {\n                    __editMode: false,\n                    __loading: false,\n                    __name: cell,\n                    value: row[cell]\n                };\n            }\n            outputRow.key = key++;\n            outputData.push(outputRow);\n        }\n        return outputData;\n    };\n\n    static pureRow = (modelRow) => {\n        let row = {};\n        Object.entries(modelRow).forEach(([columnName, columnValue]) => {\n            if(dataTransformer.internalFields.indexOf(columnName) < 0) {\n                row[columnName] = columnValue.value;\n            }\n        });\n        return row;\n    }\n}\n\nexport default dataTransformer;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/dataTransformer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "class",
    "name": "dataTransformer",
    "memberof": "src/components/EditableTable/dataTransformer.js",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/dataTransformer.js",
    "importStyle": "dataTransformer",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 279,
    "kind": "get",
    "name": "internalFields",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.internalFields",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "data2model",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.data2model",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "pureRow",
    "memberof": "src/components/EditableTable/dataTransformer.js~dataTransformer",
    "static": true,
    "longname": "src/components/EditableTable/dataTransformer.js~dataTransformer.pureRow",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "name": "src/components/EditableTable/index.js",
    "content": "import React, { Component } from 'react';\n\nimport { Table } from 'antd';\nimport dataTransformer from './dataTransformer';\nimport columnTransformer from './columnsTransformer';\nimport ModalAdd from './ModalAdd';\n\nimport './index.less';\n\nclass EditableTable extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: dataTransformer.data2model(this.props.dataSource),\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            const dataSource = dataTransformer.data2model(nextProps.dataSource);\n            this.setState({\n                dataSource\n            });\n        }\n    }\n\n    setCellDataProp = (rowId, colId, name, value) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId][name] = value;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onHandleChange = (rowId, colId, newValue) => {\n        this.setCellDataProp(rowId, colId, 'value', newValue);\n    };\n\n    onSaveCell = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].__editMode = false;\n        dataSource[rowIndex][colId].__loading = true;\n        this.setState({\n            dataSource\n        });\n        if(typeof this.props.onChangeCell !== 'undefined') {\n            this.props.onChangeCell(rowId, colId, this.state.dataSource[rowIndex][colId].value);\n        }\n    };\n\n    onEditCancel = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].value = dataSource[rowIndex][colId].__oldValue;\n        dataSource[rowIndex][colId].__editMode = false;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onEditStart = (rowId, colId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex][colId].__oldValue = dataSource[rowIndex][colId].value;\n        dataSource[rowIndex][colId].__editMode = true;\n        this.setState({\n            dataSource\n        });\n    };\n\n    onSaveRow = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = false;\n        dataSource[rowIndex].__loading = true;\n        this.setState({\n            dataSource\n        });\n        if(typeof this.props.onChangeRow !== 'undefined') {\n            this.props.onChangeRow(rowId, dataTransformer.pureRow(dataSource[rowIndex]));\n        }\n    };\n\n    onEditRowStart = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = true;\n        for(const colId in dataSource[rowIndex]) {\n            if(dataSource[rowIndex].hasOwnProperty(colId) && colId !== '__editMode'\n                && colId !== 'key' && colId !== '__loading'\n            ) {\n                dataSource[rowIndex][colId].__oldValue = dataSource[rowIndex][colId].value;\n            }\n        }\n        this.setState({\n            dataSource\n        });\n    };\n\n    onEditRowCancel = (rowId) => {\n        const rowIndex = this._findRowIndex(rowId);\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowIndex].__editMode = false;\n        for(const colId in dataSource[rowIndex]) {\n            if(dataSource[rowIndex].hasOwnProperty(colId) && colId !== '__editMode'\n                && colId !== 'key' && colId !== '__loading'\n            ) {\n                dataSource[rowIndex][colId].value = dataSource[rowIndex][colId].__oldValue;\n            }\n        }\n        this.setState({\n            dataSource\n        });\n    };\n\n    onAddRow = (row) => {\n        this.props.onAddRow(row);\n    };\n\n    _findRowIndex(rowId) {\n        return this.state.dataSource.findIndex((element) => element.key === rowId);\n    }\n\n    render() {\n        return (\n            <div className={`editable-table ${this.props.className || ''}`}>\n                <ModalAdd buttonText=\"Dodaj monitor\" columns={this.props.columns} onAdd={this.onAddRow} />\n                <Table\n                    size=\"middle\" bordered={true} rowSelection={this.rowSelection} dataSource={this.state.dataSource}\n                    columns={columnTransformer(\n                        this.props.columns, this.onHandleChange, this.onSaveCell, this.onEditStart, this.onEditCancel,\n                        this.onSaveRow, this.onEditRowStart, this.onEditRowCancel, this.props.onDeleteRow\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nexport default EditableTable;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 283,
    "kind": "class",
    "name": "EditableTable",
    "memberof": "src/components/EditableTable/index.js",
    "static": true,
    "longname": "src/components/EditableTable/index.js~EditableTable",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/index.js",
    "importStyle": "EditableTable",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#state",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "setCellDataProp",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#setCellDataProp",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "onHandleChange",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onHandleChange",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "onSaveCell",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onSaveCell",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "onEditCancel",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditCancel",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "onEditStart",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditStart",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "onSaveRow",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onSaveRow",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "onEditRowStart",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditRowStart",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "onEditRowCancel",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onEditRowCancel",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "onAddRow",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#onAddRow",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "_findRowIndex",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#_findRowIndex",
    "access": "private",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "rowId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/index.js~EditableTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/index.js~EditableTable#render",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "src/components/EditableTable/usage/TableContainer.js",
    "content": "import React from 'react';\nimport EditableTable from '../index';\nimport {fakeColumns, fakeData} from './fakeData';\n\nclass TableContainer extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: fakeData\n        };\n    }\n\n    changeCell = (rowId, colId, value) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId][colId] = value;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeRow = (rowId, newColumn) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId] = newColumn;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    addRow = (row) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.push(row);\n        this.setState({\n            dataSource\n        });\n    };\n\n    deleteRow = (rowId) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.splice(rowId, 1);\n        this.setState({\n            dataSource\n        });\n    };\n\n    render() {\n        return (\n            <EditableTable\n                dataSource={this.state.dataSource} columns={fakeColumns} onChangeRow={this.changeRow}\n                onChangeCell={this.changeCell} onAddRow={this.addRow} onDeleteRow={this.deleteRow}\n            />\n        );\n    }\n}\n\nexport default TableContainer;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/usage/TableContainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "TableContainer",
    "memberof": "src/components/EditableTable/usage/TableContainer.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/usage/TableContainer.js",
    "importStyle": "TableContainer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "changeCell",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#changeCell",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "changeRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#changeRow",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "deleteRow",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#deleteRow",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/EditableTable/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/EditableTable/usage/TableContainer.js~TableContainer#render",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "src/components/EditableTable/usage/fakeData.js",
    "content": "export const fakeData = [\n    {\n        col1: '195.254.125.41',\n        col2: 'Wydział FiIS'\n    },\n    {\n        col1: '25.245.120.65',\n        col2: 'Katedra Informatyki'\n    },\n];\n\nexport const fakeColumns = [\n    {\n        name: 'Adres',\n        id: 'col1',\n        editable: true,\n        sortable: true,\n        width: '40%',\n    },\n    {\n        name: 'Opis',\n        id: 'col2',\n        editable: true,\n        sortable: true,\n        width: '40%',\n    },\n    {\n        name: 'Menu',\n        type: 'menu',\n        buttons: [\n            {\n                name: 'Edytuj',\n                type: 'edit',\n            },\n            {\n                name: 'Usuń',\n                type: 'delete',\n            },\n        ]\n    }\n];\n\n/*\nconst fakeModel = [\n    {\n        __editMode: false,\n        key: 1,\n        col1: { __editMode: false, __value: \"val1\" },\n        col2: { __editMode: true, __value: \"val2\", __oldValue: \"new value 2\" },\n    },\n    {\n        __editMode: false,\n        key: 2,\n        col1: { __editMode: false, __value: \"val3\" },\n        col2: { __editMode: true, __value: \"val4\", __oldValue: \"new value 4\" },\n    },\n];\n*/\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/EditableTable/usage/fakeData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "variable",
    "name": "fakeData",
    "memberof": "src/components/EditableTable/usage/fakeData.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/fakeData.js~fakeData",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/usage/fakeData.js",
    "importStyle": "{fakeData}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "fakeColumns",
    "memberof": "src/components/EditableTable/usage/fakeData.js",
    "static": true,
    "longname": "src/components/EditableTable/usage/fakeData.js~fakeColumns",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/EditableTable/usage/fakeData.js",
    "importStyle": "{fakeColumns}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Hostname/index.js",
    "content": "import React from 'react';\nimport { Button, Input, Icon } from 'antd';\n\nexport class Hostname extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        searchQuery: '',\n        filtered: false,\n        dataSource: this.props.dataSource\n    });\n\n    inputSearchChange = (searchQuery) => {\n        this.setState({\n            searchQuery\n        });\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource)\n            }, this.onSearch);\n        }\n    }\n\n    onSearch = () => {\n        const { searchQuery } = this.state;\n        this.setState({\n            filtered: !!searchQuery,\n            visible: false,\n            dataSource: this.applyFilters(this.props.dataSource)\n        });\n    };\n\n    applyFilters = (dataSource) => {\n        const { searchQuery } = this.state;\n        if(searchQuery === '') {\n            this.onClearSearch();\n            return dataSource;\n        }\n        const reg = new RegExp(searchQuery, 'gi');\n        return dataSource.map((host) => {\n            const match = host.hostname.match(reg);\n            if (!match) {\n                return null;\n            }\n            return {\n                ...host,\n                key: host.hostname,\n                displayName: (\n                    <span>\n                        {host.hostname.split(reg).map((text, i) => (\n                            i > 0 ? [<span key=\"1\" className=\"highlight\">{match[0]}</span>, text] : text\n                        ))}\n                    </span>\n                ),\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSearch = () => {\n        this.setState(this.getInitialState());\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'hostname') {\n                return {\n                    ...column,\n                    sorter: (a, b) => a.hostname.localeCompare(b.hostname),\n                    filterDropdown: (\n                        <div className=\"hostname-filter-search\">\n                            <Input\n                                ref={elem => this.hostnameSearchInput = elem}\n                                placeholder=\"Znajdź host\"\n                                value={this.state.searchQuery}\n                                onChange={(e) => this.inputSearchChange(e.target.value)}\n                                onPressEnter={this.onSearch}\n                            />\n                            <Button type=\"primary\" onClick={this.onSearch}>Szukaj</Button>\n                            {\n                                this.state.filtered && this.state.searchQuery !== '' ? <Button\n                                    type=\"default\" onClick={this.onClearSearch}\n                                >Wyczyść</Button> : null\n                            }\n                        </div>\n                    ),\n                    filterIcon: <Icon type=\"search\" style={{ color: this.state.filtered ? '#84e985' : '#aaa' }} />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        this.setState({\n                            visible\n                        }, () => {\n                            return this.hostnameSearchInput && this.hostnameSearchInput.focus();\n                        });\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/FilteredTable/Hostname/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "class",
    "name": "Hostname",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/FilteredTable/Hostname/index.js",
    "importStyle": "{Hostname}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 312,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#state",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "inputSearchChange",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#inputSearchChange",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "onSearch",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#onSearch",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "onClearSearch",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#onClearSearch",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Hostname/index.js~Hostname#render",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Metadata/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport MetadataFilter from '../../MetadataFilter';\n\nexport class Metadata extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        filtered: false,\n        type: '',\n        value: '',\n        dataSource: this.props.dataSource\n    });\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource, this.state.type, this.state.value)\n            });\n        }\n    }\n\n    onSelect = (type, value) => {\n        this.setState({\n            filtered: !!value,\n            visible: false,\n            type,\n            value,\n            dataSource: this.applyFilters(this.props.dataSource, type, value),\n        });\n    };\n\n    applyFilters = (dataSource, type, value) => {\n        if(typeof value === 'undefined' || value === '') {\n            this.onClearSelect();\n            return dataSource;\n        }\n        const reg = new RegExp(value, 'gi');\n        return dataSource.map((host) => {\n            const matchedIndex = host.metadata.findIndex(singleMetadata => (\n                singleMetadata.id === type && singleMetadata.value.match(reg)\n            ));\n            if (matchedIndex < 0) {\n                return null;\n            }\n            let newMetadata = host.metadata.slice();\n            newMetadata[matchedIndex] = {\n                ...newMetadata[matchedIndex],\n                name: <span className=\"highlight\">\n                    {newMetadata[matchedIndex].name}\n                </span>,\n                value: <span className=\"highlight\">\n                    {newMetadata[matchedIndex].value}\n                </span>\n            };\n            return {\n                ...host,\n                metadata: newMetadata\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSelect = () => {\n        this.setState(this.getInitialState());\n    };\n\n    onDismiss = () => {\n        if (this.state.visible) {\n            this.setState({ visible: false });\n        }\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'metadata') {\n                return {\n                    ...column,\n                    filterDropdown: <MetadataFilter\n                        metadata={this.props.metadata} filtered={this.state.filtered} onSelect={this.onSelect}\n                        onClear={this.onClearSelect} onDismiss={this.onDismiss}\n                    />,\n                    filterIcon: <Icon\n                        onClick={e => !this.state.visible && e.stopPropagation()} type=\"tag-o\"\n                        style={{ color: this.state.filtered ? '#84e985' : '#aaa' }}\n                    />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        if (visible) {\n                            this.setState({\n                                visible\n                            });\n                        }\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/FilteredTable/Metadata/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "class",
    "name": "Metadata",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/FilteredTable/Metadata/index.js",
    "importStyle": "{Metadata}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 324,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "onClearSelect",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onClearSelect",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "onDismiss",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#onDismiss",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metadata/index.js~Metadata#render",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "src/components/HostList/FilteredTable/Metrics/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport MetricFilter from '../../MetricFilter';\n\nexport class Metrics extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        visible: false,\n        filtered: false,\n        selected: [],\n        dataSource: this.props.dataSource\n    });\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props.dataSource !== nextProps.dataSource) {\n            this.setState({\n                dataSource: this.applyFilters(nextProps.dataSource, this.state.selected)\n            });\n        }\n    }\n\n    onSelect = (selected) => {\n        this.setState({\n            filtered: !!selected.length,\n            visible: false,\n            selected,\n            dataSource: this.applyFilters(this.props.dataSource, selected),\n        });\n    };\n\n    applyFilters = (dataSource, selected) => {\n        if(!selected.length) {\n            return dataSource;\n        }\n        return dataSource.map((host) => {\n            const matchedIndex = host.metrics.findIndex(metric => (\n                selected.some(oneSelected => oneSelected === metric.id)\n            ));\n            if (matchedIndex < 0) {\n                return null;\n            }\n            const newMetrics = host.metrics.slice();\n            newMetrics[matchedIndex].found = true;\n            return {\n                ...host,\n                metrics: newMetrics\n            };\n        }).filter(host => !!host);\n    };\n\n    onClearSelect = () => {\n        this.setState(this.getInitialState());\n    };\n\n    onDismiss = () => {\n        if (this.state.visible) {\n            this.setState({ visible: false });\n        }\n    };\n\n    renderChildren = (columns) => {\n        const { dataSource } = this.state;\n        return React.Children.map(this.props.children, (child) => {\n            // eslint-disable-next-line\n            const {selfProps, ...children} = this.props;\n            return React.cloneElement(child, {...selfProps, columns, dataSource});\n        });\n    };\n\n    render() {\n        const columns = this.props.columns.map(column => {\n            if(column.key === 'metrics') {\n                return {\n                    ...column,\n                    filterDropdown: <MetricFilter\n                        metrics={this.props.metrics} onSelect={this.onSelect}\n                        onClear={this.onClearSelect} onDismiss={this.onDismiss}\n                    />,\n                    filterIcon: <Icon\n                        onClick={e => !this.state.visible && e.stopPropagation()} type=\"tag-o\"\n                        style={{ color: this.state.filtered ? '#84e985' : '#aaa' }}\n                    />,\n                    filterDropdownVisible: this.state.visible,\n                    onFilterDropdownVisibleChange: (visible) => {\n                        if (visible) {\n                            this.setState({\n                                visible\n                            });\n                        }\n                    }\n                };\n            }\n            return column;\n        });\n        return <div>{this.renderChildren(columns)}</div>;\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/FilteredTable/Metrics/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "class",
    "name": "Metrics",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js",
    "static": true,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/FilteredTable/Metrics/index.js",
    "importStyle": "{Metrics}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 336,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "applyFilters",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#applyFilters",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "onClearSelect",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onClearSelect",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "onDismiss",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#onDismiss",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "name": "renderChildren",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#renderChildren",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/FilteredTable/Metrics/index.js~Metrics#render",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "src/components/HostList/MetadataCell/index.js",
    "content": "import React from 'react';\n\nimport { Collapse, List, Col} from 'antd';\nconst Panel = Collapse.Panel;\n\nconst MetadataCell = ({metadata}) => {\n    return (\n        <Collapse bordered={false}>\n            <Panel header={<span>{metadata.length} metadanych <em>(kliknij aby rozwinąć)</em></span>} key=\"1\">\n                <List\n                    dataSource={metadata}\n                    renderItem={item => (<List.Item>\n                        <Col span={12}><b>{item.name}</b></Col>\n                        <Col span={12}>{item.value}</Col>\n                    </List.Item>)}\n                />\n            </Panel>\n        </Collapse>\n    );\n};\n\nexport default MetadataCell;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetadataCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "variable",
    "name": "Panel",
    "memberof": "src/components/HostList/MetadataCell/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataCell/index.js~Panel",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/HostList/MetadataCell/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "MetadataCell",
    "memberof": "src/components/HostList/MetadataCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetadataCell/index.js~MetadataCell",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetadataCell/index.js",
    "importStyle": "MetadataCell",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metadata\": *}"
        ],
        "defaultRaw": {
          "metadata": null
        },
        "defaultValue": "{\"metadata\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "file",
    "name": "src/components/HostList/MetadataFilter/index.js",
    "content": "import React from 'react';\nimport { Select, Input, Button } from 'antd';\nconst { Option } = Select;\n\nclass MetadataFilter extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: '',\n            value: ''\n        };\n    }\n\n    onChangeType = (type) => {\n        this.setState({\n            type\n        });\n    };\n\n    onChangeValue = (value) => {\n        this.setState({\n            value\n        });\n    };\n\n    onClear = () => {\n        this.setState({\n            type: null,\n            value: ''\n        });\n        this.props.onClear();\n    };\n\n    onSelect = () => {\n        this.props.onSelect(this.state.type, this.state.value);\n    };\n\n    componentDidMount() {\n        window.addEventListener('click', this.props.onDismiss);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.props.onDismiss);\n    }\n\n    render() {\n        const { metadata } = this.props;\n        return (\n            <div className=\"metadata-filter-select\" onClick={e => e.stopPropagation()}>\n                <Select\n                    showSearch={true}\n                    placeholder=\"Wybierz metadane\"\n                    optionFilterProp=\"children\"\n                    onChange={this.onChangeType}\n                    value={this.state.type}\n                    filterOption={(input, option) => (\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    )}\n                >\n                    {Object.entries(metadata).map(([id, singleMetadata]) => (\n                        <Option key={id}>{singleMetadata.name}</Option>\n                    ))}\n                </Select>\n                <Input\n                    onChange={(e) => this.onChangeValue(e.target.value)}\n                    onPressEnter={this.onSelect} placeholder=\"Podaj szukaną wartość\"\n                />\n                <Button type=\"primary\" onClick={this.onSelect}>Wybierz</Button>\n                {\n                    this.props.filtered ? <Button type=\"default\" onClick={this.onClear}>Wyczyść</Button> : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MetadataFilter;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetadataFilter/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 350,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/HostList/MetadataFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataFilter/index.js~Option",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/HostList/MetadataFilter/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "MetadataFilter",
    "memberof": "src/components/HostList/MetadataFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetadataFilter/index.js",
    "importStyle": "MetadataFilter",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 352,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": *, \"value\": *}"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "onChangeType",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onChangeType",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "onChangeValue",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onChangeValue",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/MetadataFilter/index.js~MetadataFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetadataFilter/index.js~MetadataFilter#render",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "content": "import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst MetricInfo = ({metric}) => (\n    <div>\n        {\n            metric.parent_id !== null ? <div>\n                <Row>\n                    <Col span={12}>Opis:</Col>\n                    <Col span={12}>{metric.description}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Metryka bazowa:</Col>\n                    <Col span={12}>{metric.parent_id}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Szer. okna:</Col>\n                    <Col span={12}>{metric.moving_window_duration}</Col>\n                </Row>\n                <Row>\n                    <Col span={12}>Częstotliwość:</Col>\n                    <Col span={12}>{metric.interval}</Col>\n                </Row>\n            </div> : metric.description\n        }\n    </div>\n);\n\nexport default MetricInfo;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "MetricInfo",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js~MetricInfo",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetricCell/SingleMetric/MetricInfo/index.js",
    "importStyle": "MetricInfo",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"metric\": *}"
        ],
        "defaultRaw": {
          "metric": null
        },
        "defaultValue": "{\"metric\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 363,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "content": "import React from 'react';\nimport { Popconfirm, Icon } from 'antd';\n\nconst RemoveMetric = ({onConfirm}) => (\n    <Popconfirm\n        placement=\"top\" title=\"Czy chcesz usunąć tę metrykę?\" onConfirm={onConfirm}\n        onCancel={()=>null} okText=\"Tak\" cancelText=\"Nie\"\n    >\n        <Icon type=\"cross\" />\n    </Popconfirm>\n);\n\nexport default RemoveMetric;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "RemoveMetric",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js~RemoveMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetricCell/SingleMetric/RemoveMetric/index.js",
    "importStyle": "RemoveMetric",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onConfirm\": *}"
        ],
        "defaultRaw": {
          "onConfirm": null
        },
        "defaultValue": "{\"onConfirm\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/SingleMetric/index.js",
    "content": "import React from 'react';\nimport { Tooltip, Tag } from 'antd';\n\nimport MetricInfo from './MetricInfo';\nimport RemoveMetric from './RemoveMetric';\n\nconst SingleMetric = ({hostname, metric, onRemove, found}) => {\n    const removable = metric.parent_id !== null;\n    return (<Tooltip placement=\"bottom\" title={<MetricInfo metric={metric}/>}>\n        <Tag\n            className=\"single-metric\"\n            color={found ? 'red' : (metric.parent_id === null ? '#87d068' : '#2db7f5')}\n        >\n            {metric.id}\n            {removable && metric.removable ? <RemoveMetric onConfirm={(e) => {\n                e.preventDefault();\n                onRemove(hostname, metric.id);\n            }}/> : null}\n        </Tag>\n    </Tooltip>);\n};\n\nexport default SingleMetric;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetricCell/SingleMetric/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "SingleMetric",
    "memberof": "src/components/HostList/MetricCell/SingleMetric/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/SingleMetric/index.js~SingleMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetricCell/SingleMetric/index.js",
    "importStyle": "SingleMetric",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"hostname\": *, \"metric\": *, \"onRemove\": *, \"found\": *}"
        ],
        "defaultRaw": {
          "hostname": null,
          "metric": null,
          "onRemove": null,
          "found": null
        },
        "defaultValue": "{\"hostname\":null,\"metric\":null,\"onRemove\":null,\"found\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "src/components/HostList/MetricCell/index.js",
    "content": "import React from 'react';\n\nimport { Tag, Icon } from 'antd';\nimport SingleMetric from './SingleMetric';\n\n/**\n * This component displays single metric cell in host list table\n * @reactProps {!object} host - data of single host\n * @reactProps {!function} onShowModal - method executed when \"new complex metric\" modal should be shown\n * @reactProps {!function} onRemove - method executed when complex metric should be removed\n */\nconst MetricCell = ({host, onShowModal, onRemove}) => {\n    const invalidatedClass = host.metricsInvalidated === true ? ' metrics-invalidated' : '';\n    return (\n        <div className={`ant-tag-wrapper${invalidatedClass}`}>\n            {\n                host.metrics.map(metric => <SingleMetric\n                    hostname={host.hostname} key={metric.id} metric={metric}\n                    onRemove={onRemove} found={host.found}\n                />)\n            }\n            <Tag\n                onClick={() => onShowModal(host.hostname)}\n                style={{ background: '#fff', borderStyle: 'dashed' }}\n            >\n                <Icon type=\"plus\" /> Dodaj metrykę złożoną\n            </Tag>\n        </div>\n    );\n};\n\nexport default MetricCell;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetricCell/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "function",
    "name": "MetricCell",
    "memberof": "src/components/HostList/MetricCell/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/MetricCell/index.js~MetricCell",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetricCell/index.js",
    "importStyle": "MetricCell",
    "description": "This component displays single metric cell in host list table",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@reactProps",
        "tagValue": "{!object} host - data of single host"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{!function} onShowModal - method executed when \"new complex metric\" modal should be shown"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{!function} onRemove - method executed when complex metric should be removed"
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"host\": *, \"onShowModal\": *, \"onRemove\": *}"
        ],
        "defaultRaw": {
          "host": null,
          "onShowModal": null,
          "onRemove": null
        },
        "defaultValue": "{\"host\":null,\"onShowModal\":null,\"onRemove\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "file",
    "name": "src/components/HostList/MetricFilter/index.js",
    "content": "import React from 'react';\nimport { Select, Button } from 'antd';\nconst { Option, OptGroup } = Select;\n\nclass MetricFilter extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: []\n        };\n    }\n\n    onChangeSelect = (selected) => {\n        this.setState({\n            selected\n        });\n    };\n\n    onClear = () => {\n        this.setState({\n            selected: []\n        });\n        this.props.onClear();\n    };\n\n    onSelect = () => {\n        this.props.onSelect(this.state.selected);\n    };\n\n    componentDidMount() {\n        window.addEventListener('click', this.props.onDismiss);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.props.onDismiss);\n    }\n\n    render() {\n        const { metrics } = this.props;\n        return (\n            <div className=\"metric-filter-select\" onClick={e => e.stopPropagation()}>\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Wybierz metryki\"\n                    onChange={this.onChangeSelect}\n                    value={this.state.selected}\n                >\n                    <OptGroup label=\"bazowe\">\n                        {Object.values(metrics.base).map(metric => <Option key={metric}>{metric}</Option>)}\n                    </OptGroup>\n                    <OptGroup label=\"złożone\">\n                        {Object.values(metrics.complex).map(metric => <Option key={metric}>{metric}</Option>)}\n                    </OptGroup>\n                </Select>\n                <Button type=\"primary\" onClick={this.onSelect}>Wybierz</Button>\n                {\n                    this.state.selected.length > 0 ? <Button\n                        type=\"default\" onClick={this.onClear}\n                    >Wyczyść</Button> : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MetricFilter;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/MetricFilter/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "name": "Option",
    "memberof": "src/components/HostList/MetricFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetricFilter/index.js~Option",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/HostList/MetricFilter/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "class",
    "name": "MetricFilter",
    "memberof": "src/components/HostList/MetricFilter/index.js",
    "static": true,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/MetricFilter/index.js",
    "importStyle": "MetricFilter",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 372,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 373,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"selected\": *}"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "onChangeSelect",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onChangeSelect",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "member",
    "name": "onSelect",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#onSelect",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/MetricFilter/index.js~MetricFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/MetricFilter/index.js~MetricFilter#render",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "content": "import React from 'react';\nimport { Icon, Tooltip } from 'antd';\n\nexport class Input extends React.PureComponent {\n    render() {\n        const {id, value, placeholder, disabled, help, icon, onClear, onChange, children} = this.props;\n        let input = null;\n        return React.Children.map(children, (child) => (\n            React.cloneElement(child, {\n                placeholder,\n                disabled,\n                value,\n                prefix: typeof icon !== 'undefined' ? <Icon type={icon} style={{color: 'rgba(0,0,0,.25)'}}/> : null,\n                suffix: value && !disabled ? <Icon type=\"close-circle\" onClick={() => {\n                    onClear(id);\n                    input.focus();\n                }}/> : null,\n                onChange: !disabled ? (e) => onChange(id, typeof e === 'object' ? e.target.value : e) : () => null,\n                ref: node => input = node,\n                addonAfter: help ? <Tooltip title={help}><Icon type=\"question-circle-o\"/></Tooltip> : ''\n            })\n        ));\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "class",
    "name": "Input",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js",
    "importStyle": "{Input}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Input/index.js~Input#render",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "content": "import React from 'react';\nimport { Select as OriginalSelect } from 'antd';\n\nexport class Select extends React.PureComponent {\n    render() {\n        const {\n            id, searchable, disabled, options,\n            onChange, value, myValue, ...rest // eslint-disable-line no-unused-vars\n        } = this.props;\n        return (\n            <OriginalSelect\n                {...rest}\n                value={myValue || undefined}\n                showSearch={searchable}\n                disabled={disabled}\n                onChange={!disabled ? (v) => onChange(id, v) : () => null}\n            >\n                {\n                    options.map(option => {\n                        return <OriginalSelect.Option\n                            key={option.value} value={option.value}\n                        >{option.name}</OriginalSelect.Option>;\n                    })\n                }\n            </OriginalSelect>\n        );\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 384,
    "kind": "class",
    "name": "Select",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js",
    "importStyle": "{Select}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/Decorated/Select/index.js~Select#render",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "content": "import React from 'react';\nimport { Form } from 'antd';\n\nconst FormItem = ({ label, children }) => (\n    <Form.Item label={label}>\n        {React.Children.map(children, (child) => (\n            React.cloneElement(child, { placeholder: label })\n        ))}\n    </Form.Item>\n);\n\nexport default FormItem;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "FormItem",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js~FormItem",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/FormItem/index.js",
    "importStyle": "FormItem",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"label\": *, \"children\": *}"
        ],
        "defaultRaw": {
          "label": null,
          "children": null
        },
        "defaultValue": "{\"label\":null,\"children\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "content": "import React from 'react';\n\nimport { Form, Input, InputNumber } from 'antd';\nimport FormItem from './FormItem';\nimport { Input as DecoratedInput } from './Decorated/Input';\nimport { Select as DecoratedSelect } from './Decorated/Select';\n\nconst { TextArea } = Input;\n\nconst MetricForm = ({form, host, metrics, newMetric, onChange, onClear, setFormRef}) => {\n    setFormRef(form);\n    if(host !== null) {\n        return(\n            <Form className=\"metric-add-form\">\n                <FormItem label=\"Nazwa hosta\">\n                    <DecoratedInput\n                        id=\"hostname\" disabled={true} icon=\"desktop\"\n                        value={host.hostname} help=\"Adres hosta\"\n                    >\n                        <Input />\n                    </DecoratedInput>\n                </FormItem>\n                <FormItem label=\"Metryka bazowa\">\n                    {form.getFieldDecorator('parent_id', {\n                        rules: [{ required: true, message: 'Metryka bazowa musi zostać wybrana' }],\n                    })(\n                        <DecoratedSelect\n                            id=\"parent_id\" icon=\"bulb\" help=\"Bazowa metryka dla obecnie tworzonej\"\n                            options={metrics} myValue={newMetric.parent_id}\n                            onChange={onChange} onClear={onClear}\n                        />\n                    )}\n                </FormItem>\n                <FormItem label=\"Opis metryki\">\n                    {form.getFieldDecorator('description', {\n                        rules: [{ required: true, message: 'Proszę podać opis metryki' }],\n                    })(\n                        <TextArea id=\"description\" onChange={(e) => onChange('description', e.target.value)} />\n                    )}\n                </FormItem>\n                <FormItem label=\"Szerokość okna czasowego\">\n                    {form.getFieldDecorator('moving_window_duration', {\n                        rules: [{ required: true, message: 'Proszę podać szerokość okna czasowego' }],\n                    })(\n                        <InputNumber\n                            id=\"moving_window_duration\" help=\"Szerokość okna czasowego\"\n                            onChange={(value) => onChange('moving_window_duration', value)}\n                            onClear={onClear} min={1}\n                        />\n                    )}\n                </FormItem>\n                <FormItem label=\"Częstotliwość\">\n                    {form.getFieldDecorator('interval', {\n                        rules: [{ required: true, message: 'Proszę podać częstotliwość' }],\n                    })(\n                        <InputNumber\n                            id=\"interval\" help=\"Częstotliwość\"\n                            onChange={(value) => onChange('interval', value)}\n                            onClear={onClear} min={1}\n                        />\n                    )}\n                </FormItem>\n            </Form>\n        );\n    } else {\n        return null;\n    }\n};\n\nconst WrappedMetricForm = Form.create()(MetricForm);\nexport default WrappedMetricForm;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "TextArea",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~TextArea",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 390,
    "kind": "function",
    "name": "MetricForm",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~MetricForm",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"host\": *, \"metrics\": *, \"newMetric\": *, \"onChange\": *, \"onClear\": *, \"setFormRef\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "host": null,
          "metrics": null,
          "newMetric": null,
          "onChange": null,
          "onClear": null,
          "setFormRef": null
        },
        "defaultValue": "{\"form\":null,\"host\":null,\"metrics\":null,\"newMetric\":null,\"onChange\":null,\"onClear\":null,\"setFormRef\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 391,
    "kind": "variable",
    "name": "WrappedMetricForm",
    "memberof": "src/components/HostList/NewMetricModal/MetricForm/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/MetricForm/index.js~WrappedMetricForm",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/MetricForm/index.js",
    "importStyle": "WrappedMetricForm",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "src/components/HostList/NewMetricModal/index.js",
    "content": "import React from 'react';\nimport { Modal } from 'antd';\n\nimport MetricForm from './MetricForm';\n\nclass NewMetricModal extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: true,\n            loading: false,\n            newMetric: this.getNewMetricValues(),\n            baseMetrics: this.getBaseMetrics(props)\n        };\n        this.form = null;\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props.host !== nextProps.host) {\n            this.setState({\n                baseMetrics: this.getBaseMetrics(nextProps),\n                newMetric: this.getNewMetricValues()\n            });\n        }\n    }\n\n    getNewMetricValues() {\n        return {\n            description: '',\n            parent_id: null,\n            moving_window_duration: '',\n            interval: ''\n        };\n    }\n\n    getBaseMetrics = (props) => {\n        let baseMetrics = [];\n        if(props.host !== null) {\n            const { metrics } = props.host;\n            if(typeof metrics !== 'undefined') {\n                metrics.forEach(metric => {\n                    if(metric.parent_id === null) {\n                        baseMetrics.push({\n                            name: `${metric.id} (${metric.description})`,\n                            value: metric.id\n                        });\n                    }\n                });\n            }\n        }\n        return baseMetrics;\n    };\n\n    onChange = (key, value) => {\n        let newMetric = Object.assign({}, this.state.newMetric);\n        newMetric[key] = value;\n        this.setState({\n            newMetric\n        });\n    };\n\n    onClear = (key) => {\n        let newMetric = Object.assign({}, this.state.newMetric);\n        newMetric[key] = '';\n        this.setState({\n            newMetric\n        });\n    };\n\n    clearModal = () => {\n        this.setState({\n            newMetric: this.getNewMetricValues(),\n        });\n        this.props.onClose();\n    };\n\n    addMetric = () => {\n        if(this.form !== null) {\n            this.form.validateFields(err => {\n                if (!err) {\n                    this.props.onAddMetric(this.props.host.hostname, this.state.newMetric);\n                    this.setState({\n                        loading: true\n                    });\n                    this.form.setFieldsValue(this.getNewMetricValues());\n                }\n            });\n        }\n    };\n\n    setFormRef = (form) => {\n        this.form = form;\n    };\n\n    render() {\n        const {host} = this.props;\n        return (\n            <Modal\n                title=\"Nowa metryka złożona\"\n                visible={this.props.host !== null}\n                onOk={this.addMetric}\n                onCancel={this.clearModal}\n                okText=\"Dodaj metrykę\"\n                cancelText=\"Anuluj\"\n                confirmLoading={this.state.loading}\n            >\n                <MetricForm\n                    host={host} metrics={this.state.baseMetrics} newMetric={this.state.newMetric}\n                    setFormRef={this.setFormRef} onChange={this.onChange} onClear={this.onClear}\n                />\n            </Modal>\n        );\n    }\n}\n\nexport default NewMetricModal;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/NewMetricModal/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "class",
    "name": "NewMetricModal",
    "memberof": "src/components/HostList/NewMetricModal/index.js",
    "static": true,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/NewMetricModal/index.js",
    "importStyle": "NewMetricModal",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 394,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"validated\": boolean, \"loading\": *, \"newMetric\": *, \"baseMetrics\": *}"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "form",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#form",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "getNewMetricValues",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#getNewMetricValues",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"description\": *, \"parent_id\": *, \"moving_window_duration\": *, \"interval\": *}"
      ]
    }
  },
  {
    "__docId__": 399,
    "kind": "member",
    "name": "getBaseMetrics",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#getBaseMetrics",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 400,
    "kind": "member",
    "name": "onChange",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#onChange",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "onClear",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#onClear",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "clearModal",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#clearModal",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "member",
    "name": "addMetric",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#addMetric",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "member",
    "name": "setFormRef",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#setFormRef",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/NewMetricModal/index.js~NewMetricModal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/NewMetricModal/index.js~NewMetricModal#render",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/components/HostList/index.js",
    "content": "import React from 'react';\nimport { Table } from 'antd';\nimport NewMetricModal from './NewMetricModal';\nimport MetadataCell from './MetadataCell';\nimport MetricCell from './MetricCell';\nimport MonitorIcon from '../MonitorIcon';\n\nimport {Hostname as HostnameFiltered} from './FilteredTable/Hostname';\nimport {Metrics as MetricsFiltered} from './FilteredTable/Metrics';\nimport {Metadata as MetadataFiltered} from './FilteredTable/Metadata';\n\nimport './index.less';\n\nclass HostList extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        hostToAddMetric: null\n    });\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(this.props !== nextProps) {\n            this.setState(this.getInitialState());\n        }\n    }\n\n    showModal = (hostname) => {\n        const hostToAddMetric = this.props.hosts.find(host => host.hostname === hostname);\n        if(typeof hostToAddMetric !== 'undefined') {\n            this.setState({\n                hostToAddMetric\n            });\n        }\n    };\n\n    closeModal = () => {\n        this.setState({\n            hostToAddMetric: null\n        });\n    };\n\n    allMetadata = (hosts) => {\n        const metadata = {};\n        hosts.forEach((host) => {\n            host.metadata.forEach((singleMetadata) => {\n                metadata[singleMetadata.id] = singleMetadata;\n            });\n        });\n        return metadata;\n    };\n\n    allMetrics = (hosts) => {\n        const base = {}, complex = {};\n        hosts.forEach((host) => {\n            host.metrics.forEach((metric) => {\n                if(metric.parent_id === null) {\n                    base[metric.id] = metric.id;\n                } else {\n                    complex[metric.id] = metric.id;\n                }\n            });\n        });\n        return {\n            base,\n            complex\n        };\n    };\n\n    render() {\n        const columns = [{\n            title: 'Host',\n            dataIndex: 'displayName',\n            key: 'hostname',\n            width: '26%',\n            render: (hostname, host) => <span><MonitorIcon>{host.monitor}</MonitorIcon> {hostname}</span>\n        }, {\n            title: 'Metadane',\n            dataIndex: 'metadata',\n            key: 'metadata',\n            width: '37%',\n            render: (metadata) => <MetadataCell metadata={metadata}/>,\n        }, {\n            title: 'Metryki',\n            dataIndex: 'metrics',\n            key: 'metrics',\n            width: '37%',\n            render: (metrics, host) => <MetricCell\n                onShowModal={this.showModal} onRemove={this.props.onRemoveMetric} host={host}\n            />,\n        }];\n\n        const hosts = this.props.hosts.map(host => ({\n            ...host,\n            key: host.hostname,\n            displayName: host.hostname\n        }));\n\n        return (\n            <div className=\"host-list\">\n                <NewMetricModal\n                    host={this.state.hostToAddMetric} onAddMetric={this.props.onAddMetric} onClose={this.closeModal}\n                />\n                <HostnameFiltered dataSource={hosts} columns={columns}>\n                    <MetricsFiltered metrics={this.allMetrics(this.props.hosts)}>\n                        <MetadataFiltered metadata={this.allMetadata(this.props.hosts)}>\n                            <Table size=\"middle\" bordered={true} />\n                        </MetadataFiltered>\n                    </MetricsFiltered>\n                </HostnameFiltered>\n            </div>\n        );\n    }\n}\n\nexport default HostList;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "HostList",
    "memberof": "src/components/HostList/index.js",
    "static": true,
    "longname": "src/components/HostList/index.js~HostList",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/index.js",
    "importStyle": "HostList",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#state",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "getInitialState",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#getInitialState",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "UNSAFE_componentWillReceiveProps",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#UNSAFE_componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 413,
    "kind": "member",
    "name": "showModal",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#showModal",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "closeModal",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#closeModal",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "allMetadata",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#allMetadata",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "allMetrics",
    "memberof": "src/components/HostList/index.js~HostList",
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#allMetrics",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/index.js~HostList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/index.js~HostList#render",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "file",
    "name": "src/components/HostList/usage/TableContainer.js",
    "content": "import React from 'react';\nimport HostList from '../index';\nimport {fakeData} from './fakeData';\n\nclass TableContainer extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: fakeData\n        };\n    }\n\n    addMetric = (hostname, metric) => {\n        const dataSource = this.state.dataSource.slice().map(data => {\n            if(data.hostname === hostname) {\n                metric.id = Math.floor(Math.random()*1000);\n                data.metrics.push(metric);\n            }\n            return data;\n        });\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    removeMetric = (hostname, metric_id) => {\n        const dataSource = this.state.dataSource.slice().map(data => {\n            if(data.hostname === hostname) {\n                const foundIndex = data.metrics.findIndex(metric => metric.id === metric_id);\n                if(foundIndex >= 0) {\n                    data.metrics.splice(foundIndex, 1);\n                }\n            }\n            return data;\n        });\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeCell = (rowId, colId, value) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId][colId] = value;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    changeRow = (rowId, newColumn) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource[rowId] = newColumn;\n        setTimeout(() => {\n            this.setState({\n                dataSource\n            });\n        }, 3000);\n    };\n\n    addRow = (row) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.push(row);\n        this.setState({\n            dataSource\n        });\n    };\n\n    deleteRow = (rowId) => {\n        let dataSource = this.state.dataSource.slice();\n        dataSource.splice(rowId, 1);\n        this.setState({\n            dataSource\n        });\n    };\n\n    render() {\n        return (\n            <HostList hosts={fakeData} onAddMetric={this.addMetric} onRemoveMetric={this.removeMetric}/>\n        );\n    }\n}\n\nexport default TableContainer;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/usage/TableContainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 419,
    "kind": "class",
    "name": "TableContainer",
    "memberof": "src/components/HostList/usage/TableContainer.js",
    "static": true,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/usage/TableContainer.js",
    "importStyle": "TableContainer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 420,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 421,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#state",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"dataSource\": *}"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "member",
    "name": "addMetric",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#addMetric",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "removeMetric",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#removeMetric",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "member",
    "name": "changeCell",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#changeCell",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "member",
    "name": "changeRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#changeRow",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "member",
    "name": "addRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#addRow",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 427,
    "kind": "member",
    "name": "deleteRow",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#deleteRow",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/HostList/usage/TableContainer.js~TableContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/HostList/usage/TableContainer.js~TableContainer#render",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "src/components/HostList/usage/fakeData.js",
    "content": "export const fakeData = [\n    {\n        hostname: 'www.host1.fis.pl',\n        metadata: [\n            {\n                id: 'OS',\n                name: 'Os Version',\n                value: 'Ubuntu 12.2'\n            },\n            {\n                id: 'MAX_RAM',\n                name: 'Max RAM',\n                value: '12 GB'\n            }\n        ],\n        metrics: [\n            {\n                id: 'CPU',\n                description: 'CPU usage',\n                parent_id: null,\n                unit: '%',\n                removable: false\n            },{\n                id: 'RAM',\n                description: 'RAM usage',\n                parent_id: null,\n                unit: 'Mb',\n                removable: false\n            }, {\n                id: 'ADV_1',\n                description: 'Taka sobie metryka złożona',\n                parent_id: 'CPU',\n                unit: '%',\n                moving_window_duration: 50,\n                interval: 1,\n                removable: true\n            }, {\n                id: 'RAM_ADV5',\n                description: 'Inna metryka złożona (RAM)',\n                parent_id: 'RAM',\n                unit: 'Mb',\n                moving_window_duration: 21,\n                interval: 6,\n                removable: false\n            }\n        ]\n    },\n    {\n        hostname: 'www.host2.fis.pl',\n        metadata: [\n            {\n                id: 'OS',\n                name: 'Os Version',\n                value: 'Ubuntu 12.2'\n            }, {\n                id: 'MAX_RAM',\n                name: 'Max RAM',\n                value: '12 GB'\n            }, {\n                id: 'DISC_USG',\n                name: 'Disc usage',\n                value: '38%'\n            }\n        ],\n        metrics: [\n            {\n                id: 'CPU',\n                description: 'CPU usage',\n                parent_id: null,\n                unit: '%',\n                removable: false\n            }, {\n                id: 'ADV_1',\n                description: 'Taka sobie metryka złożona',\n                parent_id: 'CPU',\n                unit: '%',\n                moving_window_duration: 50,\n                interval: 1,\n                removable: true\n            }\n        ]\n    }\n];\n\nexport const fakeColumns = [\n\n];\n\n/*\nconst fakeModel = [\n    {\n        __editMode: false,\n        key: 1,\n        col1: { __editMode: false, __value: \"val1\" },\n        col2: { __editMode: true, __value: \"val2\", __oldValue: \"new value 2\" },\n    },\n    {\n        __editMode: false,\n        key: 2,\n        col1: { __editMode: false, __value: \"val3\" },\n        col2: { __editMode: true, __value: \"val4\", __oldValue: \"new value 4\" },\n    },\n];\n*/\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/HostList/usage/fakeData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "fakeData",
    "memberof": "src/components/HostList/usage/fakeData.js",
    "static": true,
    "longname": "src/components/HostList/usage/fakeData.js~fakeData",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/usage/fakeData.js",
    "importStyle": "{fakeData}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "name": "fakeColumns",
    "memberof": "src/components/HostList/usage/fakeData.js",
    "static": true,
    "longname": "src/components/HostList/usage/fakeData.js~fakeColumns",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/HostList/usage/fakeData.js",
    "importStyle": "{fakeColumns}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "file",
    "name": "src/components/LoginForm/index.js",
    "content": "import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport './index.less';\n\nconst FormItem = Form.Item;\n\nconst LoginForm = ({ form, indeterminate, signIn }) => (\n    <Form onSubmit={e => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                signIn(values);\n            }\n        });\n    }} className={`login-form ${indeterminate ? 'indeterminate' : ''}`}>\n        <FormItem>\n            {form.getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Nazwa użytkownika musi zostać podana' }],\n            })(\n                <Input prefix={\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                } placeholder=\"Nazwa użytkownika\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Hasło musi zostać podane' }],\n            })(\n                <Input prefix={\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                } type=\"password\" placeholder=\"Hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n            })(\n                <Checkbox>Zapamiętaj mnie</Checkbox>\n            )}\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Zaloguj się\n            </Button>\n        </FormItem>\n    </Form>\n);\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\nexport default WrappedLoginForm;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/LoginForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "name": "FormItem",
    "memberof": "src/components/LoginForm/index.js",
    "static": true,
    "longname": "src/components/LoginForm/index.js~FormItem",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 434,
    "kind": "function",
    "name": "LoginForm",
    "memberof": "src/components/LoginForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/LoginForm/index.js~LoginForm",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"indeterminate\": *, \"signIn\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "indeterminate": null,
          "signIn": null
        },
        "defaultValue": "{\"form\":null,\"indeterminate\":null,\"signIn\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "name": "WrappedLoginForm",
    "memberof": "src/components/LoginForm/index.js",
    "static": true,
    "longname": "src/components/LoginForm/index.js~WrappedLoginForm",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/LoginForm/index.js",
    "importStyle": "WrappedLoginForm",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "src/components/MonitorIcon/index.js",
    "content": "import React from 'react';\nimport { Icon, Tooltip } from 'antd';\nimport strToColor from '../../utils/strToColor';\nimport './index.less';\n\nconst MonitorIcon = ({ children }) => (\n    <Tooltip title={children}>\n        <Icon className=\"monitor-icon\" type=\"database\" style={{ color: strToColor(children) }} />\n    </Tooltip>\n);\n\nexport default MonitorIcon;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/MonitorIcon/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "MonitorIcon",
    "memberof": "src/components/MonitorIcon/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/MonitorIcon/index.js~MonitorIcon",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/MonitorIcon/index.js",
    "importStyle": "MonitorIcon",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"children\": *}"
        ],
        "defaultRaw": {
          "children": null
        },
        "defaultValue": "{\"children\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 438,
    "kind": "file",
    "name": "src/components/MonitorsTable/index.js",
    "content": "import React from 'react';\nimport EditableTable from '../EditableTable';\nimport MonitorIcon from '../MonitorIcon';\nimport './index.less';\n\nconst columns = [\n    {\n        name: 'Adres',\n        id: 'address',\n        editable: true,\n        sortable: true,\n        width: '30%',\n        required: true,\n        prefixRender: field => <MonitorIcon>{field.value}</MonitorIcon> // eslint-disable-line react/display-name\n    },\n    {\n        name: 'Opis',\n        id: 'description',\n        editable: true,\n        sortable: true,\n        required: true,\n        width: '50%',\n    },\n    {\n        name: 'Menu',\n        type: 'menu',\n        buttons: [\n            {\n                name: 'Edytuj',\n                type: 'edit',\n            },\n            {\n                name: 'Usuń',\n                type: 'delete',\n            },\n        ]\n    }\n];\n\nconst MonitorsTable = ({ changeMonitorAddress, changeMonitorDescription, addMonitor, removeMonitor, ...props }) => (\n    <EditableTable\n        className=\"monitors-table\"\n        columns={columns}\n        onChangeCell={(rowId, colId, value) => {\n            const address = props.dataSource[rowId].address;\n            if (colId === 'address') {\n                changeMonitorAddress(address, value);\n            }\n            else if (colId === 'description') {\n                changeMonitorDescription(address, value);\n            }\n        }}\n        onChangeRow={(rowId, rowData) => {\n            const address = props.dataSource[rowId].address;\n            changeMonitorDescription(address, rowData.description);\n            changeMonitorAddress(address, rowData.address);\n        }}\n        onAddRow={addMonitor}\n        onDeleteRow={(rowId) => {\n            const address = props.dataSource[rowId].address;\n            removeMonitor(address);\n        }}\n        {...props}\n    />\n);\n\nexport default MonitorsTable;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/MonitorsTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 439,
    "kind": "variable",
    "name": "columns",
    "memberof": "src/components/MonitorsTable/index.js",
    "static": true,
    "longname": "src/components/MonitorsTable/index.js~columns",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 440,
    "kind": "function",
    "name": "MonitorsTable",
    "memberof": "src/components/MonitorsTable/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/MonitorsTable/index.js~MonitorsTable",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/MonitorsTable/index.js",
    "importStyle": "MonitorsTable",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"changeMonitorAddress\": *, \"changeMonitorDescription\": *, \"addMonitor\": *, \"removeMonitor\": *, ...props: Object}"
        ],
        "defaultRaw": {
          "changeMonitorAddress": null,
          "changeMonitorDescription": null,
          "addMonitor": null,
          "removeMonitor": null,
          "props": {}
        },
        "defaultValue": "{\"changeMonitorAddress\":null,\"changeMonitorDescription\":null,\"addMonitor\":null,\"removeMonitor\":null,\"props\":{}}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/components/NoCharts/index.js",
    "content": "import React from 'react';\nimport { Icon } from 'antd';\nimport './index.less';\n\nconst NoCharts = () => (\n    <div className=\"no-charts\">\n        <div className=\"no-charts-inner\">\n            <Icon className=\"no-charts-icon\" type=\"line-chart\" />\n            <p>Brak wykresów</p>\n        </div>\n    </div>\n);\n\nexport default NoCharts;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/NoCharts/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "function",
    "name": "NoCharts",
    "memberof": "src/components/NoCharts/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/NoCharts/index.js~NoCharts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/NoCharts/index.js",
    "importStyle": "NoCharts",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "src/components/Notification/index.js",
    "content": "import {notification} from 'antd';\n\n/*\n    Example:\n\n    import Notification from \"/components/Notification\";\n\n    Notification.error(\"Błędny login lub hasło\");\n    Notification.success(\"Metryka zaawansowana została dodana\");\n */\n\nexport default class Notification\n{\n    static success(description) {\n        notification.success({\n            message: 'Sukces',\n            placement: 'bottomLeft',\n            duration: 3,\n            description\n        });\n    }\n\n    static info(description) {\n        notification.info({\n            message: 'Informacja',\n            placement: 'bottomLeft',\n            duration: 3,\n            description\n        });\n    }\n\n    static warning(description) {\n        notification.warning({\n            message: 'Ostrzeżenie',\n            placement: 'bottomLeft',\n            duration: 3,\n            description\n        });\n    }\n\n    static error(description) {\n        notification.error({\n            message: 'Błąd',\n            placement: 'bottomLeft',\n            duration: 3,\n            description\n        });\n    }\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/Notification/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "class",
    "name": "Notification",
    "memberof": "src/components/Notification/index.js",
    "static": true,
    "longname": "src/components/Notification/index.js~Notification",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/Notification/index.js",
    "importStyle": "Notification",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "success",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.success",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "info",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.info",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "warning",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.warning",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 448,
    "kind": "method",
    "name": "error",
    "memberof": "src/components/Notification/index.js~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Notification/index.js~Notification.error",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 449,
    "kind": "file",
    "name": "src/components/RefreshHostsButton/index.js",
    "content": "import React from 'react';\nimport { Button, Icon } from 'antd';\nimport './index.less';\n\nconst RefreshHostsButton = ({ invalidated, refresh }) => <Button\n    type=\"primary\"\n    className=\"refresh-hosts-button\"\n    disabled={invalidated}\n    onClick={refresh}\n><Icon type=\"reload\" />Odśwież listę hostów</Button>;\n\nexport default RefreshHostsButton;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/RefreshHostsButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 450,
    "kind": "function",
    "name": "RefreshHostsButton",
    "memberof": "src/components/RefreshHostsButton/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/RefreshHostsButton/index.js~RefreshHostsButton",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/RefreshHostsButton/index.js",
    "importStyle": "RefreshHostsButton",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"invalidated\": *, \"refresh\": *}"
        ],
        "defaultRaw": {
          "invalidated": null,
          "refresh": null
        },
        "defaultValue": "{\"invalidated\":null,\"refresh\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 451,
    "kind": "file",
    "name": "src/components/RegisterForm/index.js",
    "content": "import React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport './index.less';\n\nconst FormItem = Form.Item;\n\nconst RegisterForm = ({ form, indeterminate, signUp }) => (\n    <Form onSubmit={e => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                const { password2, ...credentials } = values; // eslint-disable-line no-unused-vars\n                signUp(credentials);\n            }\n        });\n    }} className={`login-form ${indeterminate ? 'indeterminate' : ''}`}>\n        <FormItem>\n            {form.getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Nazwa użytkownika musi zostać podana' }],\n            })(\n                <Input prefix={\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                } placeholder=\"Nazwa użytkownika\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Hasło musi zostać podane' }],\n            })(\n                <Input prefix={\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                } type=\"password\" placeholder=\"Hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            {form.getFieldDecorator('password2', {\n                rules: [{ validator: (rule, password2, callback) => {\n                    const password = form.getFieldValue('password');\n                    if (password2 && password === password2) {\n                        callback();\n                    }\n                    else {\n                        callback(true);\n                    }\n                }, message: 'Hasła muszą być identyczne' }],\n            })(\n                <Input prefix={\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                } type=\"password\" placeholder=\"Powtórz hasło\" />\n            )}\n        </FormItem>\n        <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                Zarejestruj się\n            </Button>\n        </FormItem>\n    </Form>\n);\n\nconst WrappedRegisterForm = Form.create()(RegisterForm);\n\nexport default WrappedRegisterForm;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/components/RegisterForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 452,
    "kind": "variable",
    "name": "FormItem",
    "memberof": "src/components/RegisterForm/index.js",
    "static": true,
    "longname": "src/components/RegisterForm/index.js~FormItem",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 453,
    "kind": "function",
    "name": "RegisterForm",
    "memberof": "src/components/RegisterForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/RegisterForm/index.js~RegisterForm",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/components/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"form\": *, \"indeterminate\": *, \"signUp\": *}"
        ],
        "defaultRaw": {
          "form": null,
          "indeterminate": null,
          "signUp": null
        },
        "defaultValue": "{\"form\":null,\"indeterminate\":null,\"signUp\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 454,
    "kind": "variable",
    "name": "WrappedRegisterForm",
    "memberof": "src/components/RegisterForm/index.js",
    "static": true,
    "longname": "src/components/RegisterForm/index.js~WrappedRegisterForm",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/components/RegisterForm/index.js",
    "importStyle": "WrappedRegisterForm",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "file",
    "name": "src/containers/AddHistoricalChart/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMetricsAll } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport AddChart from '../../components/AddChart';\n\nconst mapStateToProps = (state) => ({\n    metrics: getMetricsAll(state)\n});\n\nconst mapDispatchToProps = {\n    onAdd: actions.addHistoricalChart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddChart);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/AddHistoricalChart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 456,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AddHistoricalChart/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AddHistoricalChart/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AddHistoricalChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 457,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AddHistoricalChart/index.js",
    "static": true,
    "longname": "src/containers/AddHistoricalChart/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AddHistoricalChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"onAdd\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 458,
    "kind": "file",
    "name": "src/containers/AddLiveChart/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMetricsAll } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport AddChart from '../../components/AddChart';\n\nconst mapStateToProps = (state) => ({\n    metrics: getMetricsAll(state)\n});\n\nconst mapDispatchToProps = {\n    onAdd: actions.addLiveChart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddChart);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/AddLiveChart/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AddLiveChart/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AddLiveChart/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AddLiveChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 460,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AddLiveChart/index.js",
    "static": true,
    "longname": "src/containers/AddLiveChart/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AddLiveChart/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"onAdd\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "src/containers/AppLayout/__tests__/layout.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport AppLayout from '../index.js';\nimport initStore from '../../../createStore';\n\nit('renders without crashing', () => {\n    const div = document.createElement('div');\n    const { store, history } = initStore();\n    ReactDOM.render((\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <AppLayout>\n                    <p>Junk</p>\n                </AppLayout>\n            </ConnectedRouter>\n        </Provider>\n    ), div);\n    ReactDOM.unmountComponentAtNode(div);\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/AppLayout/__tests__/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "src/containers/AppLayout/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getLocation, getToken } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport AppLayout from '../../components/AppLayout';\n\nconst mapStateToProps = (state) => ({\n    location: getLocation(state),\n    auth: getToken(state)\n});\n\nconst mapDispatchToProps = {\n    signOut: actions.removeToken\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLayout);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/AppLayout/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AppLayout/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AppLayout/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 464,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AppLayout/index.js",
    "static": true,
    "longname": "src/containers/AppLayout/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AppLayout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"signOut\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 465,
    "kind": "file",
    "name": "src/containers/AuthServer/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getAuthServer } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport AuthServer from '../../components/AuthServer';\n\nconst mapStateToProps = (state) => ({\n    authServer: getAuthServer(state)\n});\n\nconst mapDispatchToProps = {\n    changeAuthServer: actions.changeAuthServer\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthServer);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/AuthServer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 466,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/AuthServer/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/AuthServer/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AuthServer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 467,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/AuthServer/index.js",
    "static": true,
    "longname": "src/containers/AuthServer/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/AuthServer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"changeAuthServer\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 468,
    "kind": "file",
    "name": "src/containers/HostList/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getHostsArray } from '../../reducers';\nimport HostList from '../../components/HostList';\nimport * as actions from '../../actions/sync';\n\nconst mapStateToProps = (state) => ({\n    hosts: getHostsArray(state)\n});\n\nconst mapDispatchToProps = {\n    onAddMetric: (payload, host) => actions.addComplexMetricRequest(host, payload),\n    onRemoveMetric: (host, id) => actions.removeComplexMetricRequest(id, host)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HostList);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/HostList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 469,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/HostList/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/HostList/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/HostList/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 470,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/HostList/index.js",
    "static": true,
    "longname": "src/containers/HostList/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/HostList/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"onAddMetric\": *, \"onRemoveMetric\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 471,
    "kind": "file",
    "name": "src/containers/LoginForm/index.js",
    "content": "import { connect } from 'react-redux';\nimport * as actions from '../../actions/sync';\nimport { getTokenRequested } from '../../reducers';\nimport LoginForm from '../../components/LoginForm';\n\nconst mapStateToProps = (state) => ({\n    indeterminate: getTokenRequested(state)\n});\n\nconst mapDispatchToProps = {\n    signIn: actions.signInRequest\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/LoginForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 472,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/LoginForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/LoginForm/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 473,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/LoginForm/index.js",
    "static": true,
    "longname": "src/containers/LoginForm/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/LoginForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"signIn\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 474,
    "kind": "file",
    "name": "src/containers/MonitorsTable/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMonitorsArray } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport MonitorsTable from '../../components/MonitorsTable';\n\nconst mapStateToProps = (state) => ({\n    dataSource: getMonitorsArray(state)\n});\n\nconst mapDispatchToProps = {\n    changeMonitorAddress: (monitor, address) => actions.setMonitorAddress({ address }, monitor),\n    changeMonitorDescription: (monitor, description) => actions.setMonitorDescription({ description }, monitor),\n    addMonitor: actions.addMonitor,\n    removeMonitor: actions.removeMonitor\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorsTable);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/MonitorsTable/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/MonitorsTable/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/MonitorsTable/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 476,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/MonitorsTable/index.js",
    "static": true,
    "longname": "src/containers/MonitorsTable/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/MonitorsTable/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"changeMonitorAddress\": *, \"changeMonitorDescription\": *, \"addMonitor\": *, \"removeMonitor\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 477,
    "kind": "file",
    "name": "src/containers/RefreshHostsButton/index.js",
    "content": "import { connect } from 'react-redux';\nimport { getMonitorsHostsInvalidated } from '../../reducers';\nimport * as actions from '../../actions/sync';\nimport RefreshHostsButton from '../../components/RefreshHostsButton';\n\nconst mapStateToProps = (state) => ({\n    invalidated: getMonitorsHostsInvalidated(state)\n});\n\nconst mapDispatchToProps = {\n    refresh: actions.getHosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RefreshHostsButton);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/RefreshHostsButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/RefreshHostsButton/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/RefreshHostsButton/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/RefreshHostsButton/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/RefreshHostsButton/index.js",
    "static": true,
    "longname": "src/containers/RefreshHostsButton/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/RefreshHostsButton/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"refresh\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 480,
    "kind": "file",
    "name": "src/containers/RegisterForm/index.js",
    "content": "import { connect } from 'react-redux';\nimport * as actions from '../../actions/sync';\nimport { getTokenRequested } from '../../reducers';\nimport RegisterForm from '../../components/RegisterForm';\n\nconst mapStateToProps = (state) => ({\n    indeterminate: getTokenRequested(state)\n});\n\nconst mapDispatchToProps = {\n    signUp: actions.signUpRequest\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/containers/RegisterForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/RegisterForm/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/RegisterForm/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 482,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/RegisterForm/index.js",
    "static": true,
    "longname": "src/containers/RegisterForm/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/containers/RegisterForm/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"signUp\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 483,
    "kind": "file",
    "name": "src/createStore.js",
    "content": "import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nexport default (initialState) => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const sagaMiddleware = createSagaMiddleware();\n    const history = createBrowserHistory();\n    const store = createStore(\n        connectRouter(history)(rootReducer),\n        initialState,\n        composeEnhancers(\n            applyMiddleware(\n                routerMiddleware(history),\n                sagaMiddleware\n            )\n        )\n    );\n    sagaMiddleware.run(rootSaga);\n    return { store, history };\n};\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/createStore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 484,
    "kind": "function",
    "name": "createStore",
    "memberof": "src/createStore.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/createStore.js~createStore",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/createStore.js",
    "importStyle": "createStore",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "initialState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"store\": *, \"history\": *}"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "file",
    "name": "src/index.js",
    "content": "import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport createStore from './createStore';\nimport { getSavedState } from './localStorage';\nimport AppLayout from './containers/AppLayout';\nimport { getRoutes } from './routes';\n\nconst { store, history } = createStore(getSavedState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <AppLayout>\n                {getRoutes()}\n            </AppLayout>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 486,
    "kind": "variable",
    "name": "store",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~store",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 487,
    "kind": "file",
    "name": "src/localStorage.js",
    "content": "import { convertMonitorsToObj, convertMonitorsFromObj } from './reducers/monitors';\n\nconst AUTH_SERVER_KEY = 'auth_server';\nconst MONITORS_KEY = 'monitors';\nconst TOKEN_KEY = 'token';\n\nexport const getAuthServer = () => {\n    return localStorage.getItem(AUTH_SERVER_KEY) || undefined;\n};\n\nexport const updateAuthServer = (authServer) => {\n    localStorage.setItem(AUTH_SERVER_KEY, authServer);\n};\n\nexport const getMonitors = () => {\n    const savedValue = localStorage.getItem(MONITORS_KEY);\n    if (savedValue) {\n        try {\n            const parsed = JSON.parse(savedValue);\n            const converted = convertMonitorsToObj(parsed);\n            if (Object.keys(converted) === 0) {\n                return undefined;\n            }\n            return converted;\n        }\n        catch (error) {} // eslint-disable-line no-empty\n    }\n    return undefined;\n};\n\nexport const updateMonitors = (monitors) => {\n    localStorage.setItem(MONITORS_KEY, JSON.stringify(convertMonitorsFromObj(monitors)));\n};\n\nexport const getToken = () => {\n    return localStorage.getItem(TOKEN_KEY) || undefined;\n};\n\nexport const saveToken = token => {\n    localStorage.setItem(TOKEN_KEY, token);\n};\n\nexport const clearToken = () => {\n    localStorage.removeItem(TOKEN_KEY);\n};\n\nexport const getSavedState = () => ({\n    auth: {\n        token: getToken(),\n        authServer: getAuthServer()\n    },\n    monitors: getMonitors()\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/localStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 488,
    "kind": "variable",
    "name": "AUTH_SERVER_KEY",
    "memberof": "src/localStorage.js",
    "static": true,
    "longname": "src/localStorage.js~AUTH_SERVER_KEY",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 489,
    "kind": "variable",
    "name": "MONITORS_KEY",
    "memberof": "src/localStorage.js",
    "static": true,
    "longname": "src/localStorage.js~MONITORS_KEY",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 490,
    "kind": "variable",
    "name": "TOKEN_KEY",
    "memberof": "src/localStorage.js",
    "static": true,
    "longname": "src/localStorage.js~TOKEN_KEY",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "getAuthServer",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~getAuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{getAuthServer}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "updateAuthServer",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~updateAuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{updateAuthServer}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "authServer",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 493,
    "kind": "function",
    "name": "getMonitors",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~getMonitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{getMonitors}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "function",
    "name": "updateMonitors",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~updateMonitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{updateMonitors}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "monitors",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 495,
    "kind": "function",
    "name": "getToken",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~getToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{getToken}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "function",
    "name": "saveToken",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~saveToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{saveToken}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "clearToken",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~clearToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{clearToken}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 498,
    "kind": "function",
    "name": "getSavedState",
    "memberof": "src/localStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/localStorage.js~getSavedState",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/localStorage.js",
    "importStyle": "{getSavedState}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "src/pages/Historical/index.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/sync';\nimport { getHistoricalChartsArray, getMetrics } from '../../reducers';\nimport AddHistoricalChart from '../../containers/AddHistoricalChart';\nimport { HistoricalChart } from '../../components/Chart';\nimport NoCharts from '../../components/NoCharts';\n\nconst Live = ({\n    addHistoricalChartHost1, addHistoricalChartHost2, removeHistoricalChartHost1,\n    removeHistoricalChartHost2, setHistoricalChartMetric1, setHistoricalChartMetric2,\n    removeHistoricalChart, setHistoricalChartRange, metrics, charts\n}) => (\n    <div className=\"full-page\">\n        <h1>Pomiary historyczne</h1>\n        <AddHistoricalChart />\n        {charts.length ? charts.map(c => (\n            <HistoricalChart\n                key={c.id}\n                onMetric1Changed={(metric) => setHistoricalChartMetric1({ metric }, c.id)}\n                onMetric2Changed={(metric) => setHistoricalChartMetric2({ metric }, c.id)}\n                onHostAddedToMetric1={host => addHistoricalChartHost1({ host }, c.id)}\n                onHostAddedToMetric2={host => addHistoricalChartHost2({ host }, c.id)}\n                onHostDismissedFromMetric1={host => removeHistoricalChartHost1(c.id, host)}\n                onHostDismissedFromMetric2={host => removeHistoricalChartHost2(c.id, host)}\n                onRangeChanged={(start, end) => setHistoricalChartRange({ start, end }, c.id)}\n                onChartClosed={() => removeHistoricalChart(c.id)}\n                metrics={metrics}\n                {...c}\n            />\n        )) : <NoCharts />}\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    charts: getHistoricalChartsArray(state),\n    metrics: getMetrics(state)\n});\n\nconst mapDispatchToProps = {\n    addHistoricalChartHost1: actions.addHistoricalChartHost1,\n    addHistoricalChartHost2: actions.addHistoricalChartHost2,\n    removeHistoricalChartHost1: actions.removeHistoricalChartHost1,\n    removeHistoricalChartHost2: actions.removeHistoricalChartHost2,\n    setHistoricalChartMetric1: actions.setHistoricalChartMetric1,\n    setHistoricalChartMetric2: actions.setHistoricalChartMetric2,\n    removeHistoricalChart: actions.removeHistoricalChart,\n    setHistoricalChartRange: actions.setHistoricalChartRange\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Live);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/Historical/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "function",
    "name": "Live",
    "memberof": "src/pages/Historical/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Historical/index.js~Live",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Historical/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"addHistoricalChartHost1\": *, \"addHistoricalChartHost2\": *, \"removeHistoricalChartHost1\": *, \"removeHistoricalChartHost2\": *, \"setHistoricalChartMetric1\": *, \"setHistoricalChartMetric2\": *, \"removeHistoricalChart\": *, \"setHistoricalChartRange\": *, \"metrics\": *, \"charts\": *}"
        ],
        "defaultRaw": {
          "addHistoricalChartHost1": null,
          "addHistoricalChartHost2": null,
          "removeHistoricalChartHost1": null,
          "removeHistoricalChartHost2": null,
          "setHistoricalChartMetric1": null,
          "setHistoricalChartMetric2": null,
          "removeHistoricalChart": null,
          "setHistoricalChartRange": null,
          "metrics": null,
          "charts": null
        },
        "defaultValue": "{\"addHistoricalChartHost1\":null,\"addHistoricalChartHost2\":null,\"removeHistoricalChartHost1\":null,\"removeHistoricalChartHost2\":null,\"setHistoricalChartMetric1\":null,\"setHistoricalChartMetric2\":null,\"removeHistoricalChart\":null,\"setHistoricalChartRange\":null,\"metrics\":null,\"charts\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 501,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/pages/Historical/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Historical/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Historical/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 502,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/pages/Historical/index.js",
    "static": true,
    "longname": "src/pages/Historical/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Historical/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "{\"addHistoricalChartHost1\": *, \"addHistoricalChartHost2\": *, \"removeHistoricalChartHost1\": *, \"removeHistoricalChartHost2\": *, \"setHistoricalChartMetric1\": *, \"setHistoricalChartMetric2\": *, \"removeHistoricalChart\": *, \"setHistoricalChartRange\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 503,
    "kind": "file",
    "name": "src/pages/Live/index.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/sync';\nimport { getLiveChartsArray, getMetrics } from '../../reducers';\nimport AddLiveChart from '../../containers/AddLiveChart';\nimport { LiveChart } from '../../components/Chart';\nimport NoCharts from '../../components/NoCharts';\n\nconst Live = ({ removeLiveChart, setLiveChartMetric, addLiveChartHost, removeLiveChartHost, metrics, charts }) => (\n    <div className=\"full-page\">\n        <h1>Pomiary na żywo</h1>\n        <AddLiveChart />\n        {charts.length ? charts.map(c => (\n            <LiveChart\n                key={c.id}\n                onChartClosed={() => removeLiveChart(c.id)}\n                onMetricChanged={metric => setLiveChartMetric({ metric }, c.id)}\n                onHostAdded={host => addLiveChartHost({ host }, c.id)}\n                onHostDismissed={host => removeLiveChartHost(c.id, host)}\n                metrics={metrics}\n                {...c}\n            />\n        )) : <NoCharts />}\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    charts: getLiveChartsArray(state),\n    metrics: getMetrics(state)\n});\n\nconst mapDispatchToProps = {\n    removeLiveChart: actions.removeLiveChart,\n    setLiveChartMetric: actions.setLiveChartMetric,\n    addLiveChartHost: actions.addLiveChartHost,\n    removeLiveChartHost: actions.removeLiveChartHost\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Live);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/Live/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 504,
    "kind": "function",
    "name": "Live",
    "memberof": "src/pages/Live/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Live/index.js~Live",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"removeLiveChart\": *, \"setLiveChartMetric\": *, \"addLiveChartHost\": *, \"removeLiveChartHost\": *, \"metrics\": *, \"charts\": *}"
        ],
        "defaultRaw": {
          "removeLiveChart": null,
          "setLiveChartMetric": null,
          "addLiveChartHost": null,
          "removeLiveChartHost": null,
          "metrics": null,
          "charts": null
        },
        "defaultValue": "{\"removeLiveChart\":null,\"setLiveChartMetric\":null,\"addLiveChartHost\":null,\"removeLiveChartHost\":null,\"metrics\":null,\"charts\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 505,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/pages/Live/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Live/index.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 506,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/pages/Live/index.js",
    "static": true,
    "longname": "src/pages/Live/index.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/pages/Live/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "{\"removeLiveChart\": *, \"setLiveChartMetric\": *, \"addLiveChartHost\": *, \"removeLiveChartHost\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 507,
    "kind": "file",
    "name": "src/pages/Metrics/index.js",
    "content": "import React from 'react';\nimport HostList from '../../containers/HostList';\nimport RefreshHostsButton from '../../containers/RefreshHostsButton';\n\nconst Metrics = () => (\n    <div className=\"full-page\">\n        <h1>Hosty i Metryki</h1>\n        <HostList />\n        <RefreshHostsButton />\n    </div>\n);\n\nexport default Metrics;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/Metrics/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 508,
    "kind": "function",
    "name": "Metrics",
    "memberof": "src/pages/Metrics/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Metrics/index.js~Metrics",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/pages/Metrics/index.js",
    "importStyle": "Metrics",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 509,
    "kind": "file",
    "name": "src/pages/Monitors/index.js",
    "content": "import React from 'react';\nimport MonitorsTable from '../../containers/MonitorsTable';\n\nconst Monitors = () => (\n    <div className=\"full-page\">\n        <h1>Monitory</h1>\n        <MonitorsTable />\n    </div>\n);\n\nexport default Monitors;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/Monitors/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "function",
    "name": "Monitors",
    "memberof": "src/pages/Monitors/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/Monitors/index.js~Monitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/pages/Monitors/index.js",
    "importStyle": "Monitors",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 511,
    "kind": "file",
    "name": "src/pages/NotFound/index.js",
    "content": "import React from 'react';\n\nconst NotFound = () => (\n    <div className=\"full-page\">\n        <h1>Strony nie znaleziono</h1>\n    </div>\n);\n\nexport default NotFound;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/NotFound/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 512,
    "kind": "function",
    "name": "NotFound",
    "memberof": "src/pages/NotFound/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/NotFound/index.js~NotFound",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/pages/NotFound/index.js",
    "importStyle": "NotFound",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "file",
    "name": "src/pages/SignIn/index.js",
    "content": "import React from 'react';\nimport LoginForm from '../../containers/LoginForm';\nimport AuthServer from '../../containers/AuthServer';\n\nconst SignIn = () => (\n    <div className=\"centered-page\">\n        <h1>Panel logowania</h1>\n        <LoginForm />\n        <AuthServer />\n    </div>\n);\n\nexport default SignIn;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/SignIn/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "function",
    "name": "SignIn",
    "memberof": "src/pages/SignIn/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/SignIn/index.js~SignIn",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/pages/SignIn/index.js",
    "importStyle": "SignIn",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "src/pages/SignUp/index.js",
    "content": "import React from 'react';\nimport RegisterForm from '../../containers/RegisterForm';\nimport AuthServer from '../../containers/AuthServer';\n\nconst SignUp = () => (\n    <div className=\"centered-page\">\n        <h1>Panel rejestracji</h1>\n        <RegisterForm />\n        <AuthServer />\n    </div>\n);\n\nexport default SignUp;\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/pages/SignUp/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "function",
    "name": "SignUp",
    "memberof": "src/pages/SignUp/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/pages/SignUp/index.js~SignUp",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/pages/SignUp/index.js",
    "importStyle": "SignUp",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 517,
    "kind": "file",
    "name": "src/reducers/__tests__/auth.js",
    "content": "import reducer from '../index';\nimport * as types from '../../actions/types';\n\nit('reacts to SIGN_IN_REQUEST', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: false,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_IN_REQUEST });\n    expect(state.auth).toEqual({\n        token: null,\n        tokenRequested: true,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to SIGN_IN_SUCCESS', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: true,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_IN_SUCCESS, payload: { access_token: 'xxx' }});\n    expect(state.auth).toEqual({\n        token: 'xxx',\n        tokenRequested: false,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to SIGN_IN_FAILURE', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: true,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_IN_FAILURE });\n    expect(state.auth).toEqual({\n        token: null,\n        tokenRequested: false,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to SIGN_UP_REQUEST', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: false,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_UP_REQUEST });\n    expect(state.auth).toEqual({\n        token: null,\n        tokenRequested: true,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to SIGN_UP_SUCCESS', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: true,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_UP_SUCCESS, payload: { access_token: 'xxx' }});\n    expect(state.auth).toEqual({\n        token: 'xxx',\n        tokenRequested: false,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to SIGN_UP_FAILURE', () => {\n    let state = {\n        auth: {\n            token: null,\n            tokenRequested: true,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.SIGN_UP_FAILURE });\n    expect(state.auth).toEqual({\n        token: null,\n        tokenRequested: false,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to REMOVE_TOKEN', () => {\n    let state = {\n        auth: {\n            token: 'xxx',\n            tokenRequested: false,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.REMOVE_TOKEN });\n    expect(state.auth).toEqual({\n        token: null,\n        tokenRequested: false,\n        authServer: 'junk'\n    });\n});\n\nit('reacts to CHANGE_AUTH_SERVER', () => {\n    let state = {\n        auth: {\n            token: 'xxx',\n            tokenRequested: false,\n            authServer: 'junk'\n        }\n    };\n    state = reducer(state, { type: types.CHANGE_AUTH_SERVER, payload: { address: 'junk2' }});\n    expect(state.auth).toEqual({\n        token: 'xxx',\n        tokenRequested: false,\n        authServer: 'junk2'\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 518,
    "kind": "file",
    "name": "src/reducers/__tests__/historicalCharts.js",
    "content": "import moment from 'moment';\nimport reducer from '../index';\nimport * as types from '../../actions/types';\n\nconst chart1 = {\n    id: 'test2_id',\n    metric1: 'test2_metric',\n    metric2: 'test3_metric'\n};\n\nconst chart2 = {\n    id: 'test_id',\n    metric1: 'test1_metric',\n    metric2: null\n};\n\nconst hosts1 = [\n    'host1a',\n    'host1b'\n];\n\nconst hosts2 = [\n    'host1a',\n    'host1b',\n    'host2b'\n];\n\nconst hosts3 = [\n    'host2a',\n    'host2b'\n];\n\nconst chart2Measurements = {\n    'host2a': [\n        {\n            time: '2018-06-09T16:21:30Z',\n            value: 32\n        },\n        {\n            time: '2018-06-09T16:26:30Z',\n            value: 21\n        }\n    ],\n    'host2b': [\n        {\n            time: '2018-06-09T16:21:00Z',\n            value: 12\n        },\n        {\n            time: '2018-06-09T16:26:00Z',\n            value: 63\n        }\n    ]\n};\n\nconst chartStart1 = moment('2018-03-02').toISOString();\nconst chartEnd1 = moment('2018-03-10').toISOString();\nconst chartStart2 = moment('2017-03-02').toISOString();\nconst chartEnd2 = moment('2017-03-10').toISOString();\n\nit('reacts to ADD_HISTORICAL_CHART', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_HISTORICAL_CHART,\n        payload: {\n            id: chart2.id,\n            metric: chart2.metric1,\n            start: chartStart2,\n            end: chartEnd2\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: [],\n                hosts2: null,\n                invalidated: false,\n                measurements1: {},\n                measurements2: null,\n                start: chartStart2,\n                end: chartEnd2\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_HISTORICAL_CHART', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_HISTORICAL_CHART,\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id\n        ]\n    });\n});\n\nit('reacts to SET_HISTORICAL_CHART_RANGE', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_HISTORICAL_CHART_RANGE,\n        payload: {\n            start: chartStart2,\n            end: chartEnd2\n        },\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart2,\n                end: chartEnd2\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to SET_HISTORICAL_CHART_METRIC1', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_HISTORICAL_CHART_METRIC1,\n        payload: {\n            metric: 'test_metric'\n        },\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: [],\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1,\n                metric1: 'test_metric'\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to SET_HISTORICAL_CHART_METRIC2 (remove null)', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_HISTORICAL_CHART_METRIC2,\n        payload: {\n            metric: 'test_metric'\n        },\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: [],\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1,\n                metric2: 'test_metric'\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to SET_HISTORICAL_CHART_METRIC2 (set null)', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: [],\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1,\n                    metric2: 'test_metric'\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_HISTORICAL_CHART_METRIC2,\n        payload: {\n            metric: null\n        },\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to ADD_HISTORICAL_CHART_HOST1', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_HISTORICAL_CHART_HOST1,\n        payload: {\n            host: 'new_host'\n        },\n        meta: {\n            id: chart2.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: [\n                    ...hosts3,\n                    'new_host'\n                ],\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to ADD_HISTORICAL_CHART_HOST2', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_HISTORICAL_CHART_HOST2,\n        payload: {\n            host: 'new_host'\n        },\n        meta: {\n            id: chart1.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: [\n                    ...hosts2,\n                    'new_host'\n                ],\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_HISTORICAL_CHART_HOST1', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_HISTORICAL_CHART_HOST1,\n        meta: {\n            id: chart1.id,\n            host: 'host1a'\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1.filter(h => h !== 'host1a'),\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_HISTORICAL_CHART_HOST2', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_HISTORICAL_CHART_HOST2,\n        meta: {\n            id: chart1.id,\n            host: 'host1b'\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2.filter(h => h !== 'host1b'),\n                invalidated: false,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to GET_HISTORICAL_MEASUREMENTS_REQUEST', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: false,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HISTORICAL_MEASUREMENTS_REQUEST,\n        meta: {\n            id: chart1.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: true,\n                measurements1: {},\n                measurements2: {},\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n\nit('reacts to GET_HISTORICAL_MEASUREMENTS_SUCCESS', () => {\n    let state = {\n        historicalCharts: {\n            byId: {\n                [chart1.id]: {\n                    ...chart1,\n                    hosts1: hosts1,\n                    hosts2: hosts2,\n                    invalidated: true,\n                    measurements1: {},\n                    measurements2: {},\n                    start: chartStart1,\n                    end: chartEnd1\n                },\n                [chart2.id]: {\n                    ...chart2,\n                    hosts1: hosts3,\n                    hosts2: null,\n                    invalidated: false,\n                    measurements1: chart2Measurements,\n                    measurements2: null,\n                    start: chartStart1,\n                    end: chartEnd1\n                }\n            },\n            allIds: [\n                chart1.id,\n                chart2.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HISTORICAL_MEASUREMENTS_SUCCESS,\n        payload: {\n            measurements1: chart2Measurements,\n            measurements2: chart2Measurements\n        },\n        meta: {\n            id: chart1.id,\n        }\n    });\n    expect(state.historicalCharts).toEqual({\n        byId: {\n            [chart1.id]: {\n                ...chart1,\n                hosts1: hosts1,\n                hosts2: hosts2,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: chart2Measurements,\n                start: chartStart1,\n                end: chartEnd1\n            },\n            [chart2.id]: {\n                ...chart2,\n                hosts1: hosts3,\n                hosts2: null,\n                invalidated: false,\n                measurements1: chart2Measurements,\n                measurements2: null,\n                start: chartStart1,\n                end: chartEnd1\n            }\n        },\n        allIds: [\n            chart1.id,\n            chart2.id\n        ]\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/historicalCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 519,
    "kind": "variable",
    "name": "chart1",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chart1",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"metric1\": string, \"metric2\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "chart2",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chart2",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"metric1\": string, \"metric2\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 521,
    "kind": "variable",
    "name": "hosts1",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~hosts1",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 522,
    "kind": "variable",
    "name": "hosts2",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~hosts2",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 523,
    "kind": "variable",
    "name": "hosts3",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~hosts3",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 524,
    "kind": "variable",
    "name": "chart2Measurements",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chart2Measurements",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "{\"host2a\": *, \"host2b\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 525,
    "kind": "variable",
    "name": "chartStart1",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chartStart1",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "chartEnd1",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chartEnd1",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "chartStart2",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chartStart2",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "chartEnd2",
    "memberof": "src/reducers/__tests__/historicalCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/historicalCharts.js~chartEnd2",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 529,
    "kind": "file",
    "name": "src/reducers/__tests__/hosts.js",
    "content": "import reducer from '../index';\nimport * as types from '../../actions/types';\n\nconst junkMetadata = [\n    {\n        id: 'OS',\n        name: 'Operating System',\n        value: 'Ubuntu 18.04'\n    }\n];\n\nconst metric1Payload = {\n    description: 'RAM usage in percentage',\n    hosts: [\n        'not_used'\n    ],\n    id: 'RAM_USAGE',\n    interval: null,\n    moving_window_duration: null,\n    parent_id: null,\n    removable: null,\n    unit: '%'\n};\n\nconst metric2Payload = {\n    description: 'CPU usage in percentage',\n    hosts: [\n        'not_used'\n    ],\n    id: 'CPU_USAGE',\n    interval: null,\n    moving_window_duration: null,\n    parent_id: null,\n    removable: null,\n    unit: '%'\n};\n\nconst metric1ComplexPayload = {\n    description: 'Complex 1 Description',\n    hosts: [\n        'not_used'\n    ],\n    id: 'cpx_CPU_USAGE_240_120',\n    interval: 120,\n    moving_window_duration: 240,\n    parent_id: 'CPU_USAGE',\n    removable: false,\n    unit: '%'\n};\n\nconst metric2ComplexPayload = {\n    description: 'Complex 2 Description',\n    hosts: [\n        'not_used'\n    ],\n    id: 'cpx_RAM_USAGE_120_60',\n    interval: 60,\n    moving_window_duration: 120,\n    parent_id: 'RAM_USAGE',\n    removable: true,\n    unit: '%'\n};\n\nconst metric3ComplexPayload = {\n    description: 'Complex 3 Description',\n    id: 'cpx_RAM_USAGE_60_60',\n    interval: 60,\n    moving_window_duration: 60,\n    parent_id: 'RAM_USAGE',\n    unit: '%'\n};\n\nconst host1Payload = {\n    hostname: 'host1_address',\n    metadata: junkMetadata,\n    metrics: [\n        metric1Payload,\n        metric2Payload,\n        metric1ComplexPayload\n    ]\n};\n\nconst host2Payload = {\n    hostname: 'host2_address',\n    metadata: junkMetadata,\n    metrics: [\n        metric1Payload,\n        metric2Payload,\n        metric2ComplexPayload\n    ]\n};\n\nconst host3Payload = {\n    hostname: 'host3_address',\n    metadata: junkMetadata,\n    metrics: [\n        metric1Payload,\n        metric2Payload,\n        metric1ComplexPayload,\n        metric2ComplexPayload\n    ]\n};\n\nconst convertMetric = state => {\n    const { hosts, ...rest } = state; // eslint-disable-line no-unused-vars\n    return rest;\n};\n\nconst convertHost = state => {\n    return {\n        metricsInvalidated: false,\n        ...state,\n        metrics: state.metrics.reduce((c, m) => ({\n            ...c,\n            [m.id]: convertMetric(m)\n        }), {})\n    };\n};\n\nit('reacts to SET_MONITOR_ADDRESS', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_MONITOR_ADDRESS,\n        payload: {\n            address: 'monitor3'\n        },\n        meta: {\n            monitor: 'monitor1'\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor3'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2'\n        })\n    });\n});\n\nit('reacts to REMOVE_MONITOR', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_MONITOR,\n        meta: {\n            monitor: 'monitor2'\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        })\n    });\n});\n\nit('reacts to GET_HOSTS_SUCCESS', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HOSTS_SUCCESS,\n        payload: [\n            host3Payload\n        ],\n        meta: {\n            monitor: 'monitor2'\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host3Payload.hostname]: convertHost({\n            ...host3Payload,\n            monitor: 'monitor2'\n        })\n    });\n});\n\nit('reacts to REMOVE_TOKEN', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, { type: types.REMOVE_TOKEN });\n    expect(state.hosts).toEqual({});\n});\n\nit('reacts to ADD_COMPLEX_METRIC_REQUEST', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_COMPLEX_METRIC_REQUEST,\n        meta: {\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2',\n            metricsInvalidated: true\n        })\n    });\n});\n\nit('reacts to ADD_COMPLEX_METRIC_SUCCESS', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2',\n                metricsInvalidated: true\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_COMPLEX_METRIC_SUCCESS,\n        payload: metric3ComplexPayload,\n        meta: {\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2',\n            metrics: [\n                ...host2Payload.metrics,\n                {\n                    ...metric3ComplexPayload,\n                    removable: true\n                }\n            ]\n        })\n    });\n});\n\nit('reacts to ADD_COMPLEX_METRIC_FAILURE', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2',\n                metricsInvalidated: true\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_COMPLEX_METRIC_FAILURE,\n        payload: {},\n        error: true,\n        meta: {\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2'\n        })\n    });\n});\n\nit('reacts to REMOVE_COMPLEX_METRIC_REQUEST', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2'\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_COMPLEX_METRIC_REQUEST,\n        meta: {\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2',\n            metricsInvalidated: true\n        })\n    });\n});\n\nit('reacts to REMOVE_COMPLEX_METRIC_SUCCESS', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2',\n                metricsInvalidated: true\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_COMPLEX_METRIC_SUCCESS,\n        meta: {\n            id: metric2ComplexPayload.id,\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2',\n            metrics: host2Payload.metrics.filter(m => m !== metric2ComplexPayload)\n        })\n    });\n});\n\nit('reacts to REMOVE_COMPLEX_METRIC_FAILURE', () => {\n    let state = {\n        hosts: {\n            [host1Payload.hostname]: convertHost({\n                ...host1Payload,\n                monitor: 'monitor1'\n            }),\n            [host2Payload.hostname]: convertHost({\n                ...host2Payload,\n                monitor: 'monitor2',\n                metricsInvalidated: true\n            })\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_COMPLEX_METRIC_FAILURE,\n        meta: {\n            host: host2Payload.hostname\n        }\n    });\n    expect(state.hosts).toEqual({\n        [host1Payload.hostname]: convertHost({\n            ...host1Payload,\n            monitor: 'monitor1'\n        }),\n        [host2Payload.hostname]: convertHost({\n            ...host2Payload,\n            monitor: 'monitor2'\n        })\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/hosts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "junkMetadata",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~junkMetadata",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 531,
    "kind": "variable",
    "name": "metric1Payload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~metric1Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"description\": string, \"hosts\": *, \"id\": string, \"interval\": *, \"moving_window_duration\": *, \"parent_id\": *, \"removable\": *, \"unit\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 532,
    "kind": "variable",
    "name": "metric2Payload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~metric2Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{\"description\": string, \"hosts\": *, \"id\": string, \"interval\": *, \"moving_window_duration\": *, \"parent_id\": *, \"removable\": *, \"unit\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "metric1ComplexPayload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~metric1ComplexPayload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "{\"description\": string, \"hosts\": *, \"id\": string, \"interval\": number, \"moving_window_duration\": number, \"parent_id\": string, \"removable\": *, \"unit\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 534,
    "kind": "variable",
    "name": "metric2ComplexPayload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~metric2ComplexPayload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "{\"description\": string, \"hosts\": *, \"id\": string, \"interval\": number, \"moving_window_duration\": number, \"parent_id\": string, \"removable\": boolean, \"unit\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 535,
    "kind": "variable",
    "name": "metric3ComplexPayload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~metric3ComplexPayload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "{\"description\": string, \"id\": string, \"interval\": number, \"moving_window_duration\": number, \"parent_id\": string, \"unit\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 536,
    "kind": "variable",
    "name": "host1Payload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~host1Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "{\"hostname\": string, \"metadata\": *, \"metrics\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 537,
    "kind": "variable",
    "name": "host2Payload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~host2Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "{\"hostname\": string, \"metadata\": *, \"metrics\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "host3Payload",
    "memberof": "src/reducers/__tests__/hosts.js",
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~host3Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "{\"hostname\": string, \"metadata\": *, \"metrics\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 539,
    "kind": "function",
    "name": "convertMetric",
    "memberof": "src/reducers/__tests__/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~convertMetric",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 540,
    "kind": "function",
    "name": "convertHost",
    "memberof": "src/reducers/__tests__/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/__tests__/hosts.js~convertHost",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"metricsInvalidated\": *, ...state: Object, \"metrics\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 541,
    "kind": "file",
    "name": "src/reducers/__tests__/index.js",
    "content": "import reducer from '../index';\n\nit('initializes properly', () => {\n    const state = reducer(undefined, {});\n    expect(state).toEqual({\n        auth: {\n            token: null,\n            tokenRequested: false,\n            authServer: ''\n        },\n        monitors: {},\n        hosts: {},\n        liveCharts: {\n            byId: {},\n            allIds: []\n        },\n        historicalCharts: {\n            byId: {},\n            allIds: []\n        }\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 542,
    "kind": "file",
    "name": "src/reducers/__tests__/liveCharts.js",
    "content": "import reducer from '../index';\nimport * as types from '../../actions/types';\n\nconst chart1Payload = {\n    id: 'test_id',\n    metric: 'test1_metric'\n};\n\nconst chart2Payload = {\n    id: 'test2_id',\n    metric: 'test2_metric'\n};\n\nconst hosts1Payload = [\n    'host1a',\n    'host1b'\n];\n\nconst hosts2Payload = [\n    'host2a',\n    'host2b'\n];\n\nconst chart1MeasurementsPayload = {\n    'host1a': [\n        {\n            time: '2018-06-09T16:21:30Z',\n            value: 32\n        },\n        {\n            time: '2018-06-09T16:26:30Z',\n            value: 21\n        }\n    ],\n    'host1b': [\n        {\n            time: '2018-06-09T16:21:00Z',\n            value: 12\n        },\n        {\n            time: '2018-06-09T16:26:00Z',\n            value: 63\n        }\n    ]\n};\n\nit('reacts to ADD_LIVE_CHART', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: [],\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_LIVE_CHART,\n        payload: chart2Payload\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                hosts: [],\n                invalidated: false,\n                measurements: {}\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: [],\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_LIVE_CHART', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: [],\n                    invalidated: false,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: [],\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_LIVE_CHART,\n        meta: {\n            id: chart1Payload.id\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: [],\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to SET_LIVE_CHART_METRIC', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: false,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_LIVE_CHART_METRIC,\n        payload: {\n            metric: 'test3_metric'\n        },\n        meta: {\n            id: chart1Payload.id\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                metric: 'test3_metric',\n                hosts: [],\n                invalidated: false,\n                measurements: {}\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: hosts2Payload,\n                invalidated: false,\n                measurements: {},\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to ADD_LIVE_CHART_HOST', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: false,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_LIVE_CHART_HOST,\n        payload: {\n            host: 'host3'\n        },\n        meta: {\n            id: chart1Payload.id\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                hosts: [\n                    ...hosts1Payload,\n                    'host3'\n                ],\n                invalidated: false,\n                measurements: {}\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: hosts2Payload,\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_LIVE_CHART_HOST', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: false,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_LIVE_CHART_HOST,\n        meta: {\n            id: chart1Payload.id,\n            host: 'host1b'\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                hosts: hosts1Payload.filter(h => h !== 'host1b'),\n                invalidated: false,\n                measurements: {}\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: hosts2Payload,\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to GET_LIVE_MEASUREMENTS_REQUEST', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: false,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_LIVE_MEASUREMENTS_REQUEST,\n        meta: {\n            id: chart1Payload.id\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                hosts: hosts1Payload,\n                invalidated: true,\n                measurements: {}\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: hosts2Payload,\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to GET_LIVE_MEASUREMENTS_SUCCESS', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: true,\n                    measurements: {}\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_LIVE_MEASUREMENTS_SUCCESS,\n        payload: {\n            measurements: chart1MeasurementsPayload\n        },\n        meta: {\n            id: chart1Payload.id\n        }\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {\n            [chart1Payload.id]: {\n                ...chart1Payload,\n                hosts: hosts1Payload,\n                invalidated: false,\n                measurements: chart1MeasurementsPayload\n            },\n            [chart2Payload.id]: {\n                ...chart2Payload,\n                hosts: hosts2Payload,\n                invalidated: false,\n                measurements: {}\n            }\n        },\n        allIds: [\n            chart1Payload.id,\n            chart2Payload.id\n        ]\n    });\n});\n\nit('reacts to REMOVE_TOKEN', () => {\n    let state = {\n        liveCharts: {\n            byId: {\n                [chart1Payload.id]: {\n                    ...chart1Payload,\n                    hosts: hosts1Payload,\n                    invalidated: true,\n                    measurements: chart1MeasurementsPayload\n                },\n                [chart2Payload.id]: {\n                    ...chart2Payload,\n                    hosts: hosts2Payload,\n                    invalidated: false,\n                    measurements: {}\n                }\n            },\n            allIds: [\n                chart1Payload.id,\n                chart2Payload.id\n            ]\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_TOKEN,\n    });\n    expect(state.liveCharts).toEqual({\n        byId: {},\n        allIds: []\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/liveCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 543,
    "kind": "variable",
    "name": "chart1Payload",
    "memberof": "src/reducers/__tests__/liveCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/liveCharts.js~chart1Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"metric\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 544,
    "kind": "variable",
    "name": "chart2Payload",
    "memberof": "src/reducers/__tests__/liveCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/liveCharts.js~chart2Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"metric\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 545,
    "kind": "variable",
    "name": "hosts1Payload",
    "memberof": "src/reducers/__tests__/liveCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/liveCharts.js~hosts1Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 546,
    "kind": "variable",
    "name": "hosts2Payload",
    "memberof": "src/reducers/__tests__/liveCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/liveCharts.js~hosts2Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 547,
    "kind": "variable",
    "name": "chart1MeasurementsPayload",
    "memberof": "src/reducers/__tests__/liveCharts.js",
    "static": true,
    "longname": "src/reducers/__tests__/liveCharts.js~chart1MeasurementsPayload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"host1a\": *, \"host1b\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 548,
    "kind": "file",
    "name": "src/reducers/__tests__/monitors.js",
    "content": "import reducer from '../index';\nimport * as types from '../../actions/types';\n\nconst monitor1Payload = {\n    address: 'moitor1_address',\n    description: 'monitor1_description'\n};\n\nconst monitor2Payload = {\n    address: 'moitor2_address',\n    description: 'monitor2_description'\n};\n\nit('reacts to ADD_MONITOR', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.ADD_MONITOR,\n        payload: monitor2Payload\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: false\n        }\n    });\n});\n\nit('reacts to SET_MONITOR_ADDRESS', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_MONITOR_ADDRESS,\n        payload: {\n            address: 'changed!'\n        },\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        'changed!': {\n            ...monitor2Payload,\n            hostsRequested: false,\n            address: 'changed!'\n        }\n    });\n});\n\nit('reacts to SET_MONITOR_DESCRIPTION', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.SET_MONITOR_DESCRIPTION,\n        payload: {\n            description: 'bbbb'\n        },\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: false,\n            description: 'bbbb'\n        }\n    });\n});\n\nit('reacts to REMOVE_MONITOR', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.REMOVE_MONITOR,\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        }\n    });\n});\n\nit('reacts to GET_HOSTS_REQUEST', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HOSTS_REQUEST,\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: true\n        }\n    });\n});\n\nit('reacts to GET_HOSTS_SUCCESS', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: true\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HOSTS_SUCCESS,\n        payload: [],\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: false\n        }\n    });\n});\n\nit('reacts to GET_HOSTS_FAILURE', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: false\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: true\n            }\n        }\n    };\n    state = reducer(state, {\n        type: types.GET_HOSTS_FAILURE,\n        payload: {},\n        error: true,\n        meta: {\n            monitor: monitor2Payload.address\n        }\n    });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: false\n        }\n    });\n});\n\nit('reacts to REMOVE_TOKEN', () => {\n    let state = {\n        monitors: {\n            [monitor1Payload.address]: {\n                ...monitor1Payload,\n                hostsRequested: true\n            },\n            [monitor2Payload.address]: {\n                ...monitor2Payload,\n                hostsRequested: false\n            }\n        }\n    };\n    state = reducer(state, { type: types.REMOVE_TOKEN });\n    expect(state.monitors).toEqual({\n        [monitor1Payload.address]: {\n            ...monitor1Payload,\n            hostsRequested: false\n        },\n        [monitor2Payload.address]: {\n            ...monitor2Payload,\n            hostsRequested: false\n        }\n    });\n});\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/__tests__/monitors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 549,
    "kind": "variable",
    "name": "monitor1Payload",
    "memberof": "src/reducers/__tests__/monitors.js",
    "static": true,
    "longname": "src/reducers/__tests__/monitors.js~monitor1Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"address\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 550,
    "kind": "variable",
    "name": "monitor2Payload",
    "memberof": "src/reducers/__tests__/monitors.js",
    "static": true,
    "longname": "src/reducers/__tests__/monitors.js~monitor2Payload",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/__tests__/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"address\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 551,
    "kind": "file",
    "name": "src/reducers/auth.js",
    "content": "import { combineReducers } from 'redux';\nimport * as types from '../actions/types';\n\nexport const getAuthServer = state => state.authServer;\nexport const getToken = state => state.token;\nexport const getTokenRequested = state => state.tokenRequested;\n\nconst token = (state = null, action) => {\n    switch (action.type) {\n        case types.SIGN_IN_SUCCESS:\n        case types.SIGN_UP_SUCCESS:\n            return action.payload.access_token;\n        case types.REMOVE_TOKEN:\n            return null;\n        default:\n            return state;\n    }\n};\n\nconst tokenRequested = (state = false, action) => {\n    switch (action.type) {\n        case types.SIGN_IN_REQUEST:\n        case types.SIGN_UP_REQUEST:\n            return true;\n        case types.SIGN_IN_SUCCESS:\n        case types.SIGN_UP_SUCCESS:\n        case types.SIGN_IN_FAILURE:\n        case types.SIGN_UP_FAILURE:\n            return false;\n        default:\n            return state;\n    }\n};\n\nconst authServer = (state = DEFAULT_AUTH_SERVER, action) => {\n    switch (action.type) {\n        case types.CHANGE_AUTH_SERVER:\n            return action.payload.address || DEFAULT_AUTH_SERVER;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({ token, tokenRequested, authServer });\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 552,
    "kind": "function",
    "name": "getAuthServer",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getAuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": "{getAuthServer}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 553,
    "kind": "function",
    "name": "getToken",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": "{getToken}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 554,
    "kind": "function",
    "name": "getTokenRequested",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~getTokenRequested",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": "{getTokenRequested}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 555,
    "kind": "function",
    "name": "token",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~token",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 556,
    "kind": "function",
    "name": "tokenRequested",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~tokenRequested",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 557,
    "kind": "function",
    "name": "authServer",
    "memberof": "src/reducers/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/auth.js~authServer",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_AUTH_SERVER",
        "defaultValue": "DEFAULT_AUTH_SERVER"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 558,
    "kind": "file",
    "name": "src/reducers/historicalCharts.js",
    "content": "import { combineReducers } from 'redux';\nimport * as types from '../actions/types';\n\nexport const getHistoricalChartById = (state, id) => state.byId[id];\nexport const getHistoricalChartsArray = state => state.allIds.map(id => state.byId[id]);\n\nconst chart = (state, action) => {\n    switch (action.type) {\n        case types.ADD_HISTORICAL_CHART:\n            return {\n                id: action.payload.id,\n                metric1: action.payload.metric,\n                metric2: null,\n                hosts1: [],\n                hosts2: null,\n                invalidated: false,\n                measurements1: {},\n                measurements2: null,\n                start: action.payload.start,\n                end: action.payload.end\n            };\n        case types.SET_HISTORICAL_CHART_RANGE:\n            return {\n                ...state,\n                ...action.payload\n            };\n        case types.SET_HISTORICAL_CHART_METRIC1:\n            return {\n                ...state,\n                hosts1: [],\n                metric1: action.payload.metric\n            };\n        case types.SET_HISTORICAL_CHART_METRIC2:\n            return {\n                ...state,\n                metric2: action.payload.metric,\n                hosts2: action.payload.metric ? [] : null,\n                measurements2: action.payload.metric ? {} : null\n            };\n        case types.ADD_HISTORICAL_CHART_HOST1:\n            return {\n                ...state,\n                hosts1: [\n                    ...state.hosts1,\n                    action.payload.host\n                ]\n            };\n        case types.ADD_HISTORICAL_CHART_HOST2:\n            return {\n                ...state,\n                hosts2: [\n                    ...state.hosts2,\n                    action.payload.host\n                ]\n            };\n        case types.REMOVE_HISTORICAL_CHART_HOST1: {\n            const hostIdx = state.hosts1.indexOf(action.meta.host);\n            return {\n                ...state,\n                hosts1: [\n                    ...state.hosts1.slice(0, hostIdx),\n                    ...state.hosts1.slice(hostIdx + 1)\n                ]\n            };\n        }\n        case types.REMOVE_HISTORICAL_CHART_HOST2: {\n            const hostIdx = state.hosts2.indexOf(action.meta.host);\n            return {\n                ...state,\n                hosts2: [\n                    ...state.hosts2.slice(0, hostIdx),\n                    ...state.hosts2.slice(hostIdx + 1)\n                ]\n            };\n        }\n        case types.GET_HISTORICAL_MEASUREMENTS_REQUEST:\n            return {\n                ...state,\n                invalidated: true\n            };\n        case types.GET_HISTORICAL_MEASUREMENTS_SUCCESS:\n            return {\n                ...state,\n                invalidated: false,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nconst byId = (state = {}, action) => {\n    switch (action.type) {\n        case types.ADD_HISTORICAL_CHART:\n            return {\n                ...state,\n                [action.payload.id]: chart(undefined, action)\n            };\n        case types.REMOVE_HISTORICAL_CHART: {\n            const { [action.meta.id]: target, ...rest } = state; // eslint-disable-line no-unused-vars\n            return rest;\n        }\n        case types.SET_HISTORICAL_CHART_RANGE:\n        case types.SET_HISTORICAL_CHART_METRIC1:\n        case types.SET_HISTORICAL_CHART_METRIC2:\n        case types.ADD_HISTORICAL_CHART_HOST1:\n        case types.ADD_HISTORICAL_CHART_HOST2:\n        case types.REMOVE_HISTORICAL_CHART_HOST1:\n        case types.REMOVE_HISTORICAL_CHART_HOST2:\n        case types.GET_HISTORICAL_MEASUREMENTS_REQUEST:\n        case types.GET_HISTORICAL_MEASUREMENTS_SUCCESS:\n            return {\n                ...state,\n                [action.meta.id]: chart(state[action.meta.id], action)\n            };\n        default:\n            return state;\n    }\n};\n\nconst allIds = (state = [], action) => {\n    switch (action.type) {\n        case types.ADD_HISTORICAL_CHART:\n            return [\n                ...state,\n                action.payload.id\n            ];\n        case types.REMOVE_HISTORICAL_CHART: {\n            const targetIdx = state.indexOf(action.meta.id);\n            return [\n                ...state.slice(0, targetIdx),\n                ...state.slice(targetIdx + 1)\n            ];\n        }\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({ byId, allIds });\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/historicalCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 559,
    "kind": "function",
    "name": "getHistoricalChartById",
    "memberof": "src/reducers/historicalCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/historicalCharts.js~getHistoricalChartById",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/historicalCharts.js",
    "importStyle": "{getHistoricalChartById}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 560,
    "kind": "function",
    "name": "getHistoricalChartsArray",
    "memberof": "src/reducers/historicalCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/historicalCharts.js~getHistoricalChartsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/historicalCharts.js",
    "importStyle": "{getHistoricalChartsArray}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "chart",
    "memberof": "src/reducers/historicalCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/historicalCharts.js~chart",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 562,
    "kind": "function",
    "name": "byId",
    "memberof": "src/reducers/historicalCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/historicalCharts.js~byId",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 563,
    "kind": "function",
    "name": "allIds",
    "memberof": "src/reducers/historicalCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/historicalCharts.js~allIds",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/historicalCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "src/reducers/hosts.js",
    "content": "import * as types from '../actions/types';\n\nexport const getMonitorByHost = (state, host) => state[host] ? state[host].monitor : null;\nexport const getHostsArray = state => Object.values(state).map(h => ({ ...h, metrics: Object.values(h.metrics) }));\n\nexport const getMetricsAll = state => Array.from(Object.values(state).reduce((set, h) => {\n    Object.keys(h.metrics).forEach(m => set.add(m));\n    return set;\n}, new Set()));\n\nexport const getMetrics = state => {\n    const built = {};\n    for (const host of Object.values(state)) {\n        for (const metric of Object.values(host.metrics)) {\n            if (!built[metric.id]) {\n                built[metric.id] = {};\n            }\n            built[metric.id][host.hostname] = metric;\n        }\n    }\n    return built;\n};\n\nconst extractHosts = (state, monitor) => Object.entries(state)\n    .reduce(\n        (c, [ key, obj ]) => {\n            const type = obj.monitor === monitor ? 'found' : 'rest';\n            return {\n                ...c,\n                [type]: {\n                    ...c[type],\n                    [key]: obj\n                }\n            };\n        },\n        {\n            found: {},\n            rest: {}\n        }\n    );\n\nconst setMonitor = (state, monitor) => Object.entries(state)\n    .map(([ key, obj ]) => [ key, { ...obj, monitor } ])\n    .reduce((c, [ key, obj ]) => ({ ...c, [key]: obj }), {});\n\nconst convertMetric = state => {\n    const { hosts, ...rest } = state; // eslint-disable-line no-unused-vars\n    return rest;\n};\n\nconst normalize = state => state.reduce((c, obj) => ({\n    ...c,\n    [obj.hostname]: {\n        ...obj,\n        metrics: obj.metrics.reduce((d, metric) => ({\n            ...d,\n            [metric.id]: convertMetric(metric)\n        }), {}),\n        metricsInvalidated: false\n    }\n}), {});\n\nconst host = (state, action) => {\n    switch (action.type) {\n        case types.ADD_COMPLEX_METRIC_REQUEST:\n        case types.REMOVE_COMPLEX_METRIC_REQUEST:\n            return {\n                ...state,\n                metricsInvalidated: true\n            };\n        case types.ADD_COMPLEX_METRIC_SUCCESS:\n            return {\n                ...state,\n                metricsInvalidated: false,\n                metrics: {\n                    ...state.metrics,\n                    [action.payload.id]: {\n                        ...action.payload,\n                        removable: true\n                    }\n                }\n            };\n        case types.ADD_COMPLEX_METRIC_FAILURE:\n        case types.REMOVE_COMPLEX_METRIC_FAILURE:\n            return {\n                ...state,\n                metricsInvalidated: false\n            };\n        case types.REMOVE_COMPLEX_METRIC_SUCCESS: {\n            const {\n                [action.meta.id]: metricToRemove, // eslint-disable-line no-unused-vars\n                ...metricsToLeave\n            } = state.metrics;\n            return {\n                ...state,\n                metricsInvalidated: false,\n                metrics: metricsToLeave\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case types.GET_HOSTS_SUCCESS:\n            return {\n                ...extractHosts(state, action.meta.monitor).rest,\n                ...setMonitor(normalize(action.payload), action.meta.monitor)\n            };\n        case types.SET_MONITOR_ADDRESS: {\n            const hostsExtracted = extractHosts(state, action.meta.monitor);\n            return {\n                ...hostsExtracted.rest,\n                ...setMonitor(hostsExtracted.found, action.payload.address)\n            };\n        }\n        case types.REMOVE_MONITOR:\n            return extractHosts(state, action.meta.monitor).rest;\n        case types.REMOVE_TOKEN:\n            return {};\n        case types.ADD_COMPLEX_METRIC_REQUEST:\n        case types.ADD_COMPLEX_METRIC_SUCCESS:\n        case types.ADD_COMPLEX_METRIC_FAILURE:\n        case types.REMOVE_COMPLEX_METRIC_REQUEST:\n        case types.REMOVE_COMPLEX_METRIC_SUCCESS:\n        case types.REMOVE_COMPLEX_METRIC_FAILURE: {\n            const { [action.meta.host]: target, ...rest } = state;\n            return {\n                ...rest,\n                [action.meta.host]: host(target, action)\n            };\n        }\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/hosts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "function",
    "name": "getMonitorByHost",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~getMonitorByHost",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": "{getMonitorByHost}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 566,
    "kind": "function",
    "name": "getHostsArray",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~getHostsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": "{getHostsArray}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "getMetricsAll",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~getMetricsAll",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": "{getMetricsAll}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 568,
    "kind": "function",
    "name": "getMetrics",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~getMetrics",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": "{getMetrics}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "function",
    "name": "extractHosts",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~extractHosts",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 570,
    "kind": "function",
    "name": "setMonitor",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~setMonitor",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 571,
    "kind": "function",
    "name": "convertMetric",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~convertMetric",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 572,
    "kind": "function",
    "name": "normalize",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~normalize",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 573,
    "kind": "function",
    "name": "host",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~host",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 574,
    "kind": "function",
    "name": "hosts",
    "memberof": "src/reducers/hosts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/hosts.js~hosts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/hosts.js",
    "importStyle": "hosts",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 575,
    "kind": "file",
    "name": "src/reducers/index.js",
    "content": "import moment from 'moment';\nimport { combineReducers } from 'redux';\nimport auth, * as fromAuth from './auth';\nimport monitors, * as fromMonitors from './monitors';\nimport hosts, * as fromHosts from './hosts';\nimport liveCharts, * as fromLiveCharts from './liveCharts';\nimport historicalCharts, * as fromHistoricalCharts from './historicalCharts';\n\nexport const getAuthServer = state => fromAuth.getAuthServer(state.auth);\nexport const getToken = state => fromAuth.getToken(state.auth);\nexport const getTokenRequested = state => fromAuth.getTokenRequested(state.auth);\n\nexport const convertMonitorsFromObj = state => fromMonitors.convertMonitorsFromObj(state.monitors);\nexport const getMonitorsAddresses = state => fromMonitors.getMonitorsAddresses(state.monitors);\nexport const getMonitorsArray = state => fromMonitors.getMonitorsArray(state.monitors);\nexport const getMonitorsHostsInvalidated = state => fromMonitors.getMonitorsHostsInvalidated(state.monitors);\n\nexport const getMonitorByHost = (state, host) => fromHosts.getMonitorByHost(state.hosts, host);\nexport const getHostsArray = state => fromHosts.getHostsArray(state.hosts);\nexport const getMetricsAll = state => fromHosts.getMetricsAll(state.hosts);\nexport const getMetrics = state => fromHosts.getMetrics(state.hosts);\n\nexport const getLiveChartById = (state, id) => fromLiveCharts.getLiveChartById(state.liveCharts, id);\nexport const getLiveChartsAllIds = state => fromLiveCharts.getLiveChartsAllIds(state.liveCharts);\nexport const getLiveChartsArray = state => fromLiveCharts.getLiveChartsArray(state.liveCharts);\n\nexport const getHistoricalChartById = (state, id) => (\n    fromHistoricalCharts.getHistoricalChartById(state.historicalCharts, id)\n);\nexport const getHistoricalChartsArray = state => fromHistoricalCharts.getHistoricalChartsArray(state.historicalCharts);\n\nexport const getPathname = state => state.router.location.pathname;\nexport const getLocation = state => state.router.location;\n\nexport const getLiveChartByMonitors = (state, id) => {\n    const chart = getLiveChartById(state, id);\n    const hostsByMonitors = {};\n    for (const host of chart.hosts) {\n        const monitor = getMonitorByHost(state, host);\n        if (monitor) {\n            if (!hostsByMonitors[monitor]) {\n                hostsByMonitors[monitor] = [];\n            }\n            hostsByMonitors[monitor].push(host);\n        }\n    }\n    return {\n        measurements: chart.measurements,\n        hostsByMonitors\n    };\n};\n\nexport const getHistoricalChartsByMonitors = (state, id) => {\n    const chart = getHistoricalChartById(state, id);\n    const hostsByMetricsAndMonitors = {};\n    for (const host of chart.hosts1) {\n        const monitor = getMonitorByHost(state, host);\n        if (!hostsByMetricsAndMonitors[monitor]) {\n            hostsByMetricsAndMonitors[monitor] = { hosts1: [] };\n        }\n        hostsByMetricsAndMonitors[monitor].hosts1.push(host);\n    }\n    if (chart.metric2) {\n        for (const host of chart.hosts2) {\n            const monitor = getMonitorByHost(state, host);\n            if (!hostsByMetricsAndMonitors[monitor]) {\n                hostsByMetricsAndMonitors[monitor] = { hosts2: [] };\n            }\n            else if (!hostsByMetricsAndMonitors[monitor].hosts2) {\n                hostsByMetricsAndMonitors[monitor].hosts2 = [];\n            }\n            hostsByMetricsAndMonitors[monitor].hosts2.push(host);\n        }\n    }\n    return hostsByMetricsAndMonitors;\n};\n\nexport const getLiveChartLastTime = (state, id, monitor) => {\n    const chart = getLiveChartById(state, id);\n    const monitorHosts = Object.values(chart.hosts).filter(host => state.hosts[host].monitor === monitor);\n    return monitorHosts.reduce((c, host) => {\n        const data = chart.measurements[host];\n        if (!data || !data.length) {\n            return c;\n        }\n        const lastPoint = data.slice(-1).pop();\n        return c && moment(c).isAfter(lastPoint.time) ? c : lastPoint.time;\n    }, null);\n};\n\nexport default combineReducers({ auth, monitors, hosts, liveCharts, historicalCharts });\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "function",
    "name": "getAuthServer",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getAuthServer",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getAuthServer}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 577,
    "kind": "function",
    "name": "getToken",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getToken}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 578,
    "kind": "function",
    "name": "getTokenRequested",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getTokenRequested",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getTokenRequested}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 579,
    "kind": "function",
    "name": "convertMonitorsFromObj",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~convertMonitorsFromObj",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{convertMonitorsFromObj}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 580,
    "kind": "function",
    "name": "getMonitorsAddresses",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsAddresses",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMonitorsAddresses}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 581,
    "kind": "function",
    "name": "getMonitorsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMonitorsArray}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 582,
    "kind": "function",
    "name": "getMonitorsHostsInvalidated",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorsHostsInvalidated",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMonitorsHostsInvalidated}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 583,
    "kind": "function",
    "name": "getMonitorByHost",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMonitorByHost",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMonitorByHost}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 584,
    "kind": "function",
    "name": "getHostsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getHostsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getHostsArray}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 585,
    "kind": "function",
    "name": "getMetricsAll",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMetricsAll",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMetricsAll}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 586,
    "kind": "function",
    "name": "getMetrics",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getMetrics",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getMetrics}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 587,
    "kind": "function",
    "name": "getLiveChartById",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartById",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLiveChartById}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 588,
    "kind": "function",
    "name": "getLiveChartsAllIds",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartsAllIds",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLiveChartsAllIds}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 589,
    "kind": "function",
    "name": "getLiveChartsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLiveChartsArray}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 590,
    "kind": "function",
    "name": "getHistoricalChartById",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getHistoricalChartById",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getHistoricalChartById}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 591,
    "kind": "function",
    "name": "getHistoricalChartsArray",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getHistoricalChartsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getHistoricalChartsArray}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 592,
    "kind": "function",
    "name": "getPathname",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getPathname",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getPathname}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 593,
    "kind": "function",
    "name": "getLocation",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLocation",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLocation}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 594,
    "kind": "function",
    "name": "getLiveChartByMonitors",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartByMonitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLiveChartByMonitors}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"measurements\": *, \"hostsByMonitors\": *}"
      ]
    }
  },
  {
    "__docId__": 595,
    "kind": "function",
    "name": "getHistoricalChartsByMonitors",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getHistoricalChartsByMonitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getHistoricalChartsByMonitors}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 596,
    "kind": "function",
    "name": "getLiveChartLastTime",
    "memberof": "src/reducers/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/index.js~getLiveChartLastTime",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/index.js",
    "importStyle": "{getLiveChartLastTime}",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "file",
    "name": "src/reducers/liveCharts.js",
    "content": "import { combineReducers } from 'redux';\nimport * as types from '../actions/types';\n\nexport const getLiveChartsAllIds = state => state.allIds;\nexport const getLiveChartById = (state, id) => state.byId[id];\nexport const getLiveChartsArray = state => state.allIds.map(id => state.byId[id]);\n\nconst chart = (state, action) => {\n    switch (action.type) {\n        case types.ADD_LIVE_CHART:\n            return {\n                ...action.payload,\n                hosts: [],\n                invalidated: false,\n                measurements: {}\n            };\n        case types.SET_LIVE_CHART_METRIC:\n            return {\n                ...state,\n                hosts: [],\n                metric: action.payload.metric\n            };\n        case types.ADD_LIVE_CHART_HOST:\n            return {\n                ...state,\n                hosts: [\n                    ...state.hosts,\n                    action.payload.host\n                ]\n            };\n        case types.REMOVE_LIVE_CHART_HOST: {\n            const hostIdx = state.hosts.indexOf(action.meta.host);\n            return {\n                ...state,\n                hosts: [\n                    ...state.hosts.slice(0, hostIdx),\n                    ...state.hosts.slice(hostIdx + 1)\n                ]\n            };\n        }\n        case types.GET_LIVE_MEASUREMENTS_REQUEST:\n            return {\n                ...state,\n                invalidated: true\n            };\n        case types.GET_LIVE_MEASUREMENTS_SUCCESS:\n            return {\n                ...state,\n                invalidated: false,\n                measurements: action.payload.measurements\n            };\n        default:\n            return state;\n    }\n};\n\nconst byId = (state = {}, action) => {\n    switch (action.type) {\n        case types.ADD_LIVE_CHART:\n            return {\n                ...state,\n                [action.payload.id]: chart(undefined, action)\n            };\n        case types.REMOVE_LIVE_CHART: {\n            const { [action.meta.id]: toRemove, ...rest } = state; // eslint-disable-line no-unused-vars\n            return rest;\n        }\n        case types.SET_LIVE_CHART_METRIC:\n        case types.ADD_LIVE_CHART_HOST:\n        case types.REMOVE_LIVE_CHART_HOST:\n        case types.GET_LIVE_MEASUREMENTS_REQUEST:\n        case types.GET_LIVE_MEASUREMENTS_SUCCESS:\n            return {\n                ...state,\n                [action.meta.id]: chart(state[action.meta.id], action)\n            };\n        case types.REMOVE_TOKEN:\n            return {};\n        default:\n            return state;\n    }\n};\n\nconst allIds = (state = [], action) => {\n    switch (action.type) {\n        case types.ADD_LIVE_CHART:\n            return [\n                ...state,\n                action.payload.id\n            ];\n        case types.REMOVE_LIVE_CHART: {\n            const toRemoveIdx = state.indexOf(action.meta.id);\n            return [\n                ...state.slice(0, toRemoveIdx),\n                ...state.slice(toRemoveIdx + 1)\n            ];\n        }\n        case types.REMOVE_TOKEN:\n            return [];\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({ byId, allIds });\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/liveCharts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 598,
    "kind": "function",
    "name": "getLiveChartsAllIds",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~getLiveChartsAllIds",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": "{getLiveChartsAllIds}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 599,
    "kind": "function",
    "name": "getLiveChartById",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~getLiveChartById",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": "{getLiveChartById}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 600,
    "kind": "function",
    "name": "getLiveChartsArray",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~getLiveChartsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": "{getLiveChartsArray}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 601,
    "kind": "function",
    "name": "chart",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~chart",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 602,
    "kind": "function",
    "name": "byId",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~byId",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 603,
    "kind": "function",
    "name": "allIds",
    "memberof": "src/reducers/liveCharts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/liveCharts.js~allIds",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/liveCharts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 604,
    "kind": "file",
    "name": "src/reducers/monitors.js",
    "content": "import * as types from '../actions/types';\n\nexport const convertMonitorsToObj = state => {\n    try {\n        return state.reduce((c, m) => ({\n            ...c,\n            [m.address]: {\n                ...m,\n                hostsRequested: false\n            }\n        }), {});\n    }\n    catch (error) {\n        return {};\n    }\n};\n\nexport const convertMonitorsFromObj = state => Object.values(state)\n    .map(({ address, description }) => ({ address, description }));\n\nexport const getMonitorsAddresses = state => Object.keys(state);\nexport const getMonitorsArray = state => Object.values(state);\nexport const getMonitorsHostsInvalidated = state => Object.values(state).some(m => m.hostsRequested);\n\nconst defaultMonitorsObj = convertMonitorsToObj(DEFAULT_MONITORS);\n\nconst monitor = (state = {}, action) => {\n    switch (action.type) {\n        case types.ADD_MONITOR:\n            return {\n                ...action.payload,\n                hostsRequested: false\n            };\n        case types.SET_MONITOR_ADDRESS:\n            return {\n                ...state,\n                address: action.payload.address\n            };\n        case types.SET_MONITOR_DESCRIPTION:\n            return {\n                ...state,\n                description: action.payload.description\n            };\n        case types.GET_HOSTS_REQUEST:\n            return {\n                ...state,\n                hostsRequested: true\n            };\n        case types.GET_HOSTS_SUCCESS:\n        case types.GET_HOSTS_FAILURE:\n        case types.REMOVE_TOKEN:\n            return {\n                ...state,\n                hostsRequested: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default (state = defaultMonitorsObj, action) => {\n    switch (action.type) {\n        case types.ADD_MONITOR:\n            return {\n                ...state,\n                [action.payload.address]: monitor(undefined, action)\n            };\n        case types.SET_MONITOR_ADDRESS: {\n            const { [action.meta.monitor]: target, ...rest } = state;\n            return {\n                ...rest,\n                [action.payload.address]: monitor(target, action)\n            };\n        }\n        case types.SET_MONITOR_DESCRIPTION:\n        case types.GET_HOSTS_REQUEST:\n        case types.GET_HOSTS_SUCCESS:\n        case types.GET_HOSTS_FAILURE:\n            return {\n                ...state,\n                [action.meta.monitor]: monitor(state[action.meta.monitor], action)\n            };\n        case types.REMOVE_TOKEN:\n            return Object.entries(state).reduce((c, [ k, v ]) => ({\n                ...c,\n                [k]: monitor(v, action)\n            }), {});\n        case types.REMOVE_MONITOR: {\n            const { [action.meta.monitor]: toRemove, ...notRemoved } = state; // eslint-disable-line no-unused-vars\n            return notRemoved;\n        }\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/reducers/monitors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 605,
    "kind": "function",
    "name": "convertMonitorsToObj",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~convertMonitorsToObj",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "{convertMonitorsToObj}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 606,
    "kind": "function",
    "name": "convertMonitorsFromObj",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~convertMonitorsFromObj",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "{convertMonitorsFromObj}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 607,
    "kind": "function",
    "name": "getMonitorsAddresses",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~getMonitorsAddresses",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "{getMonitorsAddresses}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 608,
    "kind": "function",
    "name": "getMonitorsArray",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~getMonitorsArray",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "{getMonitorsArray}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 609,
    "kind": "function",
    "name": "getMonitorsHostsInvalidated",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~getMonitorsHostsInvalidated",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "{getMonitorsHostsInvalidated}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 610,
    "kind": "variable",
    "name": "defaultMonitorsObj",
    "memberof": "src/reducers/monitors.js",
    "static": true,
    "longname": "src/reducers/monitors.js~defaultMonitorsObj",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 611,
    "kind": "function",
    "name": "monitor",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~monitor",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 612,
    "kind": "function",
    "name": "monitors",
    "memberof": "src/reducers/monitors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/monitors.js~monitors",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/reducers/monitors.js",
    "importStyle": "monitors",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultMonitorsObj",
        "defaultValue": "defaultMonitorsObj"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "file",
    "name": "src/routes.js",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router';\nimport Historical from './pages/Historical';\nimport Live from './pages/Live';\nimport Metrics from './pages/Metrics';\nimport Monitors from './pages/Monitors';\nimport NotFound from './pages/NotFound';\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/SignUp';\nimport { getToken } from './reducers';\n\nexport const LIVE_ROUTE = '/live';\nexport const HISTORICAL_ROUTE = '/historical';\nexport const MONITORS_ROUTE = '/monitors';\nexport const HOSTS_ROUTE = '/hosts';\nexport const LOGIN_ROUTE = '/login';\nexport const REGISTRATION_ROUTE = '/registration';\n\nexport const routes = {\n    [LIVE_ROUTE]: {\n        tokenRequired: true,\n        component: Live\n    },\n    [HISTORICAL_ROUTE]: {\n        tokenRequired: true,\n        component: Historical\n    },\n    [MONITORS_ROUTE]: {\n        tokenRequired: true,\n        component: Monitors\n    },\n    [HOSTS_ROUTE]: {\n        tokenRequired: true,\n        component: Metrics\n    },\n    [LOGIN_ROUTE]: {\n        tokenRequired: false,\n        component: SignIn\n    },\n    [REGISTRATION_ROUTE]: {\n        tokenRequired: false,\n        component: SignUp\n    }\n};\n\nexport const isRouteDefined = route => Boolean(routes[route]);\n\nexport const getDefaultRouteByToken = token => token ? LIVE_ROUTE : LOGIN_ROUTE;\n\nexport const isTokenRequired = route => routes[route].tokenRequired;\n\nconst mapStateToProps = state => ({\n    token: getToken(state)\n});\n\nconst mapDispatchToProps = {};\n\nconst wrapWithAuth = tokenRequired => Component => connect(mapStateToProps, mapDispatchToProps)(\n\n    function WithAuth({ token, ...rest }) {\n        if (Boolean(tokenRequired) === Boolean(token)) {\n            return React.createElement(Component, rest);\n        }\n        else {\n            return null;\n        }\n    }\n\n);\n\nexport const getRoutes = () => (\n    <Switch>\n        {Object.entries(routes).map(([ path, r ]) => (\n            <Route key={path} path={path} component={wrapWithAuth(r.tokenRequired)(r.component)} />\n        ))}\n        <Route component={NotFound} />\n    </Switch>\n);\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 614,
    "kind": "variable",
    "name": "LIVE_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~LIVE_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{LIVE_ROUTE}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "variable",
    "name": "HISTORICAL_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~HISTORICAL_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{HISTORICAL_ROUTE}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "variable",
    "name": "MONITORS_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~MONITORS_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{MONITORS_ROUTE}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "variable",
    "name": "HOSTS_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~HOSTS_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{HOSTS_ROUTE}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "variable",
    "name": "LOGIN_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~LOGIN_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{LOGIN_ROUTE}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 619,
    "kind": "variable",
    "name": "REGISTRATION_ROUTE",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~REGISTRATION_ROUTE",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{REGISTRATION_ROUTE}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "variable",
    "name": "routes",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~routes",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{routes}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"LIVE_ROUTE\": *, \"HISTORICAL_ROUTE\": *, \"MONITORS_ROUTE\": *, \"HOSTS_ROUTE\": *, \"LOGIN_ROUTE\": *, \"REGISTRATION_ROUTE\": *}"
      ]
    }
  },
  {
    "__docId__": 621,
    "kind": "function",
    "name": "isRouteDefined",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~isRouteDefined",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{isRouteDefined}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 622,
    "kind": "function",
    "name": "getDefaultRouteByToken",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~getDefaultRouteByToken",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{getDefaultRouteByToken}",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 623,
    "kind": "function",
    "name": "isTokenRequired",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~isTokenRequired",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{isTokenRequired}",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 624,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 625,
    "kind": "variable",
    "name": "mapDispatchToProps",
    "memberof": "src/routes.js",
    "static": true,
    "longname": "src/routes.js~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 626,
    "kind": "function",
    "name": "wrapWithAuth",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~wrapWithAuth",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "tokenRequired",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 627,
    "kind": "function",
    "name": "getRoutes",
    "memberof": "src/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/routes.js~getRoutes",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/routes.js",
    "importStyle": "{getRoutes}",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 628,
    "kind": "file",
    "name": "src/sagas/api.js",
    "content": "import moment from 'moment';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport { select, call, put, all } from 'redux-saga/effects';\nimport { getAuthServer, getToken, getMonitorByHost, getLiveChartByMonitors, getLiveChartLastTime,\n    getHistoricalChartsByMonitors, getLiveChartById, getHistoricalChartById } from '../reducers';\nimport * as actions from '../actions/sync';\nimport * as api from '../api';\nimport { getStartTimeForLiveCharts } from '../times';\n\nexport function* signUp({ payload }) {\n    const server = yield select(getAuthServer);\n    try {\n        const result = yield call(api.registration, server, payload);\n        yield put(actions.signUpSuccess(result));\n    }\n    catch (error) {\n        yield put(actions.signUpFailure(error));\n    }\n}\n\nexport function* signIn({ payload }) {\n    const server = yield select(getAuthServer);\n    try {\n        const result = yield call(api.login, server, payload);\n        yield put(actions.signInSuccess(result));\n    }\n    catch (error) {\n        yield put(actions.signInFailure(error));\n    }\n}\n\nexport function* addComplexMetric({ payload, meta }) {\n    const token = yield select(getToken);\n    const monitor = yield select(getMonitorByHost, meta.host);\n    try {\n        const result = yield call(api.postComplexMetric, monitor, token, meta.host, payload);\n        yield put(actions.addComplexMetricSuccess({ ...payload, ...result }, meta.host));\n    }\n    catch (error) {\n        yield put(actions.addComplexMetricFailure(error, meta.host));\n    }\n}\n\nexport function* removeComplexMetric({ meta }) {\n    const token = yield select(getToken);\n    const monitor = yield select(getMonitorByHost, meta.host);\n    try {\n        yield call(api.deleteComplexMetric, monitor, token, meta.host, meta.id);\n        yield put(actions.removeComplexMetricSucces(meta.id, meta.host));\n    }\n    catch (error) {\n        yield put(actions.removeComplexMetricFailure(error, meta.host));\n    }\n}\n\nexport function* getHosts({ meta }) {\n    const token = yield select(getToken);\n    try {\n        const result = yield call(api.getHosts, meta.monitor, token);\n        yield put(actions.getHostsSuccess(result, meta.monitor));\n    }\n    catch (error) {\n        yield put(actions.getHostsFailure(error, meta.monitor));\n    }\n}\n\nexport function* getLiveChartMeasurementsForSingleMonitor(initialFetch, id, monitor, hosts) {\n    const token = yield select(getToken);\n    const { metric } = yield select(getLiveChartById, id);\n    let start;\n    if (!initialFetch) {\n        start = yield select(getLiveChartLastTime, id, monitor);\n    }\n    if (!start) {\n        start = yield call(getStartTimeForLiveCharts);\n    }\n    try {\n        const q = `metric_id:${metric},hostname:/(${hosts.map(escapeStringRegexp).join('|')})/`;\n        const data = yield call(api.getMeasurements, monitor, token, { start, q });\n        return { data };\n    }\n    catch (error) {\n        return error;\n    }\n}\n\nexport function* getLiveChartMeasurements({ meta }) {\n    let { measurements, hostsByMonitors } = yield select(getLiveChartByMonitors, meta.id);\n    if (meta.initialFetch) {\n        measurements = {};\n    }\n    if (Object.keys(hostsByMonitors).length) {\n        const results = yield all(\n            Object.entries(hostsByMonitors).reduce((c, [ monitor, hosts ]) => ({\n                ...c,\n                [monitor]: call(\n                    getLiveChartMeasurementsForSingleMonitor,\n                    meta.initialFetch,\n                    meta.id,\n                    monitor,\n                    hosts\n                )\n            }), {})\n        );\n        for (const monitor of Object.keys(results)) {\n            const result = results[monitor];\n            if (!result.data) {\n                yield put(actions.getLiveMeasurementsFailure(result, meta.id, monitor));\n            }\n            else {\n                for (const measurement of result.data) {\n                    if (meta.initialFetch) {\n                        measurements[measurement.hostname] = measurement.data;\n                    }\n                    else {\n                        const hostMeas = measurements[measurement.hostname];\n                        const start = yield call(getStartTimeForLiveCharts);\n                        const startMom = moment(start);\n                        let i = 0;\n                        while (i < hostMeas.length && startMom.isAfter(hostMeas[i].time)) {\n                            ++i;\n                        }\n                        measurements[measurement.hostname] = [\n                            ...hostMeas.slice(i),\n                            ...measurement.data\n                        ];\n                    }\n                }\n            }\n        }\n    }\n    yield put(actions.getLiveMeasurementsSuccess({ measurements }, meta.id));\n}\n\nexport function* getHistoricalChartMeasurementsForSingleMonitor(id, monitor, hosts1, hosts2) {\n    const token = yield select(getToken);\n    const { metric1, metric2, start, end } = yield select(getHistoricalChartById, id);\n    try {\n        let q = [];\n        if (hosts1) {\n            q.push(`metric_id:${metric1},hostname:/(${hosts1.map(escapeStringRegexp).join('|')})/`);\n        }\n        if (hosts2) {\n            q.push(`metric_id:${metric2},hostname:/(${hosts2.map(escapeStringRegexp).join('|')})/`);\n        }\n        q = q.join(';');\n        const data = yield call(api.getMeasurements, monitor, token, { start, end, q });\n        return { data };\n    }\n    catch (error) {\n        return error;\n    }\n}\n\nexport function* getHistoricalChartMeasurements({ meta }) {\n    const { metric2 } = yield select(getHistoricalChartById, meta.id);\n    let measurements1 = {};\n    let measurements2 = metric2 ? {} : null;\n    const hostsByMetricsAndMonitors = yield select(getHistoricalChartsByMonitors, meta.id);\n    if (Object.keys(hostsByMetricsAndMonitors).length) {\n        const results = yield all(\n            Object.entries(hostsByMetricsAndMonitors).reduce((c, [ monitor, { hosts1, hosts2 }]) => ({\n                ...c,\n                [monitor]: call(\n                    getHistoricalChartMeasurementsForSingleMonitor,\n                    meta.id,\n                    monitor,\n                    hosts1,\n                    hosts2\n                )\n            }), {})\n        );\n        for (const monitor of Object.keys(results)) {\n            const result = results[monitor];\n            if (!result.data) {\n                yield put(actions.getHistoricalMeasurementsFailure(result, meta.id, monitor));\n            }\n            else {\n                for (const measurement of result.data) {\n                    if (measurement.metric_id === metric2) {\n                        measurements2[measurement.hostname] = measurement.data;\n                    }\n                    else {\n                        measurements1[measurement.hostname] = measurement.data;\n                    }\n                }\n            }\n        }\n    }\n    yield put(actions.getHistoricalMeasurementsSuccess({ measurements1, measurements2 }, meta.id));\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/sagas/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 629,
    "kind": "function",
    "name": "signUp",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~signUp",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{signUp}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"payload\": *}"
        ],
        "defaultRaw": {
          "payload": null
        },
        "defaultValue": "{\"payload\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 630,
    "kind": "function",
    "name": "signIn",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~signIn",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{signIn}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"payload\": *}"
        ],
        "defaultRaw": {
          "payload": null
        },
        "defaultValue": "{\"payload\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 631,
    "kind": "function",
    "name": "addComplexMetric",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~addComplexMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{addComplexMetric}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"payload\": *, \"meta\": *}"
        ],
        "defaultRaw": {
          "payload": null,
          "meta": null
        },
        "defaultValue": "{\"payload\":null,\"meta\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "function",
    "name": "removeComplexMetric",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~removeComplexMetric",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{removeComplexMetric}",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"meta\": *}"
        ],
        "defaultRaw": {
          "meta": null
        },
        "defaultValue": "{\"meta\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 633,
    "kind": "function",
    "name": "getHosts",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~getHosts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{getHosts}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"meta\": *}"
        ],
        "defaultRaw": {
          "meta": null
        },
        "defaultValue": "{\"meta\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 634,
    "kind": "function",
    "name": "getLiveChartMeasurementsForSingleMonitor",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~getLiveChartMeasurementsForSingleMonitor",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{getLiveChartMeasurementsForSingleMonitor}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "initialFetch",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "function",
    "name": "getLiveChartMeasurements",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~getLiveChartMeasurements",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{getLiveChartMeasurements}",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"meta\": *}"
        ],
        "defaultRaw": {
          "meta": null
        },
        "defaultValue": "{\"meta\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 636,
    "kind": "function",
    "name": "getHistoricalChartMeasurementsForSingleMonitor",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~getHistoricalChartMeasurementsForSingleMonitor",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{getHistoricalChartMeasurementsForSingleMonitor}",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "monitor",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts1",
        "types": [
          "*"
        ]
      },
      {
        "name": "hosts2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 637,
    "kind": "function",
    "name": "getHistoricalChartMeasurements",
    "memberof": "src/sagas/api.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/api.js~getHistoricalChartMeasurements",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/api.js",
    "importStyle": "{getHistoricalChartMeasurements}",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"meta\": *}"
        ],
        "defaultRaw": {
          "meta": null
        },
        "defaultValue": "{\"meta\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 638,
    "kind": "file",
    "name": "src/sagas/index.js",
    "content": "import { all, fork, select, put, cancel, takeEvery, takeLatest, take, call } from 'redux-saga/effects';\nimport { delay } from 'redux-saga';\nimport { push } from 'connected-react-router';\nimport * as types from '../actions/types';\nimport * as actions from '../actions/sync';\nimport * as apiSagas from './api';\nimport * as storageSagas from './localStorage';\nimport { getToken, getPathname, getLiveChartsAllIds, getMonitorsAddresses } from '../reducers';\nimport { getDefaultRouteByToken, isRouteDefined, isTokenRequired, LIVE_ROUTE } from '../routes';\nimport Notification from '../components/Notification';\n\nfunction* dealWithNewLocation(pathname) {\n    const isTokenSet = Boolean(yield select(getToken));\n    if (pathname === '/') {\n        const newPathname = yield call(getDefaultRouteByToken, isTokenSet);\n        yield put(push(newPathname));\n    }\n    else if (yield call(isRouteDefined, pathname)) {\n        const tokenRequired = yield call(isTokenRequired, pathname);\n        if (tokenRequired === isTokenSet) {\n            yield put(actions.changeRoutingContext({ pathname }));\n        }\n        else {\n            const newPathname = yield call(getDefaultRouteByToken, isTokenSet);\n            yield put(push(newPathname));\n        }\n    }\n    else {\n        yield put(actions.changeRoutingContext({ pathname }));\n    }\n}\n\nfunction* watchForLocationChange() {\n    yield delay(0);\n    const startLocation = yield select(getPathname);\n    let task = yield fork(dealWithNewLocation, startLocation);\n    while (true) {\n        const action = yield take([\n            '@@router/LOCATION_CHANGE',\n            types.SIGN_IN_SUCCESS,\n            types.SIGN_UP_SUCCESS,\n            types.REMOVE_TOKEN\n        ]);\n        yield cancel(task);\n        const newLocation = action.type === '@@router/LOCATION_CHANGE' ? action.payload.location.pathname : '/';\n        task = yield fork(dealWithNewLocation, newLocation);\n    }\n}\n\nfunction* keepLiveChartRefreshing(id) {\n    yield put(actions.getLiveMeasurementsRequest(id, true));\n    while(true) {\n        yield all([\n            take(types.GET_LIVE_MEASUREMENTS_SUCCESS),\n            delay(1000 * 15)\n        ]);\n        yield put(actions.getLiveMeasurementsRequest(id, false));\n    }\n}\n\nfunction* conductLiveChartsUpdates() {\n    const liveCharts = yield select(getLiveChartsAllIds);\n    const tasks = {};\n    for (const id of liveCharts) {\n        tasks[id] = yield fork(keepLiveChartRefreshing, id);\n    }\n    while (true) {\n        const action = yield take([\n            types.CHANGE_ROUTING_CONTEXT,\n            types.ADD_LIVE_CHART,\n            types.REMOVE_LIVE_CHART,\n            types.SET_LIVE_CHART_METRIC,\n            types.ADD_LIVE_CHART_HOST,\n            types.REMOVE_LIVE_CHART_HOST\n        ]);\n        if (action.type === types.CHANGE_ROUTING_CONTEXT && action.payload.pathname !== LIVE_ROUTE) {\n            yield cancel();\n        }\n        if (\n            action.type === types.REMOVE_LIVE_CHART\n            || action.type === types.SET_LIVE_CHART_METRIC\n            || action.type === types.ADD_LIVE_CHART_HOST\n            || action.type === types.REMOVE_LIVE_CHART_HOST\n        ) {\n            yield cancel(tasks[action.meta.id]);\n        }\n        if (action.type === types.ADD_LIVE_CHART) {\n            tasks[action.payload.id] = yield fork(keepLiveChartRefreshing, action.payload.id);\n        }\n        if (\n            action.type === types.SET_LIVE_CHART_METRIC\n            || action.type === types.ADD_LIVE_CHART_HOST\n            || action.type === types.REMOVE_LIVE_CHART_HOST\n        ) {\n            tasks[action.meta.id] = yield fork(keepLiveChartRefreshing, action.meta.id);\n        }\n    }\n}\n\nfunction* watchForLiveChartContext() {\n    let task;\n    const pathname = yield select(getPathname);\n    if (pathname === LIVE_ROUTE) {\n        task = yield fork(conductLiveChartsUpdates);\n    }\n    while (true) {\n        const { payload } = yield take(types.CHANGE_ROUTING_CONTEXT);\n        if (payload.pathname === LIVE_ROUTE) {\n            if (task) {\n                cancel(task);\n            }\n            task = yield fork(conductLiveChartsUpdates);\n        }\n    }\n}\n\nfunction* loginWatcher() {\n    yield take(types.CHANGE_ROUTING_CONTEXT);\n    const token = yield select(getToken);\n    let worker;\n    if (token) {\n        worker = yield fork(authSiteWatcher);\n        yield call(Notification.success, 'Sesja została przywrócona');\n    }\n    while (true) {\n        const { type } = yield take([\n            types.SIGN_IN_SUCCESS,\n            types.SIGN_UP_SUCCESS,\n            types.REMOVE_TOKEN\n        ]);\n        if (worker) {\n            yield cancel(worker);\n        }\n        if (type !== types.REMOVE_TOKEN) {\n            worker = yield fork(authSiteWatcher);\n            yield call(Notification.success, 'Zostałeś zalogowany pomyślnie');\n        }\n        else {\n            yield call(Notification.success, 'Zostałeś wylogowany pomyślnie');\n        }\n    }\n}\n\nfunction* getAllHosts() {\n    const monitors = yield select(getMonitorsAddresses);\n    yield all(monitors.map(monitor => put(actions.getHostsRequest(monitor))));\n}\n\nfunction* watchForHistoricalChartUpdates() {\n    let workers = {};\n    while (true) {\n        const action = yield take([\n            types.SET_HISTORICAL_CHART_RANGE,\n            types.SET_HISTORICAL_CHART_METRIC1,\n            types.SET_HISTORICAL_CHART_METRIC2,\n            types.ADD_HISTORICAL_CHART_HOST1,\n            types.ADD_HISTORICAL_CHART_HOST2,\n            types.REMOVE_HISTORICAL_CHART_HOST1,\n            types.REMOVE_HISTORICAL_CHART_HOST2,\n            types.REMOVE_HISTORICAL_CHART\n        ]);\n        if (workers[action.meta.id]) {\n            yield cancel(action.meta.id);\n        }\n        if (action.type !== types.REMOVE_HISTORICAL_CHART) {\n            yield put(actions.getHistoricalMeasurementsRequest(action.meta.id));\n        }\n    }\n}\n\nfunction* authSiteWatcher() {\n    yield all([\n        fork(watchForLiveChartContext),\n        fork(watchForHistoricalChartUpdates),\n        takeEvery(types.GET_HOSTS, getAllHosts),\n        takeEvery(types.ADD_COMPLEX_METRIC_REQUEST, apiSagas.addComplexMetric),\n        takeEvery(types.REMOVE_COMPLEX_METRIC_REQUEST, apiSagas.removeComplexMetric),\n        takeEvery(types.GET_HOSTS_REQUEST, apiSagas.getHosts),\n        takeEvery(types.GET_LIVE_MEASUREMENTS_REQUEST, apiSagas.getLiveChartMeasurements),\n        takeEvery(types.GET_HISTORICAL_MEASUREMENTS_REQUEST, apiSagas.getHistoricalChartMeasurements),\n        takeLatest([\n            types.ADD_MONITOR,\n            types.SET_MONITOR_ADDRESS,\n            types.SET_MONITOR_DESCRIPTION,\n            types.REMOVE_MONITOR\n        ], storageSagas.monitorsSaver),\n    ]);\n    yield put(actions.getHosts());\n}\n\nfunction* errorThrower() {\n    while (true) {\n        const action = yield take('*');\n        if (action.error) {\n            yield call(Notification.error, action.payload.message + (status ? ' (Kod ' + status + ')' : ''));\n        }\n    }\n}\n\nexport default function* root() {\n    yield all([\n        takeEvery(types.SIGN_UP_REQUEST, apiSagas.signUp),\n        takeEvery(types.SIGN_IN_REQUEST, apiSagas.signIn),\n        takeLatest(types.SIGN_IN_REQUEST, storageSagas.tokenSaver),\n        takeLatest(types.REMOVE_TOKEN, storageSagas.tokenEraser),\n        takeLatest(types.CHANGE_AUTH_SERVER, storageSagas.authServerSaver),\n        fork(watchForLocationChange),\n        fork(loginWatcher),\n        fork(errorThrower)\n    ]);\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/sagas/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 639,
    "kind": "function",
    "name": "dealWithNewLocation",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~dealWithNewLocation",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "pathname",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 640,
    "kind": "function",
    "name": "watchForLocationChange",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~watchForLocationChange",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 641,
    "kind": "function",
    "name": "keepLiveChartRefreshing",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~keepLiveChartRefreshing",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 642,
    "kind": "function",
    "name": "conductLiveChartsUpdates",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~conductLiveChartsUpdates",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 643,
    "kind": "function",
    "name": "watchForLiveChartContext",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~watchForLiveChartContext",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 644,
    "kind": "function",
    "name": "loginWatcher",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~loginWatcher",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 645,
    "kind": "function",
    "name": "getAllHosts",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~getAllHosts",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 646,
    "kind": "function",
    "name": "watchForHistoricalChartUpdates",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~watchForHistoricalChartUpdates",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 647,
    "kind": "function",
    "name": "authSiteWatcher",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~authSiteWatcher",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 648,
    "kind": "function",
    "name": "errorThrower",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~errorThrower",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 649,
    "kind": "function",
    "name": "root",
    "memberof": "src/sagas/index.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/index.js~root",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/index.js",
    "importStyle": "root",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 650,
    "kind": "file",
    "name": "src/sagas/localStorage.js",
    "content": "import { take, call, select } from 'redux-saga/effects';\nimport * as types from '../actions/types';\nimport { convertMonitorsFromObj } from '../reducers';\nimport * as storage from '../localStorage';\n\nexport function* tokenSaver({ payload }) {\n    if (payload.remember) {\n        const action = yield take(types.SIGN_IN_SUCCESS);\n        yield call(storage.saveToken, action.payload.access_token);\n    }\n}\n\nexport function* tokenEraser() {\n    yield call(storage.clearToken);\n}\n\nexport function* monitorsSaver() {\n    const monitors = yield select(convertMonitorsFromObj);\n    yield call(storage.updateMonitors, monitors);\n}\n\nexport function* authServerSaver({ payload }) {\n    yield call(storage.updateAuthServer, payload.address);\n}\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/sagas/localStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 651,
    "kind": "function",
    "name": "tokenSaver",
    "memberof": "src/sagas/localStorage.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/localStorage.js~tokenSaver",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/localStorage.js",
    "importStyle": "{tokenSaver}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"payload\": *}"
        ],
        "defaultRaw": {
          "payload": null
        },
        "defaultValue": "{\"payload\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 652,
    "kind": "function",
    "name": "tokenEraser",
    "memberof": "src/sagas/localStorage.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/localStorage.js~tokenEraser",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/localStorage.js",
    "importStyle": "{tokenEraser}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 653,
    "kind": "function",
    "name": "monitorsSaver",
    "memberof": "src/sagas/localStorage.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/localStorage.js~monitorsSaver",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/localStorage.js",
    "importStyle": "{monitorsSaver}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 654,
    "kind": "function",
    "name": "authServerSaver",
    "memberof": "src/sagas/localStorage.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/sagas/localStorage.js~authServerSaver",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/sagas/localStorage.js",
    "importStyle": "{authServerSaver}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"payload\": *}"
        ],
        "defaultRaw": {
          "payload": null
        },
        "defaultValue": "{\"payload\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 655,
    "kind": "file",
    "name": "src/setupTests.js",
    "content": "import { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({ adapter: new Adapter() });\n\nclass LocalStorageMock {\n\n    constructor() {\n        this.store = {};\n    }\n\n    clear() {\n        this.store = {};\n    }\n\n    getItem(key) {\n        return this.store[key] || null;\n    }\n\n    setItem(key, value) {\n        this.store[key] = value;\n    }\n\n    removeItem(key) {\n        delete this.store[key];\n    }\n\n}\n\nglobal.localStorage = new LocalStorageMock();\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/setupTests.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 656,
    "kind": "class",
    "name": "LocalStorageMock",
    "memberof": "src/setupTests.js",
    "static": true,
    "longname": "src/setupTests.js~LocalStorageMock",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/setupTests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 657,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 658,
    "kind": "member",
    "name": "store",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#store",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 659,
    "kind": "method",
    "name": "clear",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#clear",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "getItem",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "setItem",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "removeItem",
    "memberof": "src/setupTests.js~LocalStorageMock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/setupTests.js~LocalStorageMock#removeItem",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 664,
    "kind": "file",
    "name": "src/times.js",
    "content": "import moment from 'moment';\n\nexport const getStartTimeForLiveCharts = () => moment().subtract(15, 'minutes').toISOString();\nexport const getCurrentTime = () => moment().toISOString();\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/times.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 665,
    "kind": "function",
    "name": "getStartTimeForLiveCharts",
    "memberof": "src/times.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/times.js~getStartTimeForLiveCharts",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/times.js",
    "importStyle": "{getStartTimeForLiveCharts}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 666,
    "kind": "function",
    "name": "getCurrentTime",
    "memberof": "src/times.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/times.js~getCurrentTime",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/times.js",
    "importStyle": "{getCurrentTime}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 667,
    "kind": "file",
    "name": "src/utils/strToColor.js",
    "content": "const colors = [\n    '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9',\n    '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'\n];\n\nconst hashCode = (str) => {\n    var hash = 0;\n    if (str.length === 0) return hash;\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = ((hash<<5)-hash)+char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n};\n\nexport default (str) => colors[Math.abs(hashCode(str)) % colors.length];\n",
    "static": true,
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/src/utils/strToColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 668,
    "kind": "variable",
    "name": "colors",
    "memberof": "src/utils/strToColor.js",
    "static": true,
    "longname": "src/utils/strToColor.js~colors",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/utils/strToColor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 669,
    "kind": "function",
    "name": "hashCode",
    "memberof": "src/utils/strToColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/strToColor.js~hashCode",
    "access": "public",
    "export": false,
    "importPath": "react-antd-app/src/utils/strToColor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 670,
    "kind": "function",
    "name": "strToColor",
    "memberof": "src/utils/strToColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/strToColor.js~strToColor",
    "access": "public",
    "export": true,
    "importPath": "react-antd-app/src/utils/strToColor.js",
    "importStyle": "strToColor",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# resmon-guiclient\nRepository for a guiclient component, which is part of resmon product.\n\n## Development\n- install npm\n- install yarn globally: `npm install --global yarn`\n- run `yarn` to install dependencies\n- run `yarn test` to test (use `--watch` to run in watch)\n- run `yarn start` to start dev server (with watch)\n- run `yarn lint-check` to start dev server (with watch)\n- you may want to install react and [redux](https://github.com/zalmoxisus/redux-devtools-extension) plugins for browsers\n\n## Structure overview\n- `/src/components` contains pure react components (without redux integration)\n- `/src/containers` contains react components which are connected to redux\n- `/src/pages` contains page-level react components\n- `/src/reducers` contains redux reducers - pure functions transforming store to another state\n- `/src/actions` contains action creators - functions returning actions that could be directly dispatched by redux\n- `/src/api.js` constains functions making api calls and returning promise-like object\n- `/src/index.js` entry file\n\n## CI\n- install npm\n- install yarn globally: `npm install --global yarn`\n- run `yarn` to install dependencies\n- run `yarn test` to test\n- run `yarn lint-check` to start dev server (with watch)\n- run `yarn build` to build GUI client to `/dist` folder - in result we'll have `.htaccess` config file fo apache2 and `index.html` fo browsers\n- run `AUTH_SERVER=bleh1 MONITORS=[{\\\"address\\\":\\\"aaa\\\",\\\"description\\\":\\\"bbb\\\"}] yarn build` to build with different auth server or monitor list \n- run `yarn doc` to generate docs in `/docs`\n",
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"react-antd-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"src/index.js\",\n  \"scripts\": {\n    \"start\": \"webpack-dev-server --config webpack.dev.js\",\n    \"build\": \"webpack --config webpack.prod.js\",\n    \"build:separate-js\": \"webpack --config webpack.separate-js.prod.js\",\n    \"test\": \"jest\",\n    \"doc\": \"esdoc -c esdoc.json\",\n    \"lint-check\": \"eslint src/ *.js && lesshint src/ --config .lesshint.js --reporter lesshint-reporter-stylisher\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"antd\": \"^3.5.3\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"connected-react-router\": \"^4.3.0\",\n    \"escape-string-regexp\": \"^1.0.5\",\n    \"highcharts\": \"^6.1.0\",\n    \"history\": \"^4.7.2\",\n    \"moment\": \"^2.22.2\",\n    \"qs\": \"^6.5.2\",\n    \"react\": \"^16.4.0\",\n    \"react-dom\": \"^16.4.0\",\n    \"react-redux\": \"^5.0.7\",\n    \"react-router\": \"^4.3.1\",\n    \"react-router-dom\": \"^4.3.1\",\n    \"redux\": \"^4.0.0\",\n    \"redux-saga\": \"^0.16.0\",\n    \"uniqid\": \"^5.0.2\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.3\",\n    \"babel-eslint\": \"^8.2.3\",\n    \"babel-jest\": \"^23.0.0\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-import\": \"^1.7.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"babel-preset-stage-0\": \"^6.24.1\",\n    \"copy-webpack-plugin\": \"^4.5.1\",\n    \"css-loader\": \"^0.28.11\",\n    \"enzyme\": \"^3.3.0\",\n    \"enzyme-adapter-react-16\": \"^1.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-plugin-jest\": \"^21.17.0\",\n    \"eslint-plugin-jsx\": \"^0.0.2\",\n    \"eslint-plugin-react\": \"^7.9.1\",\n    \"html-webpack-inline-source-plugin\": \"^0.0.10\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"jest\": \"^23.0.0\",\n    \"less\": \"^3.0.4\",\n    \"less-loader\": \"^4.1.0\",\n    \"lesshint\": \"^5.1.0\",\n    \"lesshint-reporter-stylisher\": \"^1.0.0\",\n    \"regenerator-runtime\": \"^0.11.1\",\n    \"style-loader\": \"^0.21.0\",\n    \"uglifyjs-webpack-plugin\": \"^1.2.5\",\n    \"webpack\": \"^4.8.3\",\n    \"webpack-clean\": \"^1.2.1\",\n    \"webpack-cli\": \"^2.1.4\",\n    \"webpack-dev-server\": \"^3.1.4\",\n    \"webpack-merge\": \"^4.1.2\"\n  },\n  \"jest\": {\n    \"globals\": {\n      \"DEFAULT_AUTH_SERVER\": \"\",\n      \"DEFAULT_MONITORS\": []\n    },\n    \"moduleFileExtensions\": [\n      \"js\",\n      \"jsx\"\n    ],\n    \"moduleDirectories\": [\n      \"node_modules\"\n    ],\n    \"moduleNameMapper\": {\n      \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/__mocks__/fileMock.js\",\n      \"\\\\.(css|less)$\": \"<rootDir>/__mocks__/styleMock.js\"\n    },\n    \"transform\": {\n      \"^.+\\\\.jsx?$\": \"babel-jest\"\n    },\n    \"setupTestFrameworkScriptFile\": \"<rootDir>/src/setupTests.js\"\n  }\n}\n",
    "longname": "/var/lib/jenkins/workspace/resmon_guiclient_doc/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]